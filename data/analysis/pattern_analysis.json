{
  "patterns": {
    "swiftui": {
      "count": 513,
      "files": [
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/hello-world/World/Orbit/OrbitModule.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/DestinationVideo.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectSelectionView.swift",
        "data/projects/destination-video/DestinationVideo/Views/DetailView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/UpNextView.swift",
        "data/projects/hello-world/World/Entities/SatelliteEntity+Configuration.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/Views/MainView.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/Lobby.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ImmersiveView.swift",
        "data/projects/destination-video/DestinationVideo/ContentView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/hello-world/World/WorldApp.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/VideoCardView.swift",
        "data/projects/Creating3DEntitiesInVisionOSWithRealityKit/Creating 3D Shapes/Views/ShapesView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/HomeView.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/App/EntryPoint.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/HeroView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Utilities/MathUtilities.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/EntityGestures/EntityGestureApp.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/MainView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/SelectorViews.swift",
        "data/projects/BOTAnist/BOT-anist/AppState+Exploration.swift",
        "data/projects/CreatingStereoscopicImageInVisionOS/Stereo-Image/App/EntryPoint.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/ARKitRoomTrackingApp.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/SystemPlayerView.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/AppModel.swift",
        "data/projects/CreatingAVolumetricWindowInVisionOS/Creating a Volumetric Window/Views/VolumetricWindow.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/RealityView+TouchControls.swift",
        "data/projects/hello-world/World/Modifiers/DragRotationModifier.swift",
        "data/projects/BOTAnist/BOT-anist/PlantAnimationProvider.swift",
        "data/projects/AddingADepthEffectToTextInVisionOS/DepthText/Views/MainView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Model/Category.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/WatchNowView.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/happy-beam/HappyBeam/Views/Start.swift",
        "data/projects/DestinationVideo/DestinationVideo/DestinationTabs.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/TooltipView.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/SwiftUIArch/SwiftUIArcView.swift",
        "data/projects/HelloWorld/World/Modifiers/DragRotationModifier.swift",
        "data/projects/hello-world/World/RealityViews/Earth.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/Presets/PresetBrushView.swift",
        "data/projects/destination-video/DestinationVideo/Player/UpNextView.swift",
        "data/projects/CreatingAVolumetricWindowInVisionOS/Creating a Volumetric Window/App/EntryPoint.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/RealityKitDrawingApp.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/DestinationVideo.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/DetailView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/RobotView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Model/visionOS/ImmersiveEnvironment.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/ListEntryView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/destination-video/DestinationVideo/Views/WatchNowView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/ObjectTrackingRealityView.swift",
        "data/projects/hello-world/World/Orbit/Orbit.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/CategoryListView.swift",
        "data/projects/hello-world/World/Solar System/SolarSystemModule.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/ObjectPlacementApp.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/ContentView.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowModel.swift",
        "data/projects/CreatingGlassMaterialFor3DShapesInVisionOS/Glass/Views/MainView.swift",
        "data/projects/destination-video/DestinationVideo/Model/visionOS/ImmersiveEnvironment.swift",
        "data/projects/HelloWorld/World/WorldApp.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/hello-world/World/Modifiers/TypeTextModifier.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Views/MainView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/WatchNowView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/ContentView.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/CaseIterableExtensions.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ArtistWorkflowExampleApp.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Model/visionOS/EnvironmentStateHandler.swift",
        "data/projects/AddingADepthEffectToTextInVisionOS/DepthText/Views/DepthTextView.swift",
        "data/projects/creating-3d-entities-with-realitykit/Creating 3D Shapes/App/EntryPoint.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ImageButton.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView+Snapping.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/SystemPlayerView.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/ImmersiveView.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Views/MainView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/DeleteButton.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/CategoryView.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/App/EntryPoint.swift",
        "data/projects/destination-video/DestinationVideo/Model/visionOS/EnvironmentStateHandler.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenForeground.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentToolbar.swift",
        "data/projects/hello-world/World/Solar System/SolarSystem.swift",
        "data/projects/HappyBeam/HappyBeam/Views/HappyBeam.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/CategoryListView.swift",
        "data/projects/HelloWorld/World/Entities/Entity+Trace.swift",
        "data/projects/DestinationVideo/DestinationVideo/Model/Tabs.swift",
        "data/projects/HelloWorld/World/Settings/SolarSystemSettings.swift",
        "data/projects/HappyBeam/HappyBeam/Views/SoloPlay.swift",
        "data/projects/HelloWorld/World/Orbit/OrbitModule.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/DetailView.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/GeneratingInteractiveGeometrySampleApp.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/SceneReconstructionExampleApp.swift",
        "data/projects/CreatingANewSwiftUIWindowViewInVisionOS/Creating New Windows/Views/OpenWindowView.swift",
        "data/projects/hello-world/World/Modules/ModuleDetail.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/HomeView.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ImmersiveEnvironmentPickerView.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Systems/DrawableQueueComponent.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ImageButton.swift",
        "data/projects/HappyBeam/HappyBeam/Views/SoloScore.swift",
        "data/projects/bot-anist/BOT-anist/Views/SelectorViews.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementMenuView.swift",
        "data/projects/hello-world/World/Entities/EarthEntity.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/ContentView.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/CarView.swift",
        "data/projects/hello-world/World/Settings/OrbitSettings.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/HeartGestureModel.swift",
        "data/projects/HelloWorld/World/Modules/ModuleCard.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Model/visionOS/EnvironmentStateHandler.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/MeadowApp.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotData.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/bot-anist/BOT-anist/BOTanistApp.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/PlacementTooltip.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/DetailView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/CategoryListView.swift",
        "data/projects/HappyBeam/HappyBeam/Extensions.swift",
        "data/projects/happy-beam/HappyBeam/Views/SoloPlay.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/PaletteView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Model/Constants.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/App/EntryPoint.swift",
        "data/projects/hello-world/World/Orbit/OrbitToggle.swift",
        "data/projects/HelloWorld/World/Modules/Modules.swift",
        "data/projects/HelloWorld/World/RealityViews/Starfield.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/ContentView.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamApp.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/App/EntryPoint.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/Players.swift",
        "data/projects/HelloWorld/World/Globe/GlobeControls.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Views/MainView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/StartScreenView.swift",
        "data/projects/happy-beam/HappyBeam/GameModel.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/VideoInfoView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/UpNextView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView+Drag.swift",
        "data/projects/hello-world/World/Modules/TableOfContents.swift",
        "data/projects/diorama/Diorama/LearnMoreView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/ListEntryView.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotCustomizationView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/WatchNowView.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotView.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/ContentView.swift",
        "data/projects/destination-video/DestinationVideo/Views/GradientView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/LibraryView.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Systems/ClosureComponent.swift",
        "data/projects/Creating2DShapesInVisionOSWithSwiftUI/Creating 2D Shapes/EntryPoint.swift",
        "data/projects/bot-anist/BOT-anist/AppState+Exploration.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/Style.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/CategoryView.swift",
        "data/projects/hello-world/World/Entities/Entity+Trace.swift",
        "data/projects/HelloWorld/World/RealityViews/Earth.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/DrawingMeshView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/PlacementTooltip.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Model/Data/Video.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/BillboardSystem.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/TooltipView.swift",
        "data/projects/BOTAnist/BOT-anist/BOTanistApp.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/hello-world/World/Solar System/SolarSystemToggle.swift",
        "data/projects/destination-video/DestinationVideo/Model/Data/PreviewData.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/SwiftUIArch/SwiftUIArcView.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowModel.swift",
        "data/projects/BOTAnist/BOT-anist/Views/OrnamentView.swift",
        "data/projects/Creating3DEntitiesInVisionOSWithRealityKit/Creating 3D Shapes/App/EntryPoint.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/hello-world/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView+Rotation.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Extensions/SIMD3.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/App/EntryPoint.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Views/MainView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ImmersiveEnvironmentPickerView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ImmersiveEnvironmentPickerView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/DeleteButton.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/FollowSystemAndComponent/FollowComponent.swift",
        "data/projects/HelloWorld/World/Globe/GlobeModule.swift",
        "data/projects/hello-world/World/Settings/GlobeSettings.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/UIViewArch/UIViewArcRepresentable.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/GradientView.swift",
        "data/projects/HelloWorld/World/Modules/ModuleDetail.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/VideoListView.swift",
        "data/projects/adding-a-depth-effect-to-text-in-visionos/DepthText/Views/MainView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/ContentView.swift",
        "data/projects/HelloWorld/World/Settings/EarthSettings.swift",
        "data/projects/diorama/Diorama/ContentView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/ContentView.swift",
        "data/projects/CreatingGlassMaterialFor3DShapesInVisionOS/Glass/App/EntryPoint.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystemControls.swift",
        "data/projects/creating-3d-entities-with-realitykit/Creating 3D Shapes/Views/ShapesView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementMenuView.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/App/HandTracking.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/hello-world/World/Globe/Globe.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ContentView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Model/Data/Video.swift",
        "data/projects/BOTAnist/BOT-anist/Views/RobotCustomizationView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/hello-world/World/Settings/SliderGridRow.swift",
        "data/projects/destination-video/DestinationVideo/Views/LibraryView.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Model/Data/PreviewData.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/ImmersiveView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/PlayerView.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/ColorExtensions.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/LibraryView.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Views/HeadPositionView.swift",
        "data/projects/CreatingGlassMaterialFor3DShapesInVisionOS/Glass/Views/GlassView.swift",
        "data/projects/HelloWorld/World/Systems/RotationSystem.swift",
        "data/projects/hello-world/World/RealityViews/Sun.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/TogglePanel.swift",
        "data/projects/BOTAnist/BOT-anist/Systems/JointPinSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasPlacementView.swift",
        "data/projects/hello-world/World/Entities/SatelliteEntity.swift",
        "data/projects/HelloWorld/World/Settings/GlobeSettings.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Generators/MeshAnchorGenerator.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/CALayerArch/CALayerArcView.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystemModule.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Views/HandTrackingView.swift",
        "data/projects/Creating2DShapesInVisionOSWithSwiftUI/Creating 2D Shapes/Triangle.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/App/EntryPoint.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/AppModel.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState.swift",
        "data/projects/HelloWorld/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Model/Constants.swift",
        "data/projects/DestinationVideo/DestinationVideo/Model/Data/Video.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Views/DecibelSlider.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Systems/TurnTableSystem.swift",
        "data/projects/HelloWorld/World/Orbit/OrbitToggle.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Character.swift",
        "data/projects/DisplayingTextInVisionOS/Text/App/TextApp.swift",
        "data/projects/BOTAnist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/destination-video/DestinationVideo/Views/CategoryView.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/RealityView+KeyboardControls.swift",
        "data/projects/Creating2DShapesInVisionOSWithSwiftUI/Creating 2D Shapes/ShapesView.swift",
        "data/projects/bot-anist/BOT-anist/Views/StartScreenView.swift",
        "data/projects/destination-video/DestinationVideo/Views/HeroView.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/CALayerArch/CALayerArcRepresentable.swift",
        "data/projects/HappyBeam/HappyBeam/GameModel.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/DisplayingTextInVisionOS/Text/Views/TextView.swift",
        "data/projects/destination-video/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/ButtonStyle.swift",
        "data/projects/CreatingStereoscopicImageInVisionOS/Stereo-Image/Views/StereoImage.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/ImmersiveView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/ObjectTrackingRealityView.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/App/EntryPoint.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Canvas/Stroke.swift",
        "data/projects/hello-world/World/Settings/SolarSystemSettings.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/ColorExtensions.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectSelectionView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/ObjectTrackingApp.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/hello-world/World/Settings/SettingsButton.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Extensions/RealityViewExtensions.swift",
        "data/projects/adding-a-depth-effect-to-text-in-visionos/DepthText/App/EntryPoint.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/PlacementTooltip.swift",
        "data/projects/happy-beam/HappyBeam/Views/SoloScore.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/GradientView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/VideoCardView.swift",
        "data/projects/bot-anist/BOT-anist/Systems/JointPinSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/BrushTypeView.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter+Movement.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/VideoCardView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Model/Category.swift",
        "data/projects/destination-video/DestinationVideo/PlayerWindow.swift",
        "data/projects/hello-world/World/Entities/EarthEntity+Configuration.swift",
        "data/projects/destination-video/DestinationVideo/Views/ButtonStyle.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ImmersiveView.swift",
        "data/projects/Creating2DShapesInVisionOSWithSwiftUI/Creating 2D Shapes/MainView.swift",
        "data/projects/hello-world/World/RealityViews/Starfield.swift",
        "data/projects/swift-splash/SwiftSplash/Views/SplashScreenView.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/MainView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/CreatingStereoscopicImageInVisionOS/Stereo-Image/Views/MainView.swift",
        "data/projects/HelloWorld/World/Entities/SatelliteEntity.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/ButtonStyle.swift",
        "data/projects/HelloWorld/World/Settings/SliderGridRow.swift",
        "data/projects/destination-video/DestinationVideo/Model/Constants.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/GradientView.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Views/PaintingView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Model/visionOS/EnvironmentStateHandler.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/PointOfInterestComponent.swift",
        "data/projects/HelloWorld/World/Settings/SettingsButton.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Settings.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/DestinationTabs.swift",
        "data/projects/happy-beam/HappyBeam/Views/MultiPlay.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/UpNextView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/UnderwaterView.swift",
        "data/projects/destination-video/DestinationVideo/Player/SystemPlayerView.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotData.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Components/ClosureComponent.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/HeroView.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/MainView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/CALayerArch/CALayerArcView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/DisplayingTextInVisionOS/Text/Views/MainView.swift",
        "data/projects/destination-video/DestinationVideo/Model/Data/Video.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/BeamCollisions.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/EditTrackPieceView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/MultiScore.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/HeroView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/EditTrackPieceView.swift",
        "data/projects/destination-video/DestinationVideo/Model/NavigationNode.swift",
        "data/projects/HelloWorld/World/Entities/SatelliteEntity+Configuration.swift",
        "data/projects/destination-video/DestinationVideo/DestinationVideo.swift",
        "data/projects/BOTAnist/BOT-anist/Views/ContentView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectSelectionView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/SplashScreenView.swift",
        "data/projects/adding-a-depth-effect-to-text-in-visionos/DepthText/Views/DepthTextView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Model/NavigationNode.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/DestinationTabs.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Model/visionOS/ImmersiveEnvironment.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/App/EntryPoint.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/UIViewArch/UIViewArcView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/MultiPlay.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/ObjectPlacementApp.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/HomeView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MovementSettingsView.swift",
        "data/projects/HelloWorld/World/Model/ViewModel.swift",
        "data/projects/hello-world/Packages/WorldAssets/Sources/WorldAssets/SunPositionSystem.swift",
        "data/projects/happy-beam/HappyBeam/Views/HappyBeam.swift",
        "data/projects/hello-world/World/Globe/GlobeControls.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/AppDelegate.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/Style/SolidBrushStyleProvider.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/InfoLabel.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/MultiDimensionalImmersiveContentApp.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Model/Tabs.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Model/Data/PreviewData.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/Preview+AppStateEnvironment.swift",
        "data/projects/DestinationVideo/DestinationVideo/Model/Category.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/RealityView+TouchControls.swift",
        "data/projects/HelloWorld/Packages/WorldAssets/Sources/WorldAssets/SunPositionSystem.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/InfoLabel.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Views/DrawableView.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/RealityView+KeyboardControls.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/hello-world/World/Settings/EarthSettings.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/TrailAnimationSystem.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/CarView.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Extensions/SIMD3.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/DestinationVideo/DestinationVideo/Model/Data/PreviewData.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter+Movement.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfTrackButtonsView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/PostProcessing.swift",
        "data/projects/bot-anist/BOT-anist/AppState.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/AppModel.swift",
        "data/projects/happy-beam/HappyBeam/Extensions.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/ContentView.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Extensions/SIMD3.swift",
        "data/projects/BOTAnist/BOT-anist/AppState.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/CategoryView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentToolbar.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/Preview+AppStateEnvironment.swift",
        "data/projects/DestinationVideo/DestinationVideo/ContentView.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/hello-world/World/Entities/Entity+Sunlight.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Views/DecibelSlider.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamApp.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/PlayerWindow.swift",
        "data/projects/hello-world/World/Modules/Modules.swift",
        "data/projects/hello-world/World/Solar System/SolarSystemControls.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/ObjectTrackingApp.swift",
        "data/projects/CreatingANewSwiftUIWindowViewInVisionOS/Creating New Windows/Views/MainView.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/BeamCollisions.swift",
        "data/projects/destination-video/DestinationVideo/Views/VideoCardView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/InfoLabel.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/VideoListView.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/Creating2DShapesInVisionOSWithSwiftUI/Creating 2D Shapes/Line.swift",
        "data/projects/HelloWorld/World/Entities/Entity+Sunlight.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Tracker/HeadPositionTracker.swift",
        "data/projects/happy-beam/HappyBeam/Views/Lobby.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Views/EntityView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/DrawingDocument.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/HeadTrackingApp.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/App/Drawable.swift",
        "data/projects/diorama/Diorama/AttachmentsProvider.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/HappyBeam/HappyBeam/Views/Start.swift",
        "data/projects/DestinationVideo/DestinationVideo/Model/Constants.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Components/GestureComponent.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasVisualizationView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Model/visionOS/ImmersiveEnvironment.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/destination-video/DestinationVideo/Model/Tabs.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/VideoInfoView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/AppState.swift",
        "data/projects/HelloWorld/World/RealityViews/Sun.swift",
        "data/projects/HelloWorld/World/Modifiers/TypeTextModifier.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ContentView.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/AppState.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Textures/ProceduralTextureGenerator.swift",
        "data/projects/bot-anist/BOT-anist/PlantAnimationProvider.swift",
        "data/projects/destination-video/DestinationVideo/DestinationTabs.swift",
        "data/projects/HelloWorld/World/Entities/EarthEntity+Configuration.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ImmersiveEnvironmentPickerView.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/WorldOcclusionView.swift",
        "data/projects/HelloWorld/World/Globe/GlobeToggle.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PlaceStartPieceView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView+Drag.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/App/EntryPoint.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/VideoInfoView.swift",
        "data/projects/bot-anist/BOT-anist/Views/OrnamentView.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasConfigurationView.swift",
        "data/projects/CreatingANewSwiftUIWindowViewInVisionOS/Creating New Windows/Views/NewWindowView.swift",
        "data/projects/destination-video/DestinationVideo/Views/CategoryListView.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/Views/SceneReconstructionView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/destination-video/DestinationVideo/Model/Category.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/EntityExtensions.swift",
        "data/projects/hello-world/World/Settings/SatelliteSettings.swift",
        "data/projects/happy-beam/HappyBeam/Views/MultiScore.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/RealityKitAnimationApp.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/VideoListView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView+Rotation.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/UIViewArch/UIViewArcRepresentable.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/HelloWorld/World/Settings/OrbitSettings.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystemToggle.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/CaseIterableExtensions.swift",
        "data/projects/HelloWorld/World/Orbit/Orbit.swift",
        "data/projects/bot-anist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/ParameterView.swift",
        "data/projects/hello-world/World/Globe/GlobeToggle.swift",
        "data/projects/AddingADepthEffectToTextInVisionOS/DepthText/App/EntryPoint.swift",
        "data/projects/HelloWorld/World/Modules/TableOfContents.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/TooltipView.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/UIViewArch/UIViewArcView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfTrackButtonsView.swift",
        "data/projects/destination-video/DestinationVideo/Views/VideoListView.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/Players.swift",
        "data/projects/swift-splash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/SystemPlayerView.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Canvas/PaintingCanvas.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/PlayerView.swift",
        "data/projects/swift-splash/SwiftSplash/SwiftSplashApp.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/PlayerView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/InfoLabel.swift",
        "data/projects/DestinationVideo/DestinationVideo/DestinationVideo.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Views/ImmersionView.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/CALayerArch/CALayerArcRepresentable.swift",
        "data/projects/destination-video/DestinationVideo/Player/PlayerView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/DeleteButton.swift",
        "data/projects/hello-world/World/Model/ViewModel.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/ButtonStyle.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/InfoLabel.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/SceneReconstructionExampleApp.swift",
        "data/projects/DestinationVideo/DestinationVideo/PlayerWindow.swift",
        "data/projects/bot-anist/BOT-anist/Views/ContentView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/HomeView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PlaceStartPieceView.swift",
        "data/projects/HelloWorld/World/Entities/EarthEntity.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Model/Tabs.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Model/NavigationNode.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/FollowSystemAndComponent/FollowSystem.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView+Snapping.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Model/NavigationNode.swift",
        "data/projects/HelloWorld/World/Globe/Globe.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/ObjectPlacementApp.swift",
        "data/projects/hello-world/World/Systems/RotationSystem.swift",
        "data/projects/HelloWorld/World/Settings/SatelliteSettings.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/HomeView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/LibraryView.swift",
        "data/projects/SwiftSplash/SwiftSplash/SwiftSplashApp.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/EntityGestures/ContentView.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/UIPortalView.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/ARKitRoomTrackingApp.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementMenuView.swift",
        "data/projects/hello-world/World/Globe/GlobeModule.swift",
        "data/projects/destination-video/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/CreatingANewSwiftUIWindowViewInVisionOS/Creating New Windows/App/EntryPoint.swift",
        "data/projects/hello-world/World/Modules/ModuleCard.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Extensions/GestureExtensions.swift",
        "data/projects/diorama/Diorama/DioramaApp.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/EntityExtensions.swift",
        "data/projects/destination-video/DestinationVideo/Views/VideoInfoView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/PlayerWindow.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/MultiDimensionalImmersiveContentApp.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystem.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Systems/ClosureComponent.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/HeartGestureModel.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/App/EntryPoint.swift",
        "data/projects/diorama/Diorama/DioramaView.swift"
      ],
      "examples": [
        "\nAbstract:\nThe main app class.\n*/\n\nimport SwiftUI\nimport SwiftSplashTrackPieces\nimport RealityKit\n\n@main\n@MainActor",
        "import Combine\nimport Foundation\nimport OSLog\nimport RealityKit\nimport SwiftSplashTrackPieces\nimport SwiftUI\nimport UIKit\n\n/// This contains one case for each connectable piece except the start and goal pieces, which are handled differently.\npublic enum TilePieceKey: String, CaseIterable, Codable, Sendable {\n    case slide1 = \"slide_01\" // Straight piece",
        "*/\nimport ARKit\nimport Combine\nimport Foundation\nimport RealityKit\nimport SwiftUI\nimport SwiftSplashTrackPieces\nimport UIKit\n\nextension AppState {\n    "
      ],
      "co_occurrences": {
        "realitykit": 217,
        "state": 272,
        "on_change": 90,
        "component_access": 85,
        "position": 57,
        "rotation": 50,
        "hierarchy_action": 246,
        "hierarchy_query": 36,
        "attach_position": 52,
        "view": 374,
        "text": 499,
        "animation": 35,
        "on_appear": 63,
        "reality_view": 67,
        "event_subscription": 36,
        "tap_gesture": 13,
        "gesture": 32,
        "simultaneous_gesture": 16,
        "with_animation": 21,
        "on_disappear": 34,
        "on_tap_gesture": 7,
        "transition": 30,
        "task": 60,
        "scale": 56,
        "component_update": 16,
        "scene_update": 16,
        "entity": 4,
        "attach_orientation": 23,
        "transform_action": 14,
        "model_entity": 19,
        "state_object": 3,
        "drag_gesture": 19,
        "transform": 43,
        "animation_controller": 8,
        "animation_action": 21,
        "event_handling": 5,
        "view_attach": 1,
        "entity_subscription": 3,
        "high_priority_gesture": 1,
        "component_system": 1,
        "entity_system": 1,
        "observed_object": 2
      },
      "projects": [
        "GeneratingProceduralTexturesInVisionOS",
        "AllowingObjectsToInteractWithRealWorldObjects",
        "happy-beam",
        "DisplayingA3DEnvironmentThroughAPortal",
        "SwiftSplash",
        "creating-an-interactive-3d-model-in-visionos",
        "enabling-video-reflections-in-an-immersive-environment",
        "ApplyingMeshToRealWorldSurroundings",
        "CreatingStereoscopicImageInVisionOS",
        "building-an-immersive-media-viewing-experience",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "AddingADepthEffectToTextInVisionOS",
        "combining-2d-and-3d-views-in-an-immersive-app",
        "BuildingLocalExperiencesWithRoomTracking",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "CreatingGlassMaterialFor3DShapesInVisionOS",
        "SceneReconstructionExample",
        "PresentingAnArtistsScene",
        "PlayingSpatialAudioInVisionOS",
        "DestinationVideo",
        "BOTAnist",
        "destination-video",
        "placing-content-on-detected-planes",
        "diorama",
        "exploring-object-tracking-with-arkit",
        "GeneratingInteractiveGeometryWithRealityKit",
        "CreatingANewSwiftUIWindowViewInVisionOS",
        "creating-3d-entities-with-realitykit",
        "HappyBeam",
        "TransformingRealityKitEntitiesUsingGestures",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "CreatingA3DModelWithGesturesInVisionOS",
        "bot-anist",
        "Creating2DShapesInVisionOSWithSwiftUI",
        "Creating3DEntitiesInVisionOSWithRealityKit",
        "ExploringObjectTrackingWithARKit",
        "TrackingAndVisualizingHandMovement",
        "CreatingImmersiveSpacesInVisionOSWithSwiftUI",
        "CreatingAVolumetricWindowInVisionOS",
        "adding-a-depth-effect-to-text-in-visionos",
        "ObjectPlacementExample",
        "DisplayingA3DObjectThatMovesToStayInAPersonsView",
        "CreatingASpatialDrawingAppWithRealityKit",
        "playing-spatial-audio",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "HelloWorld",
        "DisplayingTextInVisionOS",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "ConstructAnImmersiveEnvironmentForVisionOS",
        "swift-splash",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {}
    },
    "realitykit": {
      "count": 380,
      "files": [
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/RegionSpecificComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/hello-world/World/Orbit/OrbitModule.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ImmersiveView.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/Generators/MeshAnchorGenerator.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Utilities/GeometryUtilities.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+Transparency.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/CharacterStates.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/ShaderGraphMaterials.swift",
        "data/projects/HelloWorld/World/Systems/TraceSystem.swift",
        "data/projects/Creating3DEntitiesInVisionOSWithRealityKit/Creating 3D Shapes/Views/ShapesView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvas.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+RideRunning.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/EntityGestures/EntityGestureApp.swift",
        "data/projects/BOTAnist/BOT-anist/Views/SelectorViews.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Seaweed.swift",
        "data/projects/BOTAnist/BOT-anist/AppState+Exploration.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+TrackUpdates.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Visualizer/AxisVisualizer.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/AppModel.swift",
        "data/projects/CreatingAVolumetricWindowInVisionOS/Creating a Volumetric Window/Views/VolumetricWindow.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/RealityView+TouchControls.swift",
        "data/projects/hello-world/World/Modifiers/DragRotationModifier.swift",
        "data/projects/BOTAnist/BOT-anist/PlantAnimationProvider.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/SparkleDrawingMeshGenerator+Simulation.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/happy-beam/HappyBeam/GlobalEntities.swift",
        "data/projects/HelloWorld/World/Modifiers/DragRotationModifier.swift",
        "data/projects/swift-splash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Extensions/Entity+Utilities.swift",
        "data/projects/hello-world/World/RealityViews/Earth.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/SolidBrushComponent.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/diorama/Diorama/ViewModel.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/Presets/PresetBrushView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceLoading.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/SparkleDrawingMeshGenerator+LowLevelMesh.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+Transparency.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Visualizer/AxisVisualizer.swift",
        "data/projects/BOTAnist/BOT-anist/Views/RobotView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Model/visionOS/ImmersiveEnvironment.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundView.swift",
        "data/projects/HappyBeam/HappyBeam/GlobalEntities.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/ObjectTrackingRealityView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroPlantComponent.swift",
        "data/projects/hello-world/World/Orbit/Orbit.swift",
        "data/projects/SwiftSplash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Components/Connectable.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/HungerSystem.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/ContentView.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowModel.swift",
        "data/projects/destination-video/DestinationVideo/Model/visionOS/ImmersiveEnvironment.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotProvider.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/Terrain/TerrainHeightMapGenerator.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/CaseIterableExtensions.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Model/visionOS/EnvironmentStateHandler.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView+Snapping.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/ImmersiveView.swift",
        "data/projects/bot-anist/Packages/BOTanistAssets/Sources/BOTanistAssets/Extensions/EntityExtensions.swift",
        "data/projects/destination-video/DestinationVideo/Model/visionOS/EnvironmentStateHandler.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenForeground.swift",
        "data/projects/SwiftSplash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Components/ConnectableStateComponent.swift",
        "data/projects/SwiftSplash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Extensions/Entity+Utilities.swift",
        "data/projects/hello-world/World/Solar System/SolarSystem.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/BillboardComponent.swift",
        "data/projects/HappyBeam/HappyBeam/Views/HappyBeam.swift",
        "data/projects/diorama/Diorama/Components.swift",
        "data/projects/HelloWorld/World/Entities/Entity+Trace.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FlockingSystem.swift",
        "data/projects/HelloWorld/World/Orbit/OrbitModule.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Extensions/EnvironmentResource.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MotionComponent.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/AppState.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/HomeView.swift",
        "data/projects/Creating3DEntitiesInVisionOSWithRealityKit/Creating 3D Shapes/Entities/ShapesView+Entities.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Systems/DrawableQueueComponent.swift",
        "data/projects/bot-anist/BOT-anist/Views/SelectorViews.swift",
        "data/projects/hello-world/World/Entities/EarthEntity.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/ContentView.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/CarView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Utilities/ModelLoader.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FoodPool.swift",
        "data/projects/hello-world/World/Systems/TraceSystem.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Model/visionOS/EnvironmentStateHandler.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotData.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+TrackUpdates.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/VectorMath.swift",
        "data/projects/HappyBeam/HappyBeam/Extensions.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/PaletteView.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/Compute/ComputeSystem.swift",
        "data/projects/HelloWorld/World/RealityViews/Starfield.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/ContentView.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamApp.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState.swift",
        "data/projects/happy-beam/HappyBeam/GameModel.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/Extensions/MeshResource.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView+Drag.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/EnvironmentLoader.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponentExtension.swift",
        "data/projects/creating-3d-entities-with-realitykit/Creating 3D Shapes/Entities/ShapesView+Entities.swift",
        "data/projects/diorama/Diorama/LearnMoreView.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotCustomizationView.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotView.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/ContentView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+RideRunning.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Systems/ClosureComponent.swift",
        "data/projects/swift-splash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Extensions/SIMD+Utilities.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Starfish.swift",
        "data/projects/bot-anist/BOT-anist/AppState+Exploration.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/DrawingSource.swift",
        "data/projects/hello-world/World/Entities/Entity+Trace.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/Extensions.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Extensions/Entity.swift",
        "data/projects/HelloWorld/World/RealityViews/Earth.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/DrawingMeshView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+Phases.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/SparkleDrawingMeshGenerator.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/BillboardSystem.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowModel.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/hello-world/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/AnchorEntityInputProvider.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView+Rotation.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Fish.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/CurveExtruder.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Utilities/ModelLoader.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/FollowSystemAndComponent/FollowComponent.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Extensions/Entity+ObjectTracking.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/ContentView.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/TrailComponent.swift",
        "data/projects/diorama/Diorama/ContentView.swift",
        "data/projects/BOTAnist/Packages/BOTanistAssets/Sources/BOTanistAssets/Extensions/EntityExtensions.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMesh/HeightMapGenerator.swift",
        "data/projects/creating-3d-entities-with-realitykit/Creating 3D Shapes/Views/ShapesView.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ContentView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/BOTAnist/BOT-anist/Views/RobotCustomizationView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Utilities/GeometryUtilities.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceSelection.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppConfig.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMesh/HeightMapMesh.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/ImmersiveView.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/ColorExtensions.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Views/HeadPositionView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/SoundEffects.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/EntityModel.swift",
        "data/projects/CreatingGlassMaterialFor3DShapesInVisionOS/Glass/Views/GlassView.swift",
        "data/projects/HelloWorld/World/Systems/RotationSystem.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Utilities/PlaneAnchorHandler.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Entity+Distance.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/AppState.swift",
        "data/projects/hello-world/World/RealityViews/Sun.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/BOTAnist/BOT-anist/Systems/JointPinSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasPlacementView.swift",
        "data/projects/hello-world/World/Entities/SatelliteEntity.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Generators/MeshAnchorGenerator.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Views/HandTrackingView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState.swift",
        "data/projects/HelloWorld/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Systems/TurnTableSystem.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Character.swift",
        "data/projects/BOTAnist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/Extensions.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/RealityView+KeyboardControls.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Utilities/PlaneProjector.swift",
        "data/projects/HappyBeam/HappyBeam/GameModel.swift",
        "data/projects/swift-splash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Components/ConnectableStateComponent.swift",
        "data/projects/CreatingStereoscopicImageInVisionOS/Stereo-Image/Views/StereoImage.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/ImmersiveView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/ObjectTrackingRealityView.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Canvas/Stroke.swift",
        "data/projects/swift-splash/SwiftSplash/Extensions/Entity+SwiftSplash.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/ColorExtensions.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlacementState.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Extensions/RealityViewExtensions.swift",
        "data/projects/bot-anist/BOT-anist/Systems/JointPinSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/BrushTypeView.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter+Movement.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Utilities/GeometryUtilities.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ImmersiveView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/AnimationSpeedSystem.swift",
        "data/projects/hello-world/World/RealityViews/Starfield.swift",
        "data/projects/swift-splash/SwiftSplash/Views/SplashScreenView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Utilities/PlaneProjector.swift",
        "data/projects/HelloWorld/World/Entities/SatelliteEntity.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/Extensions.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Views/PaintingView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Model/visionOS/EnvironmentStateHandler.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/PointOfInterestComponent.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/Extensions.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Settings.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/Piece.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/UnderwaterView.swift",
        "data/projects/diorama/Diorama/FlockingSystem.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotData.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Components/ClosureComponent.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/hello-world/Packages/WorldAssets/Sources/WorldAssets/WorldAssets.swift",
        "data/projects/CreatingStereoscopicImageInVisionOS/Stereo-Image/Creator/StereoImageCreator.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/BeamCollisions.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/Sine Wave/SineWaveHeightMapGenerator.swift",
        "data/projects/BOTAnist/BOT-anist/Views/ContentView.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/Extensions/Entity.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/SplashScreenView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/WanderSystem.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Model/visionOS/ImmersiveEnvironment.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MotionSystem.swift",
        "data/projects/hello-world/Packages/WorldAssets/Sources/WorldAssets/SunPositionSystem.swift",
        "data/projects/happy-beam/HappyBeam/Views/HappyBeam.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/RealityView+TouchControls.swift",
        "data/projects/HelloWorld/Packages/WorldAssets/Sources/WorldAssets/SunPositionSystem.swift",
        "data/projects/SwiftSplash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Extensions/SIMD+Utilities.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/RealityView+KeyboardControls.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Extensions/Float.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/SoundEffects.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Utilities/PlaneAnchorHandler.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MeshAnchorTracker.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceLoading.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/TrailAnimationSystem.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/CarView.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Extensions/EntityExtensions.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMesh/PlaneMesh.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/SolidDrawingMeshGenerator.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter+Movement.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/Extensions.swift",
        "data/projects/bot-anist/BOT-anist/Robot/AnimationStateMachine.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/PostProcessing.swift",
        "data/projects/bot-anist/BOT-anist/AppState.swift",
        "data/projects/BOTAnist/BOT-anist/Components/JointPinComponent.swift",
        "data/projects/happy-beam/HappyBeam/Extensions.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotProvider+Loading.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/ContentView.swift",
        "data/projects/BOTAnist/BOT-anist/AppState.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Utilities/ModelLoader.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+Phases.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/diorama/Diorama/FlockingComponent.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Entities/Hand.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Entities/Finger.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/hello-world/World/Entities/Entity+Sunlight.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamApp.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/SolidBrushVertex+LowLevelMesh.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotProvider.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FearSystem.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/BeamCollisions.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Scattering.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/HelloWorld/World/Entities/Entity+Sunlight.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/SparkleBrushVertex+LowLevelMesh.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Views/EntityView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/DrawingDocument.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMesh/HeightMapMeshEntity.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/AppState.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/StationaryRobotComponent.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/App/ReferenceObjectLoader.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Components/GestureComponent.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasVisualizationView.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Systems/DrawableQueueSystem.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Model/visionOS/ImmersiveEnvironment.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Utilities/PlaneProjector.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/AppState.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Extensions/Entity.swift",
        "data/projects/HelloWorld/World/RealityViews/Sun.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Utilities/PlaneAnchorHandler.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMesh/HeightMap.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ContentView.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/AppState.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Textures/ProceduralTextureGenerator.swift",
        "data/projects/bot-anist/BOT-anist/PlantAnimationProvider.swift",
        "data/projects/BOTAnist/Packages/BOTanistAssets/Sources/BOTanistAssets/Components/PlantComponent.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/WorldOcclusionView.swift",
        "data/projects/bot-anist/Packages/BOTanistAssets/Sources/BOTanistAssets/Components/PlantComponent.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlacementState.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView+Drag.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Trackers/PaintingHandTracking.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/App/ReferenceObjectLoader.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasConfigurationView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/CurveExtruderWithEndcaps.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/Views/SceneReconstructionView.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/EntityExtensions.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/SparkleBrushComponent.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView+Rotation.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/LODSystem.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/CaseIterableExtensions.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/EntityMoverComponent.swift",
        "data/projects/HelloWorld/World/Orbit/Orbit.swift",
        "data/projects/bot-anist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/Extensions.swift",
        "data/projects/SwiftSplash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Components/MarkerComponents.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/EntityModel.swift",
        "data/projects/swift-splash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Canvas/PaintingCanvas.swift",
        "data/projects/swift-splash/SwiftSplash/SwiftSplashApp.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundComponent.swift",
        "data/projects/swift-splash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Components/Connectable.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/Piece.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Views/ImmersionView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceSelection.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/bot-anist/BOT-anist/Views/ContentView.swift",
        "data/projects/HelloWorld/World/Entities/EarthEntity.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentView.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/Water/WaterSurfaceHeightMapGenerator.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/FollowSystemAndComponent/FollowSystem.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView+Snapping.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlacementState.swift",
        "data/projects/HelloWorld/Packages/WorldAssets/Sources/WorldAssets/WorldAssets.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/AnimationStateMachine.swift",
        "data/projects/hello-world/World/Systems/RotationSystem.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/HomeView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Extensions/Entity+SwiftSplash.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenView.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppConfig.swift",
        "data/projects/SwiftSplash/SwiftSplash/SwiftSplashApp.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/EntityGestures/ContentView.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/UIPortalView.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Extensions/GestureExtensions.swift",
        "data/projects/diorama/Diorama/DioramaApp.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/EntityExtensions.swift",
        "data/projects/swift-splash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Components/MarkerComponents.swift",
        "data/projects/bot-anist/BOT-anist/Components/JointPinComponent.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Extensions/Entity+ObjectTracking.swift",
        "data/projects/CreatingGlassMaterialFor3DShapesInVisionOS/Glass/Extentions/Entity.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystem.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Systems/ClosureComponent.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotProvider+Loading.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/diorama/Diorama/DioramaView.swift"
      ],
      "examples": [
        "The main app class.\n*/\n\nimport SwiftUI\nimport SwiftSplashTrackPieces\nimport RealityKit\n\n@main\n@MainActor\nstruct SwiftSplash: App {\n    @Environment(\\.openImmersiveSpace) private var openImmersiveSpace",
        "import ARKit\nimport AVKit\nimport Combine\nimport Foundation\nimport OSLog\nimport RealityKit\nimport SwiftSplashTrackPieces\nimport SwiftUI\nimport UIKit\n\n/// This contains one case for each connectable piece except the start and goal pieces, which are handled differently.",
        "*/\n\nimport ARKit\nimport Combine\nimport Foundation\nimport RealityKit\nimport SwiftSplashTrackPieces\nimport UIKit\n/// These methods expose valid state changes in the app's phase.\nextension AppState {\n    "
      ],
      "co_occurrences": {
        "swiftui": 217,
        "state": 163,
        "on_change": 60,
        "component_access": 250,
        "transition": 46,
        "animation_controller": 40,
        "hierarchy_action": 346,
        "animation_action": 48,
        "position": 108,
        "rotation": 70,
        "hierarchy_query": 87,
        "attach_position": 88,
        "scale": 77,
        "view": 136,
        "text": 151,
        "on_appear": 17,
        "reality_view": 81,
        "event_subscription": 47,
        "tap_gesture": 17,
        "gesture": 32,
        "simultaneous_gesture": 18,
        "with_animation": 14,
        "on_disappear": 16,
        "animation": 10,
        "model_entity": 56,
        "component_update": 39,
        "scene_update": 39,
        "entity": 8,
        "attach_orientation": 32,
        "transform_action": 14,
        "state_object": 3,
        "task": 43,
        "component_system": 12,
        "entity_system": 12,
        "entity_subscription": 11,
        "transform": 55,
        "drag_gesture": 15,
        "event_handling": 5,
        "view_attach": 2,
        "gesture_action": 1,
        "high_priority_gesture": 2,
        "on_tap_gesture": 2,
        "observed_object": 2
      },
      "projects": [
        "GeneratingProceduralTexturesInVisionOS",
        "AllowingObjectsToInteractWithRealWorldObjects",
        "happy-beam",
        "DisplayingA3DEnvironmentThroughAPortal",
        "SwiftSplash",
        "creating-an-interactive-3d-model-in-visionos",
        "enabling-video-reflections-in-an-immersive-environment",
        "ApplyingMeshToRealWorldSurroundings",
        "CreatingStereoscopicImageInVisionOS",
        "building-an-immersive-media-viewing-experience",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "combining-2d-and-3d-views-in-an-immersive-app",
        "BuildingLocalExperiencesWithRoomTracking",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "CreatingGlassMaterialFor3DShapesInVisionOS",
        "SceneReconstructionExample",
        "PresentingAnArtistsScene",
        "PlayingSpatialAudioInVisionOS",
        "DestinationVideo",
        "BOTAnist",
        "destination-video",
        "placing-content-on-detected-planes",
        "diorama",
        "exploring-object-tracking-with-arkit",
        "GeneratingInteractiveGeometryWithRealityKit",
        "creating-3d-entities-with-realitykit",
        "HappyBeam",
        "TransformingRealityKitEntitiesUsingGestures",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "CreatingA3DModelWithGesturesInVisionOS",
        "bot-anist",
        "Creating3DEntitiesInVisionOSWithRealityKit",
        "ExploringObjectTrackingWithARKit",
        "TrackingAndVisualizingHandMovement",
        "CreatingImmersiveSpacesInVisionOSWithSwiftUI",
        "CreatingAVolumetricWindowInVisionOS",
        "ObjectPlacementExample",
        "DisplayingA3DObjectThatMovesToStayInAPersonsView",
        "CreatingASpatialDrawingAppWithRealityKit",
        "playing-spatial-audio",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "ConstructAnImmersiveEnvironmentForVisionOS",
        "swift-splash",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {}
    },
    "state": {
      "count": 272,
      "files": [
        "data/projects/happy-beam/HappyBeam/HappyBeamApp.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/destination-video/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/hello-world/World/Orbit/OrbitModule.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/ObjectTrackingRealityView.swift",
        "data/projects/hello-world/World/Solar System/SolarSystemControls.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/DestinationVideo.swift",
        "data/projects/bot-anist/BOT-anist/BOTanistApp.swift",
        "data/projects/destination-video/DestinationVideo/Views/DetailView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/DetailView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/ObjectTrackingApp.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/PaletteView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/ObjectTrackingApp.swift",
        "data/projects/hello-world/World/Settings/SettingsButton.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/hello-world/World/WorldApp.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/ContentView.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamApp.swift",
        "data/projects/HelloWorld/World/Globe/GlobeControls.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/diorama/Diorama/LearnMoreView.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/HeadTrackingApp.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotCustomizationView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/WatchNowView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/SelectorViews.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/LibraryView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/CategoryView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/HelloWorld/World/RealityViews/Sun.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/ARKitRoomTrackingApp.swift",
        "data/projects/hello-world/World/Modifiers/DragRotationModifier.swift",
        "data/projects/HelloWorld/World/RealityViews/Earth.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ContentView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/DrawingMeshView.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Views/PaintingView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/WatchNowView.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/HelloWorld/World/Settings/SettingsButton.swift",
        "data/projects/destination-video/DestinationVideo/DestinationTabs.swift",
        "data/projects/DestinationVideo/DestinationVideo/DestinationTabs.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/DestinationTabs.swift",
        "data/projects/HelloWorld/World/Modifiers/DragRotationModifier.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/WorldOcclusionView.swift",
        "data/projects/hello-world/World/RealityViews/Earth.swift",
        "data/projects/BOTAnist/BOT-anist/BOTanistApp.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/Presets/PresetBrushView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/RealityKitDrawingApp.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/DestinationVideo.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/DetailView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasConfigurationView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/EditTrackPieceView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/destination-video/DestinationVideo/Views/WatchNowView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/ObjectTrackingRealityView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/EditTrackPieceView.swift",
        "data/projects/hello-world/World/Orbit/Orbit.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/RealityKitAnimationApp.swift",
        "data/projects/hello-world/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/destination-video/DestinationVideo/DestinationVideo.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/ObjectPlacementApp.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/ContentView.swift",
        "data/projects/HelloWorld/World/WorldApp.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/adding-a-depth-effect-to-text-in-visionos/DepthText/Views/DepthTextView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/WatchNowView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/DestinationTabs.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ArtistWorkflowExampleApp.swift",
        "data/projects/HelloWorld/World/Orbit/Orbit.swift",
        "data/projects/bot-anist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/AddingADepthEffectToTextInVisionOS/DepthText/Views/DepthTextView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/ContentView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/ObjectPlacementApp.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfTrackButtonsView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/happy-beam/HappyBeam/Views/HappyBeam.swift",
        "data/projects/hello-world/World/Globe/GlobeControls.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/CategoryView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/PlayerView.swift",
        "data/projects/swift-splash/SwiftSplash/SwiftSplashApp.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystemControls.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementMenuView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/hello-world/World/Globe/Globe.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/RobotCustomizationView.swift",
        "data/projects/destination-video/DestinationVideo/Views/LibraryView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/PlayerView.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Views/DrawableView.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/DestinationVideo/DestinationVideo/DestinationVideo.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentToolbar.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/PlayerView.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/CarView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/HappyBeam.swift",
        "data/projects/destination-video/DestinationVideo/Player/PlayerView.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/LibraryView.swift",
        "data/projects/CreatingGlassMaterialFor3DShapesInVisionOS/Glass/Views/GlassView.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/SceneReconstructionExampleApp.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfTrackButtonsView.swift",
        "data/projects/hello-world/World/RealityViews/Sun.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentView.swift",
        "data/projects/HelloWorld/World/Orbit/OrbitModule.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/DetailView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasPlacementView.swift",
        "data/projects/HelloWorld/World/Globe/Globe.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/ObjectPlacementApp.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Views/HandTrackingView.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/SceneReconstructionExampleApp.swift",
        "data/projects/CreatingANewSwiftUIWindowViewInVisionOS/Creating New Windows/Views/OpenWindowView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/HomeView.swift",
        "data/projects/HelloWorld/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/HomeView.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/ContentView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/LibraryView.swift",
        "data/projects/SwiftSplash/SwiftSplash/SwiftSplashApp.swift",
        "data/projects/bot-anist/BOT-anist/Views/SelectorViews.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/UIPortalView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/CategoryView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementMenuView.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/ARKitRoomTrackingApp.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementMenuView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentToolbar.swift",
        "data/projects/destination-video/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/diorama/Diorama/DioramaApp.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/ContentView.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/CarView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/MeadowApp.swift",
        "data/projects/BOTAnist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/destination-video/DestinationVideo/Views/CategoryView.swift",
        "data/projects/diorama/Diorama/DioramaView.swift"
      ],
      "examples": [
        "struct SwiftSplash: App {\n    @Environment(\\.openImmersiveSpace) private var openImmersiveSpace\n    @Environment(\\.dismissWindow) var dismissWindow\n    \n    /// Pass the app's state object to all SwiftUI views as an environment object.\n    @State private var appState = AppState()\n    \n    @State private var immersionStyle: ImmersionStyle = .mixed\n    \n    var body: some SwiftUI.Scene {\n        WindowGroup(id: \"SwiftSplash\") {",
        "    @Environment(\\.dismissWindow) var dismissWindow\n    \n    /// Pass the app's state object to all SwiftUI views as an environment object.\n    @State private var appState = AppState()\n    \n    @State private var immersionStyle: ImmersionStyle = .mixed\n    \n    var body: some SwiftUI.Scene {\n        WindowGroup(id: \"SwiftSplash\") {\n            ContentView()\n                .environment(appState)",
        "import SwiftUI\n\nstruct ContentToolbar: View {\n    @Environment(AppState.self) private var appState\n    \n    @State private var confirmationShown = false\n    \n    var body: some View {\n        Button(role: .destructive) {\n            confirmationShown = true\n        } label: {"
      ],
      "co_occurrences": {
        "swiftui": 272,
        "realitykit": 163,
        "on_change": 166,
        "view": 257,
        "text": 418,
        "animation": 14,
        "on_appear": 80,
        "with_animation": 57,
        "on_disappear": 48,
        "hierarchy_action": 212,
        "transition": 12,
        "simultaneous_gesture": 19,
        "gesture": 69,
        "reality_view": 74,
        "event_subscription": 120,
        "position": 21,
        "scale": 16,
        "attach_position": 17,
        "task": 140,
        "tap_gesture": 19,
        "drag_gesture": 21,
        "on_tap_gesture": 5,
        "event_handling": 4,
        "hierarchy_query": 42,
        "view_attach": 1,
        "model_entity": 10,
        "state_object": 2,
        "transform_action": 2,
        "transform": 40,
        "component_access": 62,
        "component_update": 1,
        "scene_update": 1,
        "high_priority_gesture": 2,
        "animation_controller": 2,
        "animation_action": 2,
        "observed_object": 16,
        "rotation": 34,
        "attach_orientation": 64
      },
      "projects": [
        "GeneratingProceduralTexturesInVisionOS",
        "AllowingObjectsToInteractWithRealWorldObjects",
        "happy-beam",
        "DisplayingA3DEnvironmentThroughAPortal",
        "SwiftSplash",
        "creating-an-interactive-3d-model-in-visionos",
        "enabling-video-reflections-in-an-immersive-environment",
        "building-an-immersive-media-viewing-experience",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "AddingADepthEffectToTextInVisionOS",
        "combining-2d-and-3d-views-in-an-immersive-app",
        "BuildingLocalExperiencesWithRoomTracking",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "CreatingGlassMaterialFor3DShapesInVisionOS",
        "SceneReconstructionExample",
        "PresentingAnArtistsScene",
        "PlayingSpatialAudioInVisionOS",
        "DestinationVideo",
        "BOTAnist",
        "destination-video",
        "placing-content-on-detected-planes",
        "diorama",
        "exploring-object-tracking-with-arkit",
        "GeneratingInteractiveGeometryWithRealityKit",
        "CreatingANewSwiftUIWindowViewInVisionOS",
        "HappyBeam",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "CreatingA3DModelWithGesturesInVisionOS",
        "bot-anist",
        "ExploringObjectTrackingWithARKit",
        "TrackingAndVisualizingHandMovement",
        "adding-a-depth-effect-to-text-in-visionos",
        "ObjectPlacementExample",
        "CreatingASpatialDrawingAppWithRealityKit",
        "playing-spatial-audio",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "ConstructAnImmersiveEnvironmentForVisionOS",
        "swift-splash",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "update": 6,
        "interaction": 1,
        "initialization": 5,
        "animation": 2
      }
    },
    "on_change": {
      "count": 90,
      "files": [
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/hello-world/World/Modifiers/DragRotationModifier.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ContentView.swift",
        "data/projects/bot-anist/BOT-anist/Views/ContentView.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/hello-world/World/Modules/Modules.swift",
        "data/projects/hello-world/World/Solar System/SolarSystemControls.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ArtistWorkflowExampleApp.swift",
        "data/projects/bot-anist/BOT-anist/BOTanistApp.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/HomeView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/bot-anist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/HelloWorld/World/Modifiers/DragRotationModifier.swift",
        "data/projects/hello-world/World/Globe/GlobeToggle.swift",
        "data/projects/HelloWorld/World/Globe/GlobeToggle.swift",
        "data/projects/BOTAnist/BOT-anist/BOTanistApp.swift",
        "data/projects/HelloWorld/World/Globe/Globe.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ImmersiveView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/ObjectPlacementApp.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/HomeView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/ObjectPlacementApp.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/hello-world/World/Orbit/OrbitToggle.swift",
        "data/projects/HelloWorld/World/Modules/Modules.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/diorama/Diorama/ContentView.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/HomeView.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/ContentView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/HelloWorld/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/HomeView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/ContentView.swift",
        "data/projects/hello-world/World/Globe/GlobeControls.swift",
        "data/projects/HelloWorld/World/Globe/GlobeControls.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/PlayerView.swift",
        "data/projects/SwiftSplash/SwiftSplash/SwiftSplashApp.swift",
        "data/projects/swift-splash/SwiftSplash/SwiftSplashApp.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystemControls.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/HelloWorld/World/Orbit/OrbitToggle.swift",
        "data/projects/destination-video/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/hello-world/World/Globe/Globe.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/HomeView.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ContentView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/RobotCustomizationView.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/ContentView.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotCustomizationView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/RealityKitAnimationApp.swift",
        "data/projects/hello-world/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/PlayerView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ImmersiveView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/ObjectPlacementApp.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/BOTAnist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/ContentView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/PlayerView.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/ContentView.swift",
        "data/projects/destination-video/DestinationVideo/Player/PlayerView.swift"
      ],
      "examples": [
        "    \n    var body: some SwiftUI.Scene {\n        WindowGroup(id: \"SwiftSplash\") {\n            ContentView()\n                .environment(appState)\n                .onChange(of: appState.phase.isImmersed) { _, showMRView in\n                    if showMRView {\n                        Task {\n                            appState.isImmersiveViewShown = true\n                            await openImmersiveSpace(id: \"Track\")\n                            dismissWindow(id: \"SwiftSplash\")",
        "                        }\n                        shouldSingleTap = false\n                    }\n                })\n        )\n        .onChange(of: appState.phase.isImmersed) { _, showMRView in\n            if !showMRView {\n                dismiss()\n            }\n        }\n    }",
        "            }\n        }\n        .onDisappear {\n            animateIn = true\n        }\n        .onChange(of: paused) {\n            shouldPauseRide.toggle()\n            \n            if !shouldPauseRide {\n                appState.rideStartTime += Date.timeIntervalSinceReferenceDate - pauseStartTime\n                appState.startPiece?.setRideLights(to: true, speed: 1.0)"
      ],
      "co_occurrences": {
        "swiftui": 90,
        "realitykit": 60,
        "state": 166,
        "view": 101,
        "reality_view": 21,
        "text": 189,
        "event_subscription": 16,
        "tap_gesture": 8,
        "gesture": 19,
        "simultaneous_gesture": 14,
        "hierarchy_action": 36,
        "with_animation": 26,
        "on_appear": 35,
        "on_disappear": 12,
        "animation": 20,
        "transition": 12,
        "component_access": 16,
        "hierarchy_query": 6,
        "scale": 2,
        "drag_gesture": 5,
        "event_handling": 2,
        "task": 33,
        "observed_object": 2,
        "transform": 5,
        "rotation": 6,
        "attach_orientation": 8,
        "model_entity": 2,
        "position": 2,
        "attach_position": 2
      },
      "projects": [
        "happy-beam",
        "SwiftSplash",
        "enabling-video-reflections-in-an-immersive-environment",
        "building-an-immersive-media-viewing-experience",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "BuildingLocalExperiencesWithRoomTracking",
        "PresentingAnArtistsScene",
        "SceneReconstructionExample",
        "PlayingSpatialAudioInVisionOS",
        "DestinationVideo",
        "BOTAnist",
        "destination-video",
        "placing-content-on-detected-planes",
        "diorama",
        "exploring-object-tracking-with-arkit",
        "GeneratingInteractiveGeometryWithRealityKit",
        "HappyBeam",
        "bot-anist",
        "ExploringObjectTrackingWithARKit",
        "ObjectPlacementExample",
        "playing-spatial-audio",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "HelloWorld",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "swift-splash"
      ],
      "contexts": {
        "animation": 2,
        "initialization": 8,
        "interaction": 2
      }
    },
    "component_access": {
      "count": 213,
      "files": [
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FearSystem.swift",
        "data/projects/HappyBeam/HappyBeam/Extensions.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/Compute/ComputeSystem.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Views/EntityView.swift",
        "data/projects/HelloWorld/World/Systems/TraceSystem.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponentExtension.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/StationaryRobotComponent.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ImmersiveView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Seaweed.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Systems/ClosureComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/AnimationSpeedSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasVisualizationView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Model/visionOS/ImmersiveEnvironment.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Starfish.swift",
        "data/projects/BOTAnist/BOT-anist/AppState+Exploration.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Systems/DrawableQueueSystem.swift",
        "data/projects/bot-anist/BOT-anist/AppState+Exploration.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/AppState.swift",
        "data/projects/HelloWorld/World/Entities/SatelliteEntity.swift",
        "data/projects/hello-world/World/Entities/Entity+Trace.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/AppState.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/BillboardSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/SolidBrushComponent.swift",
        "data/projects/diorama/Diorama/FlockingSystem.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/diorama/Diorama/ViewModel.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Components/ClosureComponent.swift",
        "data/projects/DestinationVideo/DestinationVideo/Model/visionOS/ImmersiveEnvironment.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasConfigurationView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroPlantComponent.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/SparkleBrushComponent.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/AnchorEntityInputProvider.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/HungerSystem.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Fish.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Utilities/ModelLoader.swift",
        "data/projects/destination-video/DestinationVideo/Model/visionOS/ImmersiveEnvironment.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/LODSystem.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/WanderSystem.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/EntityMoverComponent.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Model/visionOS/ImmersiveEnvironment.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MotionSystem.swift",
        "data/projects/hello-world/Packages/WorldAssets/Sources/WorldAssets/SunPositionSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundComponent.swift",
        "data/projects/HelloWorld/Packages/WorldAssets/Sources/WorldAssets/SunPositionSystem.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MeshAnchorTracker.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/HelloWorld/World/Entities/Entity+Trace.swift",
        "data/projects/HelloWorld/World/Systems/RotationSystem.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/HelloWorld/World/Entities/EarthEntity.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FlockingSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasPlacementView.swift",
        "data/projects/hello-world/World/Entities/SatelliteEntity.swift",
        "data/projects/hello-world/World/Systems/RotationSystem.swift",
        "data/projects/happy-beam/HappyBeam/Extensions.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Utilities/ModelLoader.swift",
        "data/projects/hello-world/World/Entities/EarthEntity.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Systems/TurnTableSystem.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Character.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Utilities/ModelLoader.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FoodPool.swift",
        "data/projects/hello-world/World/Systems/TraceSystem.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Systems/ClosureComponent.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/diorama/Diorama/DioramaView.swift"
      ],
      "examples": [
        "            Task { @MainActor in\n                guard let goalPiece = self.goalPiece else { return }\n                goalPiece.forEachDescendant(withComponent: ParticleEmitterComponent.self) { entity, component in\n                    var component = component\n                    component.isEmitting = false\n                    entity.components[ParticleEmitterComponent.self] = component\n                    entity.components.set(component)\n                }\n            }\n        }\n    }",
        "    \n    public func removeHoverEffectFromConnectibles() {\n        let entities = root.scene?.performQuery(connectableQuery)\n        \n        entities?.forEach { entity in\n            entity.components[HoverEffectComponent.self] = nil\n        }\n    }\n    \n    public enum RotateDirection {\n        case clockwise, counterClockwise",
        "\n    init(scene: Scene) { }\n\n    func update(context: SceneUpdateContext) {\n        for satellite in context.entities(matching: Self.query, updatingSystemWhen: .rendering) {\n            var trace: TraceComponent = satellite.components[TraceComponent.self]!\n            defer { satellite.components[TraceComponent.self] = trace }\n\n            guard let anchor = trace.anchor else { return }\n\n            trace.accumulatedTime += context.deltaTime"
      ],
      "co_occurrences": {
        "swiftui": 85,
        "realitykit": 250,
        "position": 98,
        "rotation": 81,
        "hierarchy_action": 268,
        "hierarchy_query": 118,
        "attach_position": 78,
        "model_entity": 24,
        "component_update": 88,
        "scene_update": 88,
        "entity": 14,
        "scale": 52,
        "attach_orientation": 30,
        "transform_action": 17,
        "view": 40,
        "reality_view": 41,
        "tap_gesture": 25,
        "gesture": 39,
        "on_change": 16,
        "animation_action": 73,
        "event_subscription": 128,
        "component_system": 33,
        "entity_system": 33,
        "entity_subscription": 66,
        "animation_controller": 70,
        "transform": 58,
        "transition": 2,
        "gesture_action": 5,
        "event_handling": 1,
        "text": 5,
        "state": 62,
        "task": 52,
        "drag_gesture": 9,
        "observed_object": 2,
        "simultaneous_gesture": 2
      },
      "projects": [
        "GeneratingProceduralTexturesInVisionOS",
        "happy-beam",
        "SwiftSplash",
        "enabling-video-reflections-in-an-immersive-environment",
        "building-an-immersive-media-viewing-experience",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "BuildingLocalExperiencesWithRoomTracking",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "DestinationVideo",
        "BOTAnist",
        "destination-video",
        "placing-content-on-detected-planes",
        "diorama",
        "GeneratingInteractiveGeometryWithRealityKit",
        "HappyBeam",
        "bot-anist",
        "TrackingAndVisualizingHandMovement",
        "CreatingImmersiveSpacesInVisionOSWithSwiftUI",
        "ObjectPlacementExample",
        "DisplayingA3DObjectThatMovesToStayInAPersonsView",
        "CreatingASpatialDrawingAppWithRealityKit",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "swift-splash",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "update": 16,
        "animation": 5,
        "initialization": 5,
        "interaction": 10
      }
    },
    "transition": {
      "count": 46,
      "files": [
        "data/projects/bot-anist/BOT-anist/Extensions/RealityView+TouchControls.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/RealityView+KeyboardControls.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentView.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter+Movement.swift",
        "data/projects/bot-anist/BOT-anist/AppState+Exploration.swift",
        "data/projects/BOTAnist/BOT-anist/AppState+Exploration.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter+Movement.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+Phases.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/RealityView+KeyboardControls.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+Phases.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentView.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/RealityView+TouchControls.swift"
      ],
      "examples": [
        "/// These methods expose valid state changes in the app's phase.\nextension AppState {\n    \n    /// Call this to change app phase when you begin loading assets.\n    public func finishedStartingUp() {\n        phase.transition(to: .loadingAssets)\n        isRideRunning = false\n        rideStartTime = 0\n    }\n    \n    /// Call this once the Reality Composer Pro project has been loaded and the template pieces created.",
        "        rideStartTime = 0\n    }\n    \n    /// Call this once the Reality Composer Pro project has been loaded and the template pieces created.\n    public func finishedLoadingAssets() {\n        phase.transition(to: .waitingToStart)\n        isRideRunning = false\n        rideStartTime = 0\n    }\n    \n    /// Call this after the player has chosen the game style.",
        "        rideStartTime = 0\n    }\n    \n    /// Call this after the player has chosen the game style.\n    public func startBuilding() {\n        phase.transition(to: .placingStartPiece)\n        isRideRunning = false\n        rideStartTime = 0\n        guard let startPiece = startPiece else {\n            fatalError(\"Start piece not loaded.\")\n        }"
      ],
      "co_occurrences": {
        "realitykit": 46,
        "animation_controller": 32,
        "hierarchy_action": 62,
        "animation_action": 30,
        "swiftui": 30,
        "view": 8,
        "text": 16,
        "state": 12,
        "with_animation": 4,
        "animation": 4,
        "on_appear": 4,
        "on_change": 12,
        "reality_view": 4,
        "on_disappear": 4,
        "transform": 6,
        "scale": 4,
        "rotation": 10,
        "component_access": 2,
        "hierarchy_query": 8,
        "attach_orientation": 4,
        "drag_gesture": 20
      },
      "projects": [
        "bot-anist",
        "SwiftSplash",
        "DestinationVideo",
        "BOTAnist",
        "destination-video",
        "enabling-video-reflections-in-an-immersive-environment",
        "swift-splash",
        "building-an-immersive-media-viewing-experience"
      ],
      "contexts": {
        "initialization": 2,
        "animation": 22
      }
    },
    "animation_controller": {
      "count": 38,
      "files": [
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FoodPool.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+RideRunning.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppConfig.swift",
        "data/projects/HappyBeam/HappyBeam/GameModel.swift",
        "data/projects/happy-beam/HappyBeam/GameModel.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppConfig.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+Phases.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/ImmersiveView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Fish.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+Phases.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+RideRunning.swift",
        "data/projects/swift-splash/SwiftSplash/Extensions/Entity+SwiftSplash.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroPlantComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Character.swift",
        "data/projects/diorama/Diorama/DioramaView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Extensions/Entity+SwiftSplash.swift"
      ],
      "examples": [
        "                nextPiece?.playIdleAnimations()\n                \n                if let currentPiece = nextPiece {\n                    currentPiece.forEachDescendant(withComponent: RideAnimationComponent.self) { entity, component in\n                        if component.alwaysAnimates {\n                            for animation in entity.availableAnimations {\n                                let animation = animation.repeat(count: Int.max)\n                                let controller = entity.playAnimation(animation, transitionDuration: 0.0, startsPaused: false)\n                                rideAnimationControllers.append(controller)\n                                controller.resume()\n                                controller.speed = Float(animationSpeedMultiplier)",
        "                    currentPiece.forEachDescendant(withComponent: RideAnimationComponent.self) { entity, component in\n                        if component.alwaysAnimates {\n                            for animation in entity.availableAnimations {\n                                let animation = animation.repeat(count: Int.max)\n                                let controller = entity.playAnimation(animation, transitionDuration: 0.0, startsPaused: false)\n                                rideAnimationControllers.append(controller)\n                                controller.resume()\n                                controller.speed = Float(animationSpeedMultiplier)\n                            }\n                        }\n                    }",
        "\n    /// Call this when returning to build mode to reset the animations and hide the moving fish and water.\n    public func resetRideAnimations() {\n        guard let startPiece = startPiece else { fatalError(\"No start piece found.\") }\n        \n        for controller in rideAnimationControllers {\n            controller.pause()\n            controller.time = 0\n        }\n        rideAnimationControllers.removeAll()\n        "
      ],
      "co_occurrences": {
        "realitykit": 40,
        "transition": 32,
        "hierarchy_action": 26,
        "animation_action": 55,
        "event_subscription": 12,
        "component_access": 70,
        "component_system": 6,
        "component_update": 7,
        "scene_update": 7,
        "entity_system": 6,
        "entity_subscription": 9,
        "swiftui": 8,
        "view": 2,
        "reality_view": 2,
        "transform": 5,
        "scale": 18,
        "rotation": 5,
        "on_disappear": 1,
        "model_entity": 1,
        "gesture_action": 1,
        "event_handling": 1,
        "text": 1,
        "transform_action": 1,
        "position": 15,
        "attach_orientation": 5,
        "attach_position": 15,
        "hierarchy_query": 2,
        "state": 2
      },
      "projects": [
        "HappyBeam",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "happy-beam",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "SwiftSplash",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "diorama",
        "swift-splash"
      ],
      "contexts": {
        "animation": 28,
        "initialization": 2
      }
    },
    "hierarchy_action": {
      "count": 330,
      "files": [
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/ImmersiveView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/ObjectTrackingRealityView.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/BeamCollisions.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/Generators/MeshAnchorGenerator.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Scattering.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/happy-beam/HappyBeam/Views/SoloScore.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/DrawingDocument.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/HelloWorld/World/Systems/TraceSystem.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/ContentView.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Components/GestureComponent.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/bot-anist/BOT-anist/AppState+Exploration.swift",
        "data/projects/BOTAnist/BOT-anist/AppState+Exploration.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Visualizer/AxisVisualizer.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/DrawingSource.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/AppState.swift",
        "data/projects/HelloWorld/World/Entities/SatelliteEntity.swift",
        "data/projects/hello-world/World/Entities/Entity+Trace.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Extensions/Entity.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Utilities/PlaneAnchorHandler.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/AppState.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+Phases.swift",
        "data/projects/happy-beam/HappyBeam/GlobalEntities.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/UnderwaterView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Visualizer/AxisVisualizer.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/BeamCollisions.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/EditTrackPieceView.swift",
        "data/projects/HappyBeam/HappyBeam/GlobalEntities.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/ObjectTrackingRealityView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/MultiScore.swift",
        "data/projects/swift-splash/SwiftSplash/Views/EditTrackPieceView.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/happy-beam/HappyBeam/Views/MultiScore.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView+Rotation.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/AnchorEntityInputProvider.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Fish.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView+Rotation.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/ImmersiveView.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/EntityModel.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Canvas/PaintingCanvas.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceSelection.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Utilities/PlaneAnchorHandler.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceSelection.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MeshAnchorTracker.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Views/HeadPositionView.swift",
        "data/projects/HelloWorld/World/Entities/Entity+Trace.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/EntityModel.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Utilities/PlaneAnchorHandler.swift",
        "data/projects/HelloWorld/World/Entities/EarthEntity.swift",
        "data/projects/bot-anist/BOT-anist/AppState.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/hello-world/World/Entities/SatelliteEntity.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Generators/MeshAnchorGenerator.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Views/HandTrackingView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/BOTAnist/BOT-anist/AppState.swift",
        "data/projects/HappyBeam/HappyBeam/Views/SoloScore.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/UIPortalView.swift",
        "data/projects/hello-world/World/Entities/EarthEntity.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+Phases.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Character.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FoodPool.swift",
        "data/projects/hello-world/World/Systems/TraceSystem.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Entities/Hand.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/diorama/Diorama/DioramaView.swift"
      ],
      "examples": [
        "        isRideRunning = false\n        rideStartTime = 0\n        guard let startPiece = startPiece else {\n            fatalError(\"Start piece not loaded.\")\n        }\n        root.addChild(startPiece)\n        startPiece.connectableStateComponent?.isSelected = false\n        setStartPieceInitialPosition()\n        trackPieceBeingEdited = nil\n        clearSelection()\n        updateSelection()",
        "    public func startedDraggingStartPiece() {\n        phase.transition(to: .draggingStartPiece)\n\n        isRideRunning = false\n        rideStartTime = 0\n        startAttachment?.removeFromParent()\n    }\n    \n    /// Call this to change the app phase after the initial drag of the start piece has finished.\n    public func finishedDraggingStartPiece() {\n        phase.transition(to: .buildingTrack)",
        "                removeGoalPiece()\n            } else {\n                entity.connectableStateComponent?.isSelected = false\n                entity.connectableStateComponent?.previousPiece?.connectableStateComponent?.nextPiece = nil\n                entity.connectableStateComponent?.nextPiece?.connectableStateComponent?.previousPiece = nil\n                entity.removeFromParent()\n            }\n            \n            for selected in additionalSelectedTrackPieces where selected.name != startPieceName {\n                selected.connectableStateComponent?.isSelected = false\n                selected.connectableStateComponent?.previousPiece?.connectableStateComponent?.nextPiece = nil"
      ],
      "co_occurrences": {
        "realitykit": 346,
        "transition": 62,
        "animation_controller": 26,
        "animation_action": 81,
        "swiftui": 246,
        "position": 325,
        "rotation": 367,
        "component_access": 268,
        "hierarchy_query": 225,
        "attach_position": 296,
        "view": 69,
        "reality_view": 66,
        "text": 82,
        "event_subscription": 101,
        "tap_gesture": 9,
        "gesture": 35,
        "on_change": 36,
        "simultaneous_gesture": 11,
        "state": 212,
        "model_entity": 137,
        "component_update": 10,
        "scene_update": 10,
        "entity": 23,
        "scale": 198,
        "attach_orientation": 182,
        "transform_action": 38,
        "state_object": 1,
        "on_appear": 4,
        "transform": 341,
        "on_disappear": 10,
        "view_attach": 3,
        "event_handling": 4,
        "entity_subscription": 8,
        "gesture_action": 2,
        "component_system": 6,
        "entity_system": 6,
        "observed_object": 22,
        "task": 74,
        "drag_gesture": 4
      },
      "projects": [
        "AllowingObjectsToInteractWithRealWorldObjects",
        "happy-beam",
        "DisplayingA3DEnvironmentThroughAPortal",
        "SwiftSplash",
        "ApplyingMeshToRealWorldSurroundings",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "combining-2d-and-3d-views-in-an-immersive-app",
        "BuildingLocalExperiencesWithRoomTracking",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "SceneReconstructionExample",
        "PlayingSpatialAudioInVisionOS",
        "BOTAnist",
        "placing-content-on-detected-planes",
        "diorama",
        "exploring-object-tracking-with-arkit",
        "GeneratingInteractiveGeometryWithRealityKit",
        "HappyBeam",
        "TransformingRealityKitEntitiesUsingGestures",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "bot-anist",
        "ExploringObjectTrackingWithARKit",
        "TrackingAndVisualizingHandMovement",
        "CreatingImmersiveSpacesInVisionOSWithSwiftUI",
        "ObjectPlacementExample",
        "DisplayingA3DObjectThatMovesToStayInAPersonsView",
        "CreatingASpatialDrawingAppWithRealityKit",
        "playing-spatial-audio",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ConstructAnImmersiveEnvironmentForVisionOS",
        "swift-splash",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "update": 8,
        "initialization": 14,
        "animation": 4
      }
    },
    "animation_action": {
      "count": 46,
      "files": [
        "data/projects/HappyBeam/HappyBeam/GameModel.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter+Movement.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+Phases.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/bot-anist/BOT-anist/AppState.swift",
        "data/projects/swift-splash/SwiftSplash/Extensions/Entity+SwiftSplash.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/BeamCollisions.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponent.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/ImmersiveView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/CharacterStates.swift",
        "data/projects/SwiftSplash/SwiftSplash/Extensions/Entity+SwiftSplash.swift",
        "data/projects/BOTAnist/BOT-anist/AppState.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/BeamCollisions.swift",
        "data/projects/happy-beam/HappyBeam/GameModel.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter+Movement.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponentExtension.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+Phases.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+RideRunning.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroPlantComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FoodPool.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+RideRunning.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Fish.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/diorama/Diorama/DioramaView.swift"
      ],
      "examples": [
        "                if let currentPiece = nextPiece {\n                    currentPiece.forEachDescendant(withComponent: RideAnimationComponent.self) { entity, component in\n                        if component.alwaysAnimates {\n                            for animation in entity.availableAnimations {\n                                let animation = animation.repeat(count: Int.max)\n                                let controller = entity.playAnimation(animation, transitionDuration: 0.0, startsPaused: false)\n                                rideAnimationControllers.append(controller)\n                                controller.resume()\n                                controller.speed = Float(animationSpeedMultiplier)\n                            }\n                        }",
        "                nextpiece.forEachDescendant(withComponent: RideAnimationComponent.self) { entity, component in\n                    entity.isEnabled = component.isPersistent\n                    \n                    for animation in entity.availableAnimations {\n                        let animation = animation.repeat(count: Int.max)\n                        let controller = entity.playAnimation(animation, transitionDuration: 0.0, startsPaused: true)\n                        controller.time = component.timecodeWhenNotPlaying\n                    }\n                }\n            }\n            nextPiece?.setUpAnimationVisibility()",
        "                \n                if component.alwaysAnimates {\n                    animation = animation.repeat(count: Int.max)\n                }\n                \n                let controller = entity.playAnimation(animation, transitionDuration: 0.0, startsPaused: false)\n                rideAnimationControllers.append(controller)\n                controller.resume()\n                controller.speed = Float(animationSpeedMultiplier)\n            }\n        }"
      ],
      "co_occurrences": {
        "realitykit": 48,
        "transition": 30,
        "animation_controller": 55,
        "hierarchy_action": 81,
        "position": 27,
        "component_access": 73,
        "hierarchy_query": 32,
        "attach_position": 26,
        "event_subscription": 18,
        "component_system": 3,
        "component_update": 4,
        "scene_update": 4,
        "entity_system": 3,
        "entity_subscription": 15,
        "rotation": 10,
        "swiftui": 21,
        "view": 2,
        "reality_view": 2,
        "transform": 3,
        "scale": 38,
        "on_disappear": 1,
        "attach_orientation": 9,
        "model_entity": 1,
        "gesture_action": 1,
        "text": 1,
        "transform_action": 1,
        "state": 2
      },
      "projects": [
        "HappyBeam",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "bot-anist",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "happy-beam",
        "SwiftSplash",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "BOTAnist",
        "diorama",
        "swift-splash"
      ],
      "contexts": {
        "animation": 30,
        "initialization": 3
      }
    },
    "position": {
      "count": 118,
      "files": [
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMesh/PlaneMesh.swift",
        "data/projects/HappyBeam/HappyBeam/GameModel.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/SolidDrawingMeshGenerator.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/DrawingMeshView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/EntityMoverComponent.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Utilities/CurveProcessing.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/CurveProcessing/SmoothCurveSampler.swift",
        "data/projects/hello-world/World/RealityViews/Sun.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/SparkleDrawingMeshGenerator.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/bot-anist/BOT-anist/AppState.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/Style/SparkleBrushStyleProvider.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/WorldOcclusionView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Extensions/Entity+ObjectTracking.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponent.swift",
        "data/projects/hello-world/World/Entities/SatelliteEntity.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/Presets/PresetBrushView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Scattering.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/CurveProcessing/CurveSample.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Visualizer/AxisVisualizer.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/Style/SparkleBrushCurvePoint.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Canvas/PaintingCanvas.swift",
        "data/projects/BOTAnist/BOT-anist/AppState.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/Style/SolidBrushCurvePoint.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/Style/SolidBrushStyleProvider.swift",
        "data/projects/happy-beam/HappyBeam/GameModel.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/CurveExtruderWithEndcaps.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/HelloWorld/World/Systems/TraceSystem.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponentExtension.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/CarView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/StationaryRobotComponent.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Seaweed.swift",
        "data/projects/hello-world/World/Systems/TraceSystem.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Extensions/Entity+ObjectTracking.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Starfish.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Visualizer/AxisVisualizer.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Fish.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/DrawingSource.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/CurveExtruder.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/CarView.swift",
        "data/projects/HelloWorld/World/RealityViews/Sun.swift",
        "data/projects/HelloWorld/World/Entities/SatelliteEntity.swift",
        "data/projects/diorama/Diorama/DioramaView.swift"
      ],
      "examples": [
        "            startPiece.position.z = -1\n            return\n        }\n        let cameraMatrix = pose.originFromAnchorTransform\n        let cameraTransform = Transform(matrix: cameraMatrix)\n        startPiece.position = cameraTransform.translation + cameraMatrix.forward * -0.5\n        #endif\n    }\n    \n    /// Resets the state of the RealityView. Used when going back to the main menu from building or running the ride.\n    public func resetBoard() {",
        "    }\n\n    /// Configures the model based on the current set of inputs.\n    private func configure() {\n        sun?.scale = SIMD3(repeating: scale)\n        sun?.position = position\n    }\n}\n\n#Preview {\n    Sun(scale: 0.1)",
        "}\n\nextension TraceMesh {\n    mutating func addPosition(of entity: Entity, relativeTo referenceEntity: Entity) {\n        let width = self.width / 1e5\n        positions.append(entity.convert(position: entity.position - [0, width, 0],\n                                        to: referenceEntity))\n        positions.append(entity.convert(position: entity.position + [0, width, 0],\n                                        to: referenceEntity))\n        uvs.removeAll(keepingCapacity: true)\n        var updatedPositions = [SIMD3<Float>]()"
      ],
      "co_occurrences": {
        "swiftui": 57,
        "realitykit": 108,
        "rotation": 38,
        "component_access": 98,
        "hierarchy_action": 325,
        "hierarchy_query": 43,
        "attach_position": 249,
        "view": 16,
        "reality_view": 15,
        "state": 21,
        "scale": 124,
        "model_entity": 63,
        "component_update": 8,
        "scene_update": 8,
        "entity": 2,
        "attach_orientation": 58,
        "animation_action": 27,
        "event_subscription": 8,
        "component_system": 3,
        "entity_system": 3,
        "entity_subscription": 5,
        "view_attach": 1,
        "text": 22,
        "transform_action": 1,
        "animation_controller": 15,
        "tap_gesture": 6,
        "simultaneous_gesture": 4,
        "high_priority_gesture": 1,
        "transform": 66,
        "drag_gesture": 3,
        "gesture": 10,
        "on_appear": 2,
        "on_disappear": 2,
        "task": 8,
        "on_change": 2
      },
      "projects": [
        "AllowingObjectsToInteractWithRealWorldObjects",
        "happy-beam",
        "SwiftSplash",
        "creating-an-interactive-3d-model-in-visionos",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "combining-2d-and-3d-views-in-an-immersive-app",
        "BuildingLocalExperiencesWithRoomTracking",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "PlayingSpatialAudioInVisionOS",
        "BOTAnist",
        "placing-content-on-detected-planes",
        "diorama",
        "exploring-object-tracking-with-arkit",
        "GeneratingInteractiveGeometryWithRealityKit",
        "HappyBeam",
        "CreatingA3DModelWithGesturesInVisionOS",
        "bot-anist",
        "ExploringObjectTrackingWithARKit",
        "ObjectPlacementExample",
        "CreatingASpatialDrawingAppWithRealityKit",
        "playing-spatial-audio",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "swift-splash",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "animation": 3,
        "initialization": 21,
        "interaction": 3
      }
    },
    "rotation": {
      "count": 66,
      "files": [
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Extensions/Entity.swift",
        "data/projects/swift-splash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Components/ConnectableStateComponent.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter+Movement.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/CurveProcessing/SmoothCurveSampler.swift",
        "data/projects/HelloWorld/World/Entities/EarthEntity.swift",
        "data/projects/BOTAnist/BOT-anist/Systems/JointPinSystem.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponent.swift",
        "data/projects/hello-world/World/Entities/SatelliteEntity.swift",
        "data/projects/diorama/Diorama/FlockingSystem.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MotionSystem.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/ImmersiveView.swift",
        "data/projects/bot-anist/BOT-anist/Systems/JointPinSystem.swift",
        "data/projects/hello-world/World/Entities/EarthEntity.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Systems/TurnTableSystem.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter+Movement.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/StationaryRobotComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Character.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView+Rotation.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Seaweed.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasVisualizationView.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Components/GestureComponent.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/SwiftSplash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Components/ConnectableStateComponent.swift",
        "data/projects/BOTAnist/BOT-anist/AppState+Exploration.swift",
        "data/projects/bot-anist/BOT-anist/AppState+Exploration.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView+Rotation.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/HelloWorld/World/Entities/SatelliteEntity.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift"
      ],
      "examples": [
        "        // The ==~ operator is an \"approximately equal to\" comparison defined\n        // in an extension in the SwiftSplashTrackPieces package. Note: this\n        // is not a general purpose nearly equals operator; it uses an episilon value\n        // tuned for this app's use cases.\n        if lastPieceOrientation.angle ==~ (Float.pi * 2) {\n            lastPieceOrientation = simd_quatf(angle: 0, axis: lastPieceOrientation.axis)\n        }\n        \n        // Get the angle between the inverse of the out vector and the in vector.\n        let outVector = simd_normalize(outConnectionVectorEntity.position)\n        let invertedOutVector = simd_normalize(outVector * -1)",
        "        var vectorRotationAngle = simd_quatf(from: inVector, to: invertedOutVector).normalized\n        \n        // When creating a quaternion from two angles, if they are 180\u00b0, the sample can't determine the axis\n        // because 180\u00b0 on any axis gives the same result. This tells it to use the Y axis.\n        if vectorRotationAngle.angle ==~ Float.pi {\n            vectorRotationAngle = simd_quatf(angle: Float.pi, axis: SIMD3<Float>.up)\n        }\n        \n        // Combine the orientation of the last piece with the angle between the in and out vectors.\n        var newRotation = (vectorRotationAngle * lastPieceOrientation).normalized\n        var newRotationAngle = newRotation.angle",
        "        // At exactly 180\u00b0, the sample can't determine the axis so returns NaN. When that happens,\n        // tell it to use the Y axis since the piece only rotates on Y.\n        if newRotation.axis.x.isNaN ||\n            newRotation.axis.y.isNaN ||\n            newRotation.axis.z.isNaN {\n            newRotation = simd_quatf(angle: newRotationAngle, axis: SIMD3<Float>.up)\n        } else {\n            newRotation = simd_quatf(angle: newRotationAngle, axis: newRotation.axis)\n        }\n        \n        // Set the new piece's rotation to the calculated amount."
      ],
      "co_occurrences": {
        "swiftui": 50,
        "realitykit": 70,
        "position": 38,
        "component_access": 81,
        "hierarchy_action": 367,
        "hierarchy_query": 43,
        "attach_position": 35,
        "entity": 6,
        "scale": 28,
        "attach_orientation": 31,
        "transform_action": 14,
        "event_subscription": 21,
        "component_system": 4,
        "component_update": 10,
        "scene_update": 10,
        "entity_system": 4,
        "entity_subscription": 5,
        "animation_action": 10,
        "view": 11,
        "reality_view": 13,
        "transform": 56,
        "on_disappear": 4,
        "animation_controller": 5,
        "transition": 10,
        "event_handling": 1,
        "state": 34,
        "observed_object": 4,
        "gesture": 6,
        "task": 12,
        "on_change": 6,
        "text": 2,
        "drag_gesture": 2
      },
      "projects": [
        "happy-beam",
        "SwiftSplash",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "BOTAnist",
        "placing-content-on-detected-planes",
        "diorama",
        "GeneratingInteractiveGeometryWithRealityKit",
        "HappyBeam",
        "TransformingRealityKitEntitiesUsingGestures",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "bot-anist",
        "CreatingImmersiveSpacesInVisionOSWithSwiftUI",
        "ObjectPlacementExample",
        "CreatingASpatialDrawingAppWithRealityKit",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "swift-splash"
      ],
      "contexts": {
        "animation": 1,
        "initialization": 2,
        "update": 1
      }
    },
    "hierarchy_query": {
      "count": 75,
      "files": [
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/bot-anist/BOT-anist/AppState.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/swift-splash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Extensions/Entity+Utilities.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponent.swift",
        "data/projects/diorama/Diorama/FlockingSystem.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceLoading.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+Transparency.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotProvider+Loading.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+Transparency.swift",
        "data/projects/BOTAnist/BOT-anist/AppState.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponentExtension.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/StationaryRobotComponent.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ImmersiveView.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/bot-anist/BOT-anist/AppState+Exploration.swift",
        "data/projects/BOTAnist/BOT-anist/AppState+Exploration.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Fish.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotProvider+Loading.swift",
        "data/projects/SwiftSplash/Packages/SwiftSplashTrackPieces/Sources/SwiftSplashTrackPieces/Extensions/Entity+Utilities.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/TrailAnimationSystem.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceLoading.swift",
        "data/projects/diorama/Diorama/DioramaView.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift"
      ],
      "examples": [
        "    /// Makes sure two track pieces are exactly aligned, and that each has a reference to the other\n    /// so the code can chain through the track pieces in order.\n    func connect(piece: Entity, to otherPiece: Entity) {\n        guard let lastConnectionOut = otherPiece.outConnection,\n              let inConnection = piece.inConnection,\n              let outConnectionVectorEntity = otherPiece.findEntity(named: SwiftSplashTrackPieces.outConnectionVectorName),\n              let inConnectionVectorEntity = piece.findEntity(named: SwiftSplashTrackPieces.inConnectionVectorName),\n              isDragging == false,\n              isRotating == false,\n              isSnapping == false else {\n            return",
        "    /// so the code can chain through the track pieces in order.\n    func connect(piece: Entity, to otherPiece: Entity) {\n        guard let lastConnectionOut = otherPiece.outConnection,\n              let inConnection = piece.inConnection,\n              let outConnectionVectorEntity = otherPiece.findEntity(named: SwiftSplashTrackPieces.outConnectionVectorName),\n              let inConnectionVectorEntity = piece.findEntity(named: SwiftSplashTrackPieces.inConnectionVectorName),\n              isDragging == false,\n              isRotating == false,\n              isSnapping == false else {\n            return\n        }",
        "    /// Manually specifies sort ordering for the transparent start piece meshes.\n    func handleStartPieceTransparency(_ startPiece: Entity) {\n        let group = ModelSortGroup()\n        \n        // Opaque fish parts.\n        if let entity = startPiece.findEntity(named: fishIdleAnimModelName) {\n            setEntityDrawOrder(entity, 1, group)\n        }\n        if let entity = startPiece.findEntity(named: fishRideAnimModelName) {\n            setEntityDrawOrder(entity, 2, group)\n        }"
      ],
      "co_occurrences": {
        "swiftui": 36,
        "realitykit": 87,
        "position": 43,
        "rotation": 43,
        "component_access": 118,
        "hierarchy_action": 225,
        "attach_position": 34,
        "scale": 39,
        "view": 15,
        "reality_view": 16,
        "tap_gesture": 6,
        "gesture": 10,
        "on_change": 6,
        "animation_action": 32,
        "event_subscription": 23,
        "component_system": 3,
        "component_update": 4,
        "scene_update": 4,
        "entity_system": 3,
        "entity_subscription": 4,
        "transform": 14,
        "transition": 8,
        "state": 42,
        "view_attach": 4,
        "animation_controller": 2,
        "attach_orientation": 17,
        "observed_object": 4,
        "task": 12,
        "simultaneous_gesture": 4
      },
      "projects": [
        "HappyBeam",
        "combining-2d-and-3d-views-in-an-immersive-app",
        "bot-anist",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "happy-beam",
        "SwiftSplash",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "BOTAnist",
        "diorama",
        "swift-splash"
      ],
      "contexts": {
        "animation": 4,
        "initialization": 1
      }
    },
    "attach_position": {
      "count": 88,
      "files": [
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMesh/PlaneMesh.swift",
        "data/projects/HappyBeam/HappyBeam/GameModel.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/SolidDrawingMeshGenerator.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceManagement.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/DrawingMeshView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/EntityMoverComponent.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/hello-world/World/RealityViews/Sun.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/SparkleDrawingMeshGenerator.swift",
        "data/projects/bot-anist/BOT-anist/AppState.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/WorldOcclusionView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Extensions/Entity+ObjectTracking.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/hello-world/World/Entities/SatelliteEntity.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/CurveProcessing/CurveSample.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Visualizer/AxisVisualizer.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/Style/SparkleBrushCurvePoint.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Canvas/PaintingCanvas.swift",
        "data/projects/BOTAnist/BOT-anist/AppState.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/Style/SolidBrushCurvePoint.swift",
        "data/projects/happy-beam/HappyBeam/GameModel.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/CurveExtruderWithEndcaps.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponentExtension.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/CarView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/StationaryRobotComponent.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Seaweed.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Extensions/Entity+ObjectTracking.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Starfish.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Visualizer/AxisVisualizer.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Fish.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/CurveExtruder.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/CarView.swift",
        "data/projects/HelloWorld/World/RealityViews/Sun.swift",
        "data/projects/HelloWorld/World/Entities/SatelliteEntity.swift",
        "data/projects/diorama/Diorama/DioramaView.swift"
      ],
      "examples": [
        "            startPiece.position.z = -1\n            return\n        }\n        let cameraMatrix = pose.originFromAnchorTransform\n        let cameraTransform = Transform(matrix: cameraMatrix)\n        startPiece.position = cameraTransform.translation + cameraMatrix.forward * -0.5\n        #endif\n    }\n    \n    /// Resets the state of the RealityView. Used when going back to the main menu from building or running the ride.\n    public func resetBoard() {",
        "    }\n\n    /// Configures the model based on the current set of inputs.\n    private func configure() {\n        sun?.scale = SIMD3(repeating: scale)\n        sun?.position = position\n    }\n}\n\n#Preview {\n    Sun(scale: 0.1)",
        "            rotation.speed = configuration.speedRatio * speed\n            orbit.components[RotationComponent.self] = rotation\n        }\n\n        box.scale = SIMD3(repeating: configuration.scale)\n        box.position = [0, 0, configuration.altitude]\n\n        satellite.updateTrace(\n            anchor: traceAnchor,\n            width: configuration.traceWidth,\n            isVisible: configuration.isTraceVisible,"
      ],
      "co_occurrences": {
        "swiftui": 52,
        "realitykit": 88,
        "position": 249,
        "rotation": 35,
        "component_access": 78,
        "hierarchy_action": 296,
        "hierarchy_query": 34,
        "view": 12,
        "reality_view": 12,
        "state": 17,
        "scale": 118,
        "entity": 2,
        "attach_orientation": 58,
        "animation_action": 26,
        "event_subscription": 7,
        "component_system": 2,
        "component_update": 3,
        "scene_update": 3,
        "entity_system": 2,
        "entity_subscription": 4,
        "model_entity": 59,
        "view_attach": 1,
        "text": 19,
        "transform_action": 1,
        "animation_controller": 15,
        "transform": 66,
        "drag_gesture": 3,
        "gesture": 8,
        "tap_gesture": 3,
        "on_appear": 2,
        "on_disappear": 2,
        "task": 8,
        "on_change": 2,
        "simultaneous_gesture": 1
      },
      "projects": [
        "AllowingObjectsToInteractWithRealWorldObjects",
        "happy-beam",
        "SwiftSplash",
        "creating-an-interactive-3d-model-in-visionos",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "combining-2d-and-3d-views-in-an-immersive-app",
        "BuildingLocalExperiencesWithRoomTracking",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "PlayingSpatialAudioInVisionOS",
        "BOTAnist",
        "placing-content-on-detected-planes",
        "diorama",
        "exploring-object-tracking-with-arkit",
        "GeneratingInteractiveGeometryWithRealityKit",
        "HappyBeam",
        "CreatingA3DModelWithGesturesInVisionOS",
        "bot-anist",
        "ExploringObjectTrackingWithARKit",
        "ObjectPlacementExample",
        "CreatingASpatialDrawingAppWithRealityKit",
        "playing-spatial-audio",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "swift-splash",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "animation": 2,
        "initialization": 19,
        "interaction": 3
      }
    },
    "scale": {
      "count": 71,
      "files": [
        "data/projects/CreatingAVolumetricWindowInVisionOS/Creating a Volumetric Window/Views/VolumetricWindow.swift",
        "data/projects/HappyBeam/HappyBeam/GameModel.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/CarView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ContentView.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/HelloWorld/World/Entities/EarthEntity.swift",
        "data/projects/hello-world/World/RealityViews/Sun.swift",
        "data/projects/bot-anist/BOT-anist/AppState.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/BeamCollisions.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/UnderwaterView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Extensions/Entity+ObjectTracking.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/hello-world/World/Entities/SatelliteEntity.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/Presets/PresetBrushView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/SwiftSplash/SwiftSplash/Data & State/AppState+PieceLoading.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Scattering.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/ImmersiveView.swift",
        "data/projects/BOTAnist/BOT-anist/AppState.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasConfigurationView.swift",
        "data/projects/HappyBeam/HappyBeam/Gameplay/BeamCollisions.swift",
        "data/projects/happy-beam/HappyBeam/GameModel.swift",
        "data/projects/hello-world/World/Entities/EarthEntity.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/EntityExtensions.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/CarView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/EntityExtensions.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Components/GestureComponent.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Extensions/Entity+ObjectTracking.swift",
        "data/projects/bot-anist/BOT-anist/AppState+Exploration.swift",
        "data/projects/BOTAnist/BOT-anist/AppState+Exploration.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Fish.swift",
        "data/projects/happy-beam/HappyBeam/Gameplay/Clouds.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/swift-splash/SwiftSplash/Data & State/AppState+PieceLoading.swift",
        "data/projects/HelloWorld/World/RealityViews/Sun.swift",
        "data/projects/HelloWorld/World/Entities/SatelliteEntity.swift"
      ],
      "examples": [
        "        do {\n            let scene = try await Entity(named: sceneName, in: SwiftSplashTrackPieces.bundle)\n            let entityContainer = EntityContainer()\n            let theRet = scene.findEntity(named: entityName)\n            if let scaleFactor = scaleFactor {\n                theRet?.scale = SIMD3<Float>(repeating: scaleFactor)\n            }\n            await entityContainer.setEntity(theRet)\n            ret = await entityContainer.entity\n        } catch {\n            fatalError(\"\\tEncountered fatal error: \\(error.localizedDescription)\")",
        "        }\n    }\n\n    /// Configures the model based on the current set of inputs.\n    private func configure() {\n        sun?.scale = SIMD3(repeating: scale)\n        sun?.position = position\n    }\n}\n\n#Preview {",
        "        sun?.position = position\n    }\n}\n\n#Preview {\n    Sun(scale: 0.1)\n}"
      ],
      "co_occurrences": {
        "realitykit": 77,
        "hierarchy_query": 39,
        "swiftui": 56,
        "view": 16,
        "reality_view": 16,
        "state": 16,
        "position": 124,
        "attach_position": 118,
        "entity": 7,
        "rotation": 28,
        "component_access": 52,
        "hierarchy_action": 198,
        "attach_orientation": 24,
        "transform_action": 9,
        "text": 27,
        "tap_gesture": 4,
        "gesture": 8,
        "animation": 2,
        "on_change": 2,
        "transform": 41,
        "on_disappear": 1,
        "animation_controller": 18,
        "animation_action": 38,
        "transition": 4,
        "model_entity": 33,
        "view_attach": 1,
        "event_subscription": 3,
        "event_handling": 1,
        "entity_subscription": 3,
        "task": 1,
        "simultaneous_gesture": 3,
        "high_priority_gesture": 1,
        "drag_gesture": 3
      },
      "projects": [
        "happy-beam",
        "SwiftSplash",
        "creating-an-interactive-3d-model-in-visionos",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "combining-2d-and-3d-views-in-an-immersive-app",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "BOTAnist",
        "placing-content-on-detected-planes",
        "exploring-object-tracking-with-arkit",
        "GeneratingInteractiveGeometryWithRealityKit",
        "HappyBeam",
        "TransformingRealityKitEntitiesUsingGestures",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "CreatingA3DModelWithGesturesInVisionOS",
        "bot-anist",
        "ExploringObjectTrackingWithARKit",
        "CreatingAVolumetricWindowInVisionOS",
        "ObjectPlacementExample",
        "CreatingASpatialDrawingAppWithRealityKit",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "swift-splash"
      ],
      "contexts": {
        "initialization": 18,
        "update": 1,
        "interaction": 2
      }
    },
    "view": {
      "count": 374,
      "files": [
        "data/projects/destination-video/DestinationVideo/Views/HeroView.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Views/DecibelSlider.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/DisplayingTextInVisionOS/Text/Views/TextView.swift",
        "data/projects/destination-video/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/ButtonStyle.swift",
        "data/projects/hello-world/World/Orbit/OrbitModule.swift",
        "data/projects/CreatingStereoscopicImageInVisionOS/Stereo-Image/Views/StereoImage.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/ImmersiveView.swift",
        "data/projects/hello-world/World/Solar System/SolarSystemControls.swift",
        "data/projects/hello-world/World/Modules/Modules.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/ObjectTrackingRealityView.swift",
        "data/projects/destination-video/DestinationVideo/Views/DetailView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/PlacementTooltip.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/UpNextView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/DetailView.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/Views/MainView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectSelectionView.swift",
        "data/projects/CreatingANewSwiftUIWindowViewInVisionOS/Creating New Windows/Views/MainView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/CategoryListView.swift",
        "data/projects/hello-world/World/Settings/SolarSystemSettings.swift",
        "data/projects/destination-video/DestinationVideo/Views/VideoCardView.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectSelectionView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/Lobby.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ImmersiveView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/PaletteView.swift",
        "data/projects/happy-beam/HappyBeam/Views/SoloPlay.swift",
        "data/projects/destination-video/DestinationVideo/ContentView.swift",
        "data/projects/hello-world/World/Settings/SettingsButton.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/InfoLabel.swift",
        "data/projects/hello-world/World/Orbit/OrbitToggle.swift",
        "data/projects/HelloWorld/World/Modules/Modules.swift",
        "data/projects/HelloWorld/World/RealityViews/Starfield.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/VideoListView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/ContentView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/GradientView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/VideoCardView.swift",
        "data/projects/happy-beam/HappyBeam/Views/SoloScore.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/PlacementTooltip.swift",
        "data/projects/happy-beam/HappyBeam/Views/Lobby.swift",
        "data/projects/HelloWorld/World/Globe/GlobeControls.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Views/EntityView.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Views/MainView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/StartScreenView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/BrushTypeView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/VideoCardView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/VideoInfoView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/UpNextView.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/hello-world/World/Modules/TableOfContents.swift",
        "data/projects/Creating3DEntitiesInVisionOSWithRealityKit/Creating 3D Shapes/Views/ShapesView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/VideoCardView.swift",
        "data/projects/diorama/Diorama/LearnMoreView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/ListEntryView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/HeroView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/HomeView.swift",
        "data/projects/bot-anist/BOT-anist/Views/StartScreenView.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotCustomizationView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/WatchNowView.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/MainView.swift",
        "data/projects/destination-video/DestinationVideo/Views/ButtonStyle.swift",
        "data/projects/BOTAnist/BOT-anist/Views/SelectorViews.swift",
        "data/projects/destination-video/DestinationVideo/Views/GradientView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/LibraryView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/Start.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ImmersiveView.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/ContentView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasVisualizationView.swift",
        "data/projects/Creating2DShapesInVisionOSWithSwiftUI/Creating 2D Shapes/MainView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/hello-world/World/RealityViews/Starfield.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/CategoryView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/VideoInfoView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/SplashScreenView.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/Style.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/MainView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/CreatingStereoscopicImageInVisionOS/Stereo-Image/Views/MainView.swift",
        "data/projects/HelloWorld/World/RealityViews/Sun.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/ButtonStyle.swift",
        "data/projects/AddingADepthEffectToTextInVisionOS/DepthText/Views/MainView.swift",
        "data/projects/CreatingAVolumetricWindowInVisionOS/Creating a Volumetric Window/Views/VolumetricWindow.swift",
        "data/projects/hello-world/World/Modifiers/DragRotationModifier.swift",
        "data/projects/HelloWorld/World/Modifiers/TypeTextModifier.swift",
        "data/projects/HelloWorld/World/RealityViews/Earth.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ContentView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/DrawingMeshView.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Views/PaintingView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/GradientView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/WatchNowView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/PlacementTooltip.swift",
        "data/projects/HelloWorld/World/Settings/SettingsButton.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Settings.swift",
        "data/projects/happy-beam/HappyBeam/Views/Start.swift",
        "data/projects/destination-video/DestinationVideo/DestinationTabs.swift",
        "data/projects/DestinationVideo/DestinationVideo/DestinationTabs.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/DestinationTabs.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/TooltipView.swift",
        "data/projects/happy-beam/HappyBeam/Views/MultiPlay.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ImmersiveEnvironmentPickerView.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/SwiftUIArch/SwiftUIArcView.swift",
        "data/projects/HelloWorld/World/Modifiers/DragRotationModifier.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/UpNextView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/TooltipView.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/WorldOcclusionView.swift",
        "data/projects/HelloWorld/World/Globe/GlobeToggle.swift",
        "data/projects/hello-world/World/RealityViews/Earth.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PlaceStartPieceView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/Presets/PresetBrushView.swift",
        "data/projects/destination-video/DestinationVideo/Player/UpNextView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/HeroView.swift",
        "data/projects/hello-world/World/Solar System/SolarSystemToggle.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/MainView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/SwiftUIArch/SwiftUIArcView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/VideoInfoView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/bot-anist/BOT-anist/Views/OrnamentView.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/DetailView.swift",
        "data/projects/DisplayingTextInVisionOS/Text/Views/MainView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/RobotView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasConfigurationView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/ListEntryView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/EditTrackPieceView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/destination-video/DestinationVideo/Views/WatchNowView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/ObjectTrackingRealityView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/OrnamentView.swift",
        "data/projects/CreatingANewSwiftUIWindowViewInVisionOS/Creating New Windows/Views/NewWindowView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/HeroView.swift",
        "data/projects/destination-video/DestinationVideo/Views/CategoryListView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/MultiScore.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/Views/SceneReconstructionView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/EditTrackPieceView.swift",
        "data/projects/hello-world/World/Orbit/Orbit.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/hello-world/World/Settings/SatelliteSettings.swift",
        "data/projects/happy-beam/HappyBeam/Views/MultiScore.swift",
        "data/projects/hello-world/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/CategoryListView.swift",
        "data/projects/hello-world/World/Solar System/SolarSystemModule.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/VideoListView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/ContentView.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/ContentView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectSelectionView.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Views/MainView.swift",
        "data/projects/CreatingGlassMaterialFor3DShapesInVisionOS/Glass/Views/MainView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ImmersiveEnvironmentPickerView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ImmersiveEnvironmentPickerView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/SplashScreenView.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/hello-world/World/Modifiers/TypeTextModifier.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Views/MainView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/WatchNowView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/HelloWorld/World/Settings/OrbitSettings.swift",
        "data/projects/HelloWorld/World/Globe/GlobeModule.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystemToggle.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/DestinationTabs.swift",
        "data/projects/hello-world/World/Settings/GlobeSettings.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/ContentView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/GradientView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementMenuView.swift",
        "data/projects/HelloWorld/World/Orbit/Orbit.swift",
        "data/projects/HelloWorld/World/Modules/ModuleDetail.swift",
        "data/projects/bot-anist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/AddingADepthEffectToTextInVisionOS/DepthText/Views/DepthTextView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/ParameterView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/VideoListView.swift",
        "data/projects/hello-world/World/Globe/GlobeToggle.swift",
        "data/projects/HappyBeam/HappyBeam/Views/MultiPlay.swift",
        "data/projects/adding-a-depth-effect-to-text-in-visionos/DepthText/Views/MainView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ImageButton.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/ContentView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/HelloWorld/World/Settings/EarthSettings.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/HomeView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MovementSettingsView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/TooltipView.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/ImmersiveView.swift",
        "data/projects/diorama/Diorama/ContentView.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Views/MainView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfTrackButtonsView.swift",
        "data/projects/destination-video/DestinationVideo/Views/VideoListView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/ContentView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/DeleteButton.swift",
        "data/projects/adding-a-depth-effect-to-text-in-visionos/DepthText/Views/DepthTextView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/happy-beam/HappyBeam/Views/HappyBeam.swift",
        "data/projects/hello-world/World/Globe/GlobeControls.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/CategoryView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/PlayerView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/InfoLabel.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystemControls.swift",
        "data/projects/creating-3d-entities-with-realitykit/Creating 3D Shapes/Views/ShapesView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementMenuView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/hello-world/World/Globe/Globe.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ContentView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/RobotCustomizationView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenForeground.swift",
        "data/projects/destination-video/DestinationVideo/Views/LibraryView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/PlayerView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/InfoLabel.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/InfoLabel.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Views/DrawableView.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/hello-world/World/Settings/EarthSettings.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/ImmersiveView.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Views/ImmersionView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentToolbar.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/PlayerView.swift",
        "data/projects/hello-world/World/Solar System/SolarSystem.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/CarView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/HappyBeam.swift",
        "data/projects/destination-video/DestinationVideo/Player/PlayerView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/CategoryListView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/LibraryView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/DeleteButton.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Views/HeadPositionView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/ButtonStyle.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/InfoLabel.swift",
        "data/projects/CreatingGlassMaterialFor3DShapesInVisionOS/Glass/Views/GlassView.swift",
        "data/projects/bot-anist/BOT-anist/Views/ContentView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfTrackButtonsView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/HomeView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PlaceStartPieceView.swift",
        "data/projects/HelloWorld/World/Settings/SolarSystemSettings.swift",
        "data/projects/hello-world/World/RealityViews/Sun.swift",
        "data/projects/HappyBeam/HappyBeam/Views/SoloPlay.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentView.swift",
        "data/projects/HelloWorld/World/Orbit/OrbitModule.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/DetailView.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/TogglePanel.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasPlacementView.swift",
        "data/projects/HelloWorld/World/Settings/GlobeSettings.swift",
        "data/projects/HelloWorld/World/Globe/Globe.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Views/HandTrackingView.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystemModule.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/HelloWorld/World/Settings/SatelliteSettings.swift",
        "data/projects/CreatingANewSwiftUIWindowViewInVisionOS/Creating New Windows/Views/OpenWindowView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/HomeView.swift",
        "data/projects/hello-world/World/Modules/ModuleDetail.swift",
        "data/projects/HelloWorld/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/HomeView.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ImmersiveEnvironmentPickerView.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/ContentView.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Views/DecibelSlider.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ImageButton.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/LibraryView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/UIPortalView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/CategoryView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementMenuView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/SoloScore.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/EntityGestures/ContentView.swift",
        "data/projects/bot-anist/BOT-anist/Views/SelectorViews.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentToolbar.swift",
        "data/projects/hello-world/World/Globe/GlobeModule.swift",
        "data/projects/HelloWorld/World/Orbit/OrbitToggle.swift",
        "data/projects/destination-video/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/hello-world/World/Modules/ModuleCard.swift",
        "data/projects/DestinationVideo/DestinationVideo/ContentView.swift",
        "data/projects/destination-video/DestinationVideo/Views/VideoInfoView.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/ContentView.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/CarView.swift",
        "data/projects/hello-world/World/Settings/OrbitSettings.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/HelloWorld/World/Modules/ModuleCard.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/DeleteButton.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystem.swift",
        "data/projects/BOTAnist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/destination-video/DestinationVideo/Views/CategoryView.swift",
        "data/projects/HelloWorld/World/Modules/TableOfContents.swift",
        "data/projects/diorama/Diorama/DioramaView.swift",
        "data/projects/Creating2DShapesInVisionOSWithSwiftUI/Creating 2D Shapes/ShapesView.swift"
      ],
      "examples": [
        "The ContentView view's toolbar.\n*/\n\nimport SwiftUI\n\nstruct ContentToolbar: View {\n    @Environment(AppState.self) private var appState\n    \n    @State private var confirmationShown = false\n    \n    var body: some View {",
        "Abstract:\nA SwiftUI view holding the app's splash screen.\n*/\nimport RealityKit\nimport SwiftUI\nstruct SplashScreenView: View {\n    @Environment(AppState.self) var appState\n    \n    var body: some View {\n        VStack {\n            Text(\"Swift Splash\", comment: \"The title of this game.\")",
        "A SwiftUI view holding buttons that add new slide pieces to the ride.\n*/\n\nimport SwiftUI\n\nstruct PieceShelfTrackButtonsView: View {\n    @Environment(AppState.self) var appState\n    @State private var endPieceIsInRealityView = false\n    \n    let timer = Timer.publish(every: 0.01, on: .main, in: .common).autoconnect()\n    "
      ],
      "co_occurrences": {
        "swiftui": 374,
        "text": 692,
        "state": 257,
        "animation": 65,
        "realitykit": 136,
        "on_appear": 69,
        "reality_view": 69,
        "event_subscription": 33,
        "tap_gesture": 14,
        "gesture": 32,
        "on_change": 101,
        "simultaneous_gesture": 17,
        "hierarchy_action": 69,
        "with_animation": 26,
        "on_disappear": 46,
        "on_tap_gesture": 12,
        "transition": 8,
        "task": 55,
        "position": 16,
        "scale": 16,
        "attach_position": 12,
        "model_entity": 13,
        "state_object": 3,
        "component_access": 40,
        "hierarchy_query": 15,
        "drag_gesture": 16,
        "transform": 11,
        "rotation": 11,
        "animation_controller": 2,
        "animation_action": 2,
        "event_handling": 2,
        "view_attach": 1,
        "transform_action": 5,
        "component_update": 2,
        "scene_update": 2,
        "high_priority_gesture": 2,
        "observed_object": 2,
        "attach_orientation": 8
      },
      "projects": [
        "GeneratingProceduralTexturesInVisionOS",
        "AllowingObjectsToInteractWithRealWorldObjects",
        "happy-beam",
        "DisplayingA3DEnvironmentThroughAPortal",
        "SwiftSplash",
        "creating-an-interactive-3d-model-in-visionos",
        "enabling-video-reflections-in-an-immersive-environment",
        "ApplyingMeshToRealWorldSurroundings",
        "CreatingStereoscopicImageInVisionOS",
        "building-an-immersive-media-viewing-experience",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "AddingADepthEffectToTextInVisionOS",
        "combining-2d-and-3d-views-in-an-immersive-app",
        "BuildingLocalExperiencesWithRoomTracking",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "CreatingGlassMaterialFor3DShapesInVisionOS",
        "SceneReconstructionExample",
        "PresentingAnArtistsScene",
        "PlayingSpatialAudioInVisionOS",
        "DestinationVideo",
        "BOTAnist",
        "destination-video",
        "placing-content-on-detected-planes",
        "diorama",
        "exploring-object-tracking-with-arkit",
        "GeneratingInteractiveGeometryWithRealityKit",
        "CreatingANewSwiftUIWindowViewInVisionOS",
        "creating-3d-entities-with-realitykit",
        "HappyBeam",
        "TransformingRealityKitEntitiesUsingGestures",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "CreatingA3DModelWithGesturesInVisionOS",
        "bot-anist",
        "Creating2DShapesInVisionOSWithSwiftUI",
        "Creating3DEntitiesInVisionOSWithRealityKit",
        "ExploringObjectTrackingWithARKit",
        "TrackingAndVisualizingHandMovement",
        "CreatingImmersiveSpacesInVisionOSWithSwiftUI",
        "CreatingAVolumetricWindowInVisionOS",
        "adding-a-depth-effect-to-text-in-visionos",
        "ObjectPlacementExample",
        "DisplayingA3DObjectThatMovesToStayInAPersonsView",
        "CreatingASpatialDrawingAppWithRealityKit",
        "playing-spatial-audio",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "HelloWorld",
        "DisplayingTextInVisionOS",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "ConstructAnImmersiveEnvironmentForVisionOS",
        "swift-splash",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "interaction": 8
      }
    },
    "text": {
      "count": 503,
      "files": [
        "data/projects/destination-video/DestinationVideo/Views/HeroView.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Views/DecibelSlider.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentView.swift",
        "data/projects/DisplayingTextInVisionOS/Text/Views/TextView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/hello-world/World/Orbit/OrbitModule.swift",
        "data/projects/CreatingStereoscopicImageInVisionOS/Stereo-Image/Views/StereoImage.swift",
        "data/projects/hello-world/World/Solar System/SolarSystemControls.swift",
        "data/projects/bot-anist/BOT-anist/BOTanistApp.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectSelectionView.swift",
        "data/projects/destination-video/DestinationVideo/Views/DetailView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/DetailView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/Views/MainView.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/CategoryListView.swift",
        "data/projects/hello-world/World/Settings/SolarSystemSettings.swift",
        "data/projects/HappyBeam/HappyBeam/Views/Lobby.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectSelectionView.swift",
        "data/projects/happy-beam/HappyBeam/Views/SoloPlay.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/PaletteView.swift",
        "data/projects/hello-world/World/Settings/SettingsButton.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/InfoLabel.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/VideoListView.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/happy-beam/HappyBeam/Views/SoloScore.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/ContentView.swift",
        "data/projects/happy-beam/HappyBeam/Views/Lobby.swift",
        "data/projects/HelloWorld/World/Globe/GlobeControls.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Views/MainView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/StartScreenView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/BrushTypeView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/VideoInfoView.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/hello-world/World/Modules/TableOfContents.swift",
        "data/projects/diorama/Diorama/LearnMoreView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/HomeView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/ListEntryView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/HeroView.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotCustomizationView.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotView.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/MainView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/SelectorViews.swift",
        "data/projects/HappyBeam/HappyBeam/Views/Start.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/Style.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/CategoryView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/VideoInfoView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/SplashScreenView.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/MainView.swift",
        "data/projects/HelloWorld/World/Settings/SliderGridRow.swift",
        "data/projects/HelloWorld/World/Modifiers/TypeTextModifier.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ContentView.swift",
        "data/projects/HelloWorld/World/Settings/SettingsButton.swift",
        "data/projects/happy-beam/HappyBeam/Views/Start.swift",
        "data/projects/destination-video/DestinationVideo/DestinationTabs.swift",
        "data/projects/DestinationVideo/DestinationVideo/DestinationTabs.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/DestinationTabs.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/TooltipView.swift",
        "data/projects/happy-beam/HappyBeam/Views/MultiPlay.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ImmersiveEnvironmentPickerView.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/BillboardSystem.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/TooltipView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PlaceStartPieceView.swift",
        "data/projects/BOTAnist/BOT-anist/BOTanistApp.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/Presets/PresetBrushView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/HeroView.swift",
        "data/projects/hello-world/World/Solar System/SolarSystemToggle.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/MainView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/VideoInfoView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/bot-anist/BOT-anist/Views/OrnamentView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/DetailView.swift",
        "data/projects/DisplayingTextInVisionOS/Text/Views/MainView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/RobotView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasConfigurationView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/ListEntryView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/EditTrackPieceView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/OrnamentView.swift",
        "data/projects/CreatingANewSwiftUIWindowViewInVisionOS/Creating New Windows/Views/NewWindowView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/HeroView.swift",
        "data/projects/destination-video/DestinationVideo/Views/CategoryListView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/MultiScore.swift",
        "data/projects/swift-splash/SwiftSplash/Views/EditTrackPieceView.swift",
        "data/projects/happy-beam/HappyBeam/Views/MultiScore.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/CategoryListView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/VideoListView.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/ContentView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectSelectionView.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Views/MainView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ImmersiveEnvironmentPickerView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ImmersiveEnvironmentPickerView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/SplashScreenView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/hello-world/World/Modifiers/TypeTextModifier.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Views/MainView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/adding-a-depth-effect-to-text-in-visionos/DepthText/Views/DepthTextView.swift",
        "data/projects/HelloWorld/World/Settings/OrbitSettings.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystemToggle.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/DestinationTabs.swift",
        "data/projects/hello-world/World/Settings/GlobeSettings.swift",
        "data/projects/HelloWorld/World/Modules/ModuleDetail.swift",
        "data/projects/AddingADepthEffectToTextInVisionOS/DepthText/Views/DepthTextView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/ParameterView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/VideoListView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/MultiPlay.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Extensions/Entity+ObjectTracking.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ImageButton.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/ContentView.swift",
        "data/projects/HelloWorld/World/Settings/EarthSettings.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/HomeView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/TooltipView.swift",
        "data/projects/diorama/Diorama/ContentView.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Views/MainView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfTrackButtonsView.swift",
        "data/projects/destination-video/DestinationVideo/Views/VideoListView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/hello-world/World/Globe/GlobeControls.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/CategoryView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/InfoLabel.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystemControls.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ContentView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/RobotCustomizationView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/hello-world/World/Settings/SliderGridRow.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/InfoLabel.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/InfoLabel.swift",
        "data/projects/hello-world/World/Settings/EarthSettings.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentToolbar.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/CategoryListView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/InfoLabel.swift",
        "data/projects/CreatingGlassMaterialFor3DShapesInVisionOS/Glass/Views/GlassView.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/SceneReconstructionExampleApp.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfTrackButtonsView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/HomeView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PlaceStartPieceView.swift",
        "data/projects/HelloWorld/World/Settings/SolarSystemSettings.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/PostProcessing.swift",
        "data/projects/HappyBeam/HappyBeam/Views/SoloPlay.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentView.swift",
        "data/projects/HelloWorld/World/Orbit/OrbitModule.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/DetailView.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/TogglePanel.swift",
        "data/projects/HelloWorld/World/Settings/GlobeSettings.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/SceneReconstructionExampleApp.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/HomeView.swift",
        "data/projects/hello-world/World/Modules/ModuleDetail.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/HomeView.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ImmersiveEnvironmentPickerView.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Views/DecibelSlider.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ImageButton.swift",
        "data/projects/HappyBeam/HappyBeam/Views/SoloScore.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/EntityGestures/ContentView.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/UIPortalView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/CategoryView.swift",
        "data/projects/bot-anist/BOT-anist/Views/SelectorViews.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentToolbar.swift",
        "data/projects/hello-world/World/Modules/ModuleCard.swift",
        "data/projects/destination-video/DestinationVideo/Views/VideoInfoView.swift",
        "data/projects/hello-world/World/Settings/OrbitSettings.swift",
        "data/projects/HelloWorld/World/Modules/ModuleCard.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Extensions/Entity+ObjectTracking.swift",
        "data/projects/destination-video/DestinationVideo/Views/CategoryView.swift",
        "data/projects/HelloWorld/World/Modules/TableOfContents.swift",
        "data/projects/bot-anist/BOT-anist/Views/StartScreenView.swift"
      ],
      "examples": [
        "    var body: some View {\n        Button(role: .destructive) {\n            confirmationShown = true\n        } label: {\n            Label {\n                Text(\"Delete ride\", comment: \"An action to delete the ride.\")\n            } icon: {\n                Image(systemName: \"trash.fill\")\n            }\n        }\n        .accessibilityElement()",
        "                Image(systemName: \"trash.fill\")\n            }\n        }\n        .accessibilityElement()\n        .confirmationDialog(\n            Text(\"Are you sure you want to delete all pieces and start over?\", comment: \"A warning about a destructive action the player can take.\"),\n            isPresented: $confirmationShown,\n            titleVisibility: .visible\n        ) {\n            Text(\"Are you sure you want to delete all pieces and start over?\",\n                 comment: \"A warning about a destructive action the player can take.\")",
        "        .confirmationDialog(\n            Text(\"Are you sure you want to delete all pieces and start over?\", comment: \"A warning about a destructive action the player can take.\"),\n            isPresented: $confirmationShown,\n            titleVisibility: .visible\n        ) {\n            Text(\"Are you sure you want to delete all pieces and start over?\",\n                 comment: \"A warning about a destructive action the player can take.\")\n            Button(role: .destructive) {\n                withAnimation {\n                    appState.resetBoard()\n                }"
      ],
      "co_occurrences": {
        "swiftui": 499,
        "view": 692,
        "state": 418,
        "animation": 125,
        "realitykit": 151,
        "on_appear": 111,
        "reality_view": 46,
        "event_subscription": 6,
        "tap_gesture": 9,
        "gesture": 9,
        "on_change": 189,
        "simultaneous_gesture": 17,
        "hierarchy_action": 82,
        "with_animation": 37,
        "on_disappear": 24,
        "on_tap_gesture": 5,
        "transition": 16,
        "task": 69,
        "scale": 27,
        "drag_gesture": 5,
        "model_entity": 19,
        "event_handling": 2,
        "entity_subscription": 2,
        "transform_action": 4,
        "position": 22,
        "animation_controller": 1,
        "component_access": 5,
        "component_update": 2,
        "scene_update": 2,
        "animation_action": 1,
        "attach_orientation": 1,
        "attach_position": 19,
        "state_object": 2,
        "transform": 8,
        "high_priority_gesture": 3,
        "rotation": 2
      },
      "projects": [
        "AllowingObjectsToInteractWithRealWorldObjects",
        "happy-beam",
        "DisplayingA3DEnvironmentThroughAPortal",
        "SwiftSplash",
        "creating-an-interactive-3d-model-in-visionos",
        "enabling-video-reflections-in-an-immersive-environment",
        "ApplyingMeshToRealWorldSurroundings",
        "CreatingStereoscopicImageInVisionOS",
        "building-an-immersive-media-viewing-experience",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "AddingADepthEffectToTextInVisionOS",
        "BuildingLocalExperiencesWithRoomTracking",
        "CreatingGlassMaterialFor3DShapesInVisionOS",
        "SceneReconstructionExample",
        "PresentingAnArtistsScene",
        "PlayingSpatialAudioInVisionOS",
        "DestinationVideo",
        "BOTAnist",
        "destination-video",
        "placing-content-on-detected-planes",
        "diorama",
        "exploring-object-tracking-with-arkit",
        "GeneratingInteractiveGeometryWithRealityKit",
        "CreatingANewSwiftUIWindowViewInVisionOS",
        "HappyBeam",
        "TransformingRealityKitEntitiesUsingGestures",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "CreatingA3DModelWithGesturesInVisionOS",
        "bot-anist",
        "ExploringObjectTrackingWithARKit",
        "TrackingAndVisualizingHandMovement",
        "CreatingImmersiveSpacesInVisionOSWithSwiftUI",
        "adding-a-depth-effect-to-text-in-visionos",
        "ObjectPlacementExample",
        "DisplayingA3DObjectThatMovesToStayInAPersonsView",
        "CreatingASpatialDrawingAppWithRealityKit",
        "playing-spatial-audio",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "HelloWorld",
        "DisplayingTextInVisionOS",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "swift-splash",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "interaction": 6
      }
    },
    "animation": {
      "count": 35,
      "files": [
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ContentView.swift",
        "data/projects/hello-world/World/Modules/Modules.swift",
        "data/projects/hello-world/World/Solar System/SolarSystemControls.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/Lobby.swift",
        "data/projects/diorama/Diorama/ContentView.swift",
        "data/projects/HelloWorld/World/Modules/Modules.swift",
        "data/projects/bot-anist/BOT-anist/Views/OrnamentView.swift",
        "data/projects/hello-world/World/Globe/GlobeControls.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/HelloWorld/World/Globe/GlobeControls.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/happy-beam/HappyBeam/Views/Lobby.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/BrushTypeView.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystemControls.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentToolbar.swift",
        "data/projects/hello-world/World/Modules/TableOfContents.swift",
        "data/projects/BOTAnist/BOT-anist/Views/OrnamentView.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ContentView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ProfileButton.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentToolbar.swift",
        "data/projects/HelloWorld/World/Modules/TableOfContents.swift"
      ],
      "examples": [
        "                    Image(systemName: \"speaker.slash.fill\")\n                } else {\n                    Image(systemName: \"speaker.wave.3.fill\")\n                }\n            }\n            .animation(.none, value: 0)\n            .fontWeight(.semibold)\n            .frame(width: 100)\n        }\n        .accessibilityElement()\n    }",
        "                                                Image(systemName: \"speaker.slash.fill\")\n                                            } else {\n                                                Image(systemName: \"speaker.wave.3.fill\")\n                                            }\n                                        }\n                                        .animation(.none, value: 0)\n                                        .fontWeight(.semibold)\n                                        .frame(width: 100)\n                                    }\n                                }\n                                .toolbar(.visible, for: .navigationBar)",
        "            }\n        }\n        .padding(12)\n        .glassBackgroundEffect(in: .rect(cornerRadius: 20))\n        .opacity(isVisible ? 1 : 0)\n        .animation(.default.speed(2), value: isVisible)\n        .onChange(of: isVisible) { axFocusTiltMenu = true }\n    }\n}\n\nextension HorizontalAlignment {"
      ],
      "co_occurrences": {
        "swiftui": 35,
        "view": 65,
        "text": 125,
        "state": 14,
        "realitykit": 10,
        "with_animation": 2,
        "transition": 4,
        "on_appear": 5,
        "on_change": 20,
        "reality_view": 2,
        "scale": 2,
        "tap_gesture": 2,
        "gesture": 2
      },
      "projects": [
        "CreatingASpatialDrawingAppWithRealityKit",
        "HappyBeam",
        "HelloWorld",
        "bot-anist",
        "happy-beam",
        "SwiftSplash",
        "PresentingAnArtistsScene",
        "DestinationVideo",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "BOTAnist",
        "destination-video",
        "enabling-video-reflections-in-an-immersive-environment",
        "diorama",
        "swift-splash",
        "building-an-immersive-media-viewing-experience",
        "hello-world"
      ],
      "contexts": {
        "animation": 35
      }
    },
    "on_appear": {
      "count": 63,
      "files": [
        "data/projects/SwiftSplash/SwiftSplash/Views/SplashScreenView.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/hello-world/World/Modifiers/TypeTextModifier.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Views/MainView.swift",
        "data/projects/HelloWorld/World/Modifiers/TypeTextModifier.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamApp.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentView.swift",
        "data/projects/DestinationVideo/DestinationVideo/PlayerWindow.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfTrackButtonsView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/ContentView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/PlayerWindow.swift",
        "data/projects/hello-world/World/Solar System/SolarSystemControls.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/DestinationVideo.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/bot-anist/BOT-anist/BOTanistApp.swift",
        "data/projects/happy-beam/HappyBeam/Views/Start.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/Views/MainView.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/BOTAnist/BOT-anist/BOTanistApp.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/destination-video/DestinationVideo/ContentView.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/MainView.swift",
        "data/projects/diorama/Diorama/ContentView.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Views/MainView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfTrackButtonsView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/ContentView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/DestinationVideo.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/HelloWorld/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamApp.swift",
        "data/projects/swift-splash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/CategoryView.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Views/MainView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/CategoryView.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystemControls.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/destination-video/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/DestinationVideo/DestinationVideo/ContentView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/TrailerView.swift",
        "data/projects/destination-video/DestinationVideo/PlayerWindow.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/MainView.swift",
        "data/projects/hello-world/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/HappyBeam/HappyBeam/Views/Start.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/PlayerWindow.swift",
        "data/projects/destination-video/DestinationVideo/DestinationVideo.swift",
        "data/projects/DestinationVideo/DestinationVideo/DestinationVideo.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystem.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/CategoryView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/SplashScreenView.swift",
        "data/projects/destination-video/DestinationVideo/Views/CategoryView.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/MainView.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Views/MainView.swift",
        "data/projects/hello-world/World/Solar System/SolarSystem.swift"
      ],
      "examples": [
        "            Image(\"swiftSplashHero\")\n                .resizable()\n                .aspectRatio(contentMode: .fit)\n                .offset(y: -110)\n        }\n        .onAppear {\n            // Play menu music as content loads.\n            appState.music = .menu\n        }\n    }\n}",
        "                    }\n                )\n                .disabled(endPieceIsInRealityView)\n                .accessibilityElement()\n                .accessibilityLabel(Text(\"Add finish line.\", comment: \"Accessibility label: The action of adding a ride piece.\"))\n                .onAppear {\n                    Task {\n                        while true {\n                            try? await Task.sleep(for: .milliseconds(200))\n                            endPieceIsInRealityView = appState.goalPiece?.parent != nil\n                        }",
        "            .padding(.trailing, 9)\n            .accessibilityElement()\n            .accessibilityValue(Text(\"Start the ride over from the beginning.\", comment: \"Accessibility value: An action the player can take.\"))\n        }\n        .opacity(animateIn ? 0.0 : 1.0)\n        .onAppear {\n            Timer.scheduledTimer(withTimeInterval: 1.0, repeats: false) { _ in\n                withAnimation(.easeInOut(duration: 0.7)) {\n                    animateIn = false\n                }\n            }"
      ],
      "co_occurrences": {
        "swiftui": 63,
        "realitykit": 17,
        "view": 69,
        "text": 111,
        "state": 80,
        "with_animation": 6,
        "on_disappear": 20,
        "on_change": 35,
        "animation": 5,
        "transition": 4,
        "task": 10,
        "simultaneous_gesture": 4,
        "reality_view": 4,
        "hierarchy_action": 4,
        "model_entity": 2,
        "position": 2,
        "tap_gesture": 2,
        "gesture": 2,
        "attach_position": 2
      },
      "projects": [
        "AllowingObjectsToInteractWithRealWorldObjects",
        "happy-beam",
        "SwiftSplash",
        "creating-an-interactive-3d-model-in-visionos",
        "enabling-video-reflections-in-an-immersive-environment",
        "ApplyingMeshToRealWorldSurroundings",
        "building-an-immersive-media-viewing-experience",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "BuildingLocalExperiencesWithRoomTracking",
        "PlayingSpatialAudioInVisionOS",
        "DestinationVideo",
        "BOTAnist",
        "destination-video",
        "diorama",
        "HappyBeam",
        "CreatingA3DModelWithGesturesInVisionOS",
        "bot-anist",
        "TrackingAndVisualizingHandMovement",
        "CreatingImmersiveSpacesInVisionOSWithSwiftUI",
        "DisplayingA3DObjectThatMovesToStayInAPersonsView",
        "playing-spatial-audio",
        "HelloWorld",
        "swift-splash",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "update": 3,
        "interaction": 2
      }
    },
    "reality_view": {
      "count": 67,
      "files": [
        "data/projects/CreatingAVolumetricWindowInVisionOS/Creating a Volumetric Window/Views/VolumetricWindow.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/CreatingGlassMaterialFor3DShapesInVisionOS/Glass/Views/GlassView.swift",
        "data/projects/HelloWorld/World/RealityViews/Earth.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ContentView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/DrawingMeshView.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Views/PaintingView.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/CreatingStereoscopicImageInVisionOS/Stereo-Image/Views/StereoImage.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/ImmersiveView.swift",
        "data/projects/hello-world/World/RealityViews/Sun.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/ObjectTrackingRealityView.swift",
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/BillboardSystem.swift",
        "data/projects/bot-anist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasPlacementView.swift",
        "data/projects/hello-world/World/RealityViews/Earth.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/WorldOcclusionView.swift",
        "data/projects/PresentingAnArtistsScene/ArtistWorkflowExample/ImmersiveView.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/Presets/PresetBrushView.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Views/HandTrackingView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/ImmersiveView.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/HelloWorld/World/RealityViews/Starfield.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Extensions/RealityViewExtensions.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/BOTAnist/BOT-anist/Views/RobotView.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Views/EntityView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasConfigurationView.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/UIPortalView.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/EntityGestures/ContentView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundView.swift",
        "data/projects/creating-3d-entities-with-realitykit/Creating 3D Shapes/Views/ShapesView.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Views/SpatialAudioView.swift",
        "data/projects/Creating3DEntitiesInVisionOSWithRealityKit/Creating 3D Shapes/Views/ShapesView.swift",
        "data/projects/diorama/Diorama/LearnMoreView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/ObjectTrackingRealityView.swift",
        "data/projects/ApplyingMeshToRealWorldSurroundings/SceneReconstruction/Views/SceneReconstructionView.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/CarView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenForeground.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotView.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/ContentView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ImmersiveView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasVisualizationView.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/ImmersiveView.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Views/ImmersionView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/hello-world/World/RealityViews/Starfield.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/TrailAnimationSystem.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/CarView.swift",
        "data/projects/HelloWorld/World/RealityViews/Sun.swift",
        "data/projects/diorama/Diorama/DioramaView.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift"
      ],
      "examples": [
        "        case editMenu = 100\n        case startCard = 101\n    }\n    \n    var body: some View {\n        RealityView { content, attachments in\n            content.add(appState.root)\n            \n            if let editMenu = attachments.entity(for: AttachmentIDs.editMenu) {\n                appState.editAttachment = editMenu\n                editMenu.components.set(BillboardComponent())",
        "\n    /// The Earth entity that the view creates and stores for later updates.\n    @State private var earthEntity: EarthEntity?\n\n    var body: some View {\n        RealityView { content in\n            // Create an earth entity with tilt, rotation, a moon, and so on.\n            let earthEntity = await EarthEntity(\n                configuration: earthConfiguration,\n                satelliteConfiguration: satelliteConfiguration,\n                moonConfiguration: moonConfiguration)",
        "///\n/// When centered on the viewer, this entity creates the illusion of floating\n/// in space.\nstruct Starfield: View {\n    var body: some View {\n        RealityView { content in\n            // Create a material with a star field on it.\n            guard let resource = try? await TextureResource(named: \"Starfield\") else {\n                // If the asset isn't available, something is wrong with the app.\n                fatalError(\"Unable to load starfield texture.\")\n            }"
      ],
      "co_occurrences": {
        "swiftui": 67,
        "realitykit": 81,
        "view": 69,
        "text": 46,
        "event_subscription": 33,
        "tap_gesture": 13,
        "gesture": 26,
        "on_change": 21,
        "simultaneous_gesture": 12,
        "hierarchy_action": 66,
        "state": 74,
        "position": 15,
        "scale": 16,
        "attach_position": 12,
        "task": 37,
        "component_access": 41,
        "hierarchy_query": 16,
        "animation": 2,
        "on_appear": 4,
        "transition": 4,
        "on_disappear": 8,
        "transform": 10,
        "rotation": 13,
        "animation_controller": 2,
        "animation_action": 2,
        "drag_gesture": 11,
        "event_handling": 2,
        "model_entity": 10,
        "view_attach": 1,
        "transform_action": 4,
        "component_update": 4,
        "scene_update": 4,
        "high_priority_gesture": 1,
        "with_animation": 1,
        "on_tap_gesture": 1,
        "component_system": 1,
        "entity_system": 1,
        "observed_object": 2,
        "attach_orientation": 8
      },
      "projects": [
        "GeneratingProceduralTexturesInVisionOS",
        "AllowingObjectsToInteractWithRealWorldObjects",
        "happy-beam",
        "DisplayingA3DEnvironmentThroughAPortal",
        "SwiftSplash",
        "creating-an-interactive-3d-model-in-visionos",
        "enabling-video-reflections-in-an-immersive-environment",
        "ApplyingMeshToRealWorldSurroundings",
        "CreatingStereoscopicImageInVisionOS",
        "building-an-immersive-media-viewing-experience",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "combining-2d-and-3d-views-in-an-immersive-app",
        "BuildingLocalExperiencesWithRoomTracking",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "CreatingGlassMaterialFor3DShapesInVisionOS",
        "SceneReconstructionExample",
        "PresentingAnArtistsScene",
        "PlayingSpatialAudioInVisionOS",
        "DestinationVideo",
        "BOTAnist",
        "destination-video",
        "placing-content-on-detected-planes",
        "diorama",
        "exploring-object-tracking-with-arkit",
        "GeneratingInteractiveGeometryWithRealityKit",
        "creating-3d-entities-with-realitykit",
        "HappyBeam",
        "TransformingRealityKitEntitiesUsingGestures",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "CreatingA3DModelWithGesturesInVisionOS",
        "bot-anist",
        "Creating3DEntitiesInVisionOSWithRealityKit",
        "ExploringObjectTrackingWithARKit",
        "TrackingAndVisualizingHandMovement",
        "CreatingImmersiveSpacesInVisionOSWithSwiftUI",
        "CreatingAVolumetricWindowInVisionOS",
        "ObjectPlacementExample",
        "CreatingASpatialDrawingAppWithRealityKit",
        "playing-spatial-audio",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "HelloWorld",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "ConstructAnImmersiveEnvironmentForVisionOS",
        "swift-splash",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "interaction": 2
      }
    },
    "event_subscription": {
      "count": 44,
      "files": [
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/HelloWorld/World/RealityViews/Earth.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/EntityMoverComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/PostProcessing.swift",
        "data/projects/bot-anist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/UnderwaterView.swift",
        "data/projects/hello-world/World/RealityViews/Earth.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponent.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/CharacterStates.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Character.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroPlantComponent.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/StationaryRobotComponent.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/BOTAnist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Fish.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/diorama/Diorama/DioramaView.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift"
      ],
      "examples": [
        "    @State internal var draggedEntity: Entity? = nil\n    @State internal var rotatedEntity: Entity? = nil\n    \n    @State internal var shouldSingleTap = false\n    @State internal var dragStartTime: TimeInterval?\n    @State internal var subscriptions = [EventSubscription]()\n    @State internal var rotationParent: Entity? = nil\n    \n    let doubleTapTolerance = 0.25\n    static let editUIQuery = EntityQuery(where: .has(EditUILocationMarkerComponent.self))\n    static let connectableQuery = EntityQuery(where: .has(ConnectableComponent.self))",
        "                moonConfiguration: moonConfiguration)\n            content.add(earthEntity)\n\n            // Handle custom accessibility events.\n            if let axCustomActionHandler {\n                _ = content.subscribe(\n                    to: AccessibilityEvents.CustomAction.self,\n                    on: nil,\n                    componentType: nil,\n                    axCustomActionHandler)\n            }",
        "\n    private var subscription: Cancellable?\n\n    public required init(scene: Scene) {\n        subscription =\n            scene.subscribe(\n                to: ComponentEvents.DidAdd.self,\n                componentType: StationaryRobotComponent.self, { event in\n                    self.createRuntimeComponent(entity: event.entity)\n                }\n            )"
      ],
      "co_occurrences": {
        "swiftui": 36,
        "realitykit": 47,
        "view": 33,
        "reality_view": 33,
        "text": 6,
        "tap_gesture": 14,
        "gesture": 34,
        "on_change": 16,
        "simultaneous_gesture": 6,
        "hierarchy_action": 101,
        "state": 120,
        "position": 8,
        "rotation": 21,
        "component_access": 128,
        "component_system": 4,
        "component_update": 4,
        "scene_update": 4,
        "entity_system": 4,
        "entity_subscription": 15,
        "hierarchy_query": 23,
        "attach_position": 7,
        "animation_controller": 12,
        "animation_action": 18,
        "event_handling": 9,
        "transform": 19,
        "scale": 3,
        "drag_gesture": 12,
        "task": 84,
        "observed_object": 8,
        "attach_orientation": 32
      },
      "projects": [
        "HappyBeam",
        "HelloWorld",
        "bot-anist",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "happy-beam",
        "SwiftSplash",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "BOTAnist",
        "placing-content-on-detected-planes",
        "diorama",
        "swift-splash",
        "ObjectPlacementExample",
        "tracking-specific-points-in-world-space",
        "hello-world"
      ],
      "contexts": {
        "initialization": 5,
        "update": 2,
        "animation": 4
      }
    },
    "tap_gesture": {
      "count": 13,
      "files": [
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ImmersiveView.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/Presets/PresetBrushView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ContentView.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift"
      ],
      "examples": [
        "                    }\n                    appState.updateSelection()\n                })\n        )\n        .simultaneousGesture(\n            TapGesture()\n                .targetedToAnyEntity()\n                .onEnded({ value in\n                    guard appState.phase == .buildingTrack else { return }\n                    Task {\n                        defer {",
        "            // Add the initial RealityKit content.\n            if let immersiveContentEntity = try? await Entity(named: \"Immersive\", in: realityKitContentBundle) {\n                content.add(immersiveContentEntity)\n            }\n        }\n        .gesture(TapGesture().targetedToAnyEntity()\n            .onEnded({ value in\n                // Ensure the tapped entity is a hero plant and that it needs tending.\n                if let scene = value.entity.scene,\n                   let heroRobot = getHeroRobotIfAvailable(scene: scene),\n                   isPlantUnhealthy(entity: value.entity),",
        "                if newPhase == .background {\n                    appModel.showImmersiveSpace = false\n                }\n            }\n        }\n        .gesture(TapGesture().targetedToAnyEntity().onEnded { _ in\n            enlarge.toggle()\n        })\n        .toolbar {\n            ToolbarItemGroup(placement: .bottomOrnament) {\n                VStack(spacing: 12) {"
      ],
      "co_occurrences": {
        "swiftui": 13,
        "realitykit": 17,
        "view": 14,
        "reality_view": 13,
        "text": 9,
        "event_subscription": 14,
        "gesture": 15,
        "on_change": 8,
        "simultaneous_gesture": 8,
        "hierarchy_action": 9,
        "component_access": 25,
        "hierarchy_query": 6,
        "state": 19,
        "scale": 4,
        "animation": 2,
        "task": 29,
        "position": 6,
        "high_priority_gesture": 1,
        "drag_gesture": 3,
        "model_entity": 2,
        "on_appear": 2,
        "on_disappear": 2,
        "attach_position": 3
      },
      "projects": [
        "CreatingASpatialDrawingAppWithRealityKit",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "BuildingLocalExperiencesWithRoomTracking",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "SwiftSplash",
        "SceneReconstructionExample",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "placing-content-on-detected-planes",
        "swift-splash",
        "ObjectPlacementExample",
        "tracking-specific-points-in-world-space",
        "building-local-experiences-with-room-tracking"
      ],
      "contexts": {
        "interaction": 9
      }
    },
    "gesture": {
      "count": 32,
      "files": [
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/hello-world/World/Modifiers/DragRotationModifier.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ContentView.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Views/PaintingView.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/HelloWorld/World/Modifiers/DragRotationModifier.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasPlacementView.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/WorldOcclusionView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/ContentView.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/PlayerView.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/CarView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/PlayerView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/RealityKitAnimation/ImmersiveView.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/PlayerView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/destination-video/DestinationVideo/Player/PlayerView.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/CarView.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift"
      ],
      "examples": [
        "            }\n            Attachment(id: AttachmentIDs.startCard) {\n                PlaceStartPieceView()\n            }\n        }\n        .gesture(DragGesture(minimumDistance: 50)\n            .targetedToAnyEntity()\n            .onChanged { value in\n                guard appState.phase == .buildingTrack || appState.phase == .placingStartPiece\n                        || appState.phase == .draggingStartPiece else { return }\n                handleDrag(value, ended: false)",
        "\n    func body(content: Content) -> some View {\n        content\n            .rotation3DEffect(.radians(yaw == 0 ? 0.01 : yaw), axis: .y)\n            .rotation3DEffect(.radians(pitch == 0 ? 0.01 : pitch), axis: .x)\n            .gesture(DragGesture(minimumDistance: 0.0)\n                .targetedToAnyEntity()\n                .onChanged { value in\n                    // Find the current linear displacement.\n                    let location3D = value.convert(value.location3D, from: .local, to: .scene)\n                    let startLocation3D = value.convert(value.startLocation3D, from: .local, to: .scene)",
        "                        lastIndexPose = indexPos\n                    }\n                }\n            }))\n        }\n        .gesture(\n            DragGesture(minimumDistance: 0)\n                // Enable the gesture to target the drawing canvas.\n                .targetedToAnyEntity()\n                .onChanged({ _ in\n                    if let pos = lastIndexPose {"
      ],
      "co_occurrences": {
        "swiftui": 32,
        "realitykit": 32,
        "view": 32,
        "reality_view": 26,
        "text": 9,
        "event_subscription": 34,
        "tap_gesture": 15,
        "on_change": 19,
        "simultaneous_gesture": 7,
        "hierarchy_action": 35,
        "state": 69,
        "with_animation": 8,
        "task": 51,
        "component_access": 39,
        "hierarchy_query": 10,
        "scale": 8,
        "animation": 2,
        "drag_gesture": 17,
        "state_object": 1,
        "transform_action": 1,
        "component_update": 1,
        "scene_update": 1,
        "model_entity": 7,
        "position": 10,
        "attach_position": 8,
        "observed_object": 2,
        "transform": 5,
        "rotation": 6,
        "attach_orientation": 8,
        "on_appear": 2,
        "on_disappear": 2
      },
      "projects": [
        "AllowingObjectsToInteractWithRealWorldObjects",
        "happy-beam",
        "SwiftSplash",
        "creating-an-interactive-3d-model-in-visionos",
        "enabling-video-reflections-in-an-immersive-environment",
        "building-an-immersive-media-viewing-experience",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "BuildingLocalExperiencesWithRoomTracking",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "SceneReconstructionExample",
        "DestinationVideo",
        "destination-video",
        "placing-content-on-detected-planes",
        "GeneratingInteractiveGeometryWithRealityKit",
        "HappyBeam",
        "CreatingA3DModelWithGesturesInVisionOS",
        "ObjectPlacementExample",
        "CreatingASpatialDrawingAppWithRealityKit",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "swift-splash",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "interaction": 32,
        "initialization": 1
      }
    },
    "simultaneous_gesture": {
      "count": 16,
      "files": [
        "data/projects/BOTAnist/BOT-anist/Views/RobotView.swift",
        "data/projects/hello-world/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/swift-splash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/Presets/PresetBrushView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/TrackBuildingView.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Extensions/RealityViewExtensions.swift",
        "data/projects/HelloWorld/World/Modifiers/PlacementGesturesModifier.swift",
        "data/projects/Combining2DAnd3DViewsInAnImmersiveApp/MultiDimensionalImmersiveContent/RainbowView.swift"
      ],
      "examples": [
        "            .onEnded { value in\n                guard appState.phase == .buildingTrack || appState.phase == .placingStartPiece\n                        || appState.phase == .draggingStartPiece else { return }\n                handleDrag(value, ended: true)\n            })\n        .simultaneousGesture(\n            RotateGesture(minimumAngleDelta: Angle(degrees: 4))\n                .targetedToAnyEntity()\n                .onChanged({ value in\n                    guard appState.phase == .buildingTrack || appState.phase == .placingStartPiece\n                            || appState.phase == .draggingStartPiece else { return }",
        "        }\n        .accessibilityAction(named: Text(\"Rotate selected pieces 90 degrees counter-clockwise\",\n                                         comment: \"Accessibility action: An action to rotate the selected pice.\")) {\n            appState.rotateSelectedEntities(direction: .counterClockwise)\n        }\n        .simultaneousGesture(\n            TapGesture(count: 2)\n                .targetedToAnyEntity()\n                .onEnded({ value in\n                    guard appState.phase == .buildingTrack else { return }\n                    shouldSingleTap = false",
        "                        appState.toggleTrackPieceInSelection(entity: entity)\n                    }\n                    appState.updateSelection()\n                })\n        )\n        .simultaneousGesture(\n            TapGesture()\n                .targetedToAnyEntity()\n                .onEnded({ value in\n                    guard appState.phase == .buildingTrack else { return }\n                    Task {"
      ],
      "co_occurrences": {
        "swiftui": 16,
        "realitykit": 18,
        "view": 17,
        "reality_view": 12,
        "text": 17,
        "event_subscription": 6,
        "tap_gesture": 8,
        "gesture": 7,
        "on_change": 14,
        "hierarchy_action": 11,
        "state": 19,
        "on_appear": 4,
        "drag_gesture": 4,
        "position": 4,
        "scale": 3,
        "high_priority_gesture": 1,
        "component_access": 2,
        "hierarchy_query": 4,
        "attach_position": 1
      },
      "projects": [
        "CreatingASpatialDrawingAppWithRealityKit",
        "TransformingRealityKitEntitiesUsingGestures",
        "HelloWorld",
        "Combining2DAnd3DViewsInAnImmersiveApp",
        "bot-anist",
        "SwiftSplash",
        "BOTAnist",
        "swift-splash",
        "hello-world"
      ],
      "contexts": {}
    },
    "with_animation": {
      "count": 21,
      "files": [
        "data/projects/adding-a-depth-effect-to-text-in-visionos/DepthText/Views/DepthTextView.swift",
        "data/projects/hello-world/World/Modifiers/DragRotationModifier.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/ContentView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/destination-video/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/AddingADepthEffectToTextInVisionOS/DepthText/Views/DepthTextView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/diorama/Diorama/LearnMoreView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/ContentView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/HelloWorld/World/Modifiers/DragRotationModifier.swift"
      ],
      "examples": [
        "            .accessibilityValue(Text(\"Start the ride over from the beginning.\", comment: \"Accessibility value: An action the player can take.\"))\n        }\n        .opacity(animateIn ? 0.0 : 1.0)\n        .onAppear {\n            Timer.scheduledTimer(withTimeInterval: 1.0, repeats: false) { _ in\n                withAnimation(.easeInOut(duration: 0.7)) {\n                    animateIn = false\n                }\n            }\n        }\n        .onDisappear {",
        "        .opacity(animateIn ? 0 : 1.0)\n        .frame(width: 460, height: 420, alignment: .center)\n        .onAppear {\n            if Self.displayedOnce {\n                Timer.scheduledTimer(withTimeInterval: 1.0, repeats: false) { _ in\n                    withAnimation(.easeIn(duration: 0.7)) {\n                        animateIn = false\n                    }\n                }\n            } else {\n                animateIn = false",
        "                        shouldCancelRide = false\n                    }\n                    \n                    Task {\n                        try? await Task.sleep(for: .seconds(0.1))\n                        withAnimation(.easeIn(duration: 1.0)) {\n                            if appState.presentedRide.isEmpty {\n                                isReducedHeight = false\n                            } else {\n                                isReducedHeight = true\n                            }"
      ],
      "co_occurrences": {
        "swiftui": 21,
        "realitykit": 14,
        "view": 26,
        "text": 37,
        "state": 57,
        "on_appear": 6,
        "on_disappear": 8,
        "on_change": 26,
        "animation": 2,
        "transition": 4,
        "gesture": 8,
        "on_tap_gesture": 5,
        "reality_view": 1
      },
      "projects": [
        "AddingADepthEffectToTextInVisionOS",
        "HelloWorld",
        "SwiftSplash",
        "DestinationVideo",
        "destination-video",
        "enabling-video-reflections-in-an-immersive-environment",
        "diorama",
        "adding-a-depth-effect-to-text-in-visionos",
        "swift-splash",
        "building-an-immersive-media-viewing-experience",
        "hello-world"
      ],
      "contexts": {
        "interaction": 2,
        "animation": 6
      }
    },
    "on_disappear": {
      "count": 34,
      "files": [
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/DestinationVideo/DestinationVideo/PlayerWindow.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/destination-video/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/PlayerWindow.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/DestinationVideo.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/HelloWorld/World/Orbit/Orbit.swift",
        "data/projects/HelloWorld/World/Globe/Globe.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/ImmersiveView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/DestinationVideo.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/RideControlView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/swift-splash/SwiftSplash/Views/PieceShelfView.swift",
        "data/projects/destination-video/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Views/ViewModifiers.swift",
        "data/projects/hello-world/World/Globe/Globe.swift",
        "data/projects/destination-video/DestinationVideo/PlayerWindow.swift",
        "data/projects/hello-world/World/Orbit/Orbit.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/PlayerWindow.swift",
        "data/projects/destination-video/DestinationVideo/DestinationVideo.swift",
        "data/projects/destination-video/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/DestinationVideo/DestinationVideo/DestinationVideo.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/ImmersiveView.swift",
        "data/projects/HelloWorld/World/Solar System/SolarSystem.swift",
        "data/projects/DestinationVideo/DestinationVideo/Views/visionOS/ImmersiveEnvironmentView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/hello-world/World/Solar System/SolarSystem.swift"
      ],
      "examples": [
        "                withAnimation(.easeInOut(duration: 0.7)) {\n                    animateIn = false\n                }\n            }\n        }\n        .onDisappear {\n            animateIn = true\n        }\n        .onChange(of: paused) {\n            shouldPauseRide.toggle()\n            ",
        "                    try? await Task.sleep(for: .milliseconds(200))\n                    canStartRide = appState.canStartRide\n                }\n            }\n        }\n        .onDisappear {\n            animateIn = true\n        }\n    }\n}\nstruct TranslucentGroupBox: GroupBoxStyle {",
        "        }\n        .placementGestures(\n            initialPosition: Point3D([475, -1200.0, -1200.0]),\n            axZoomIn: axZoomIn,\n            axZoomOut: axZoomOut)\n        .onDisappear {\n            model.isShowingOrbit = false\n        }\n    }\n}"
      ],
      "co_occurrences": {
        "swiftui": 34,
        "realitykit": 16,
        "view": 46,
        "text": 24,
        "state": 48,
        "with_animation": 8,
        "on_appear": 20,
        "on_change": 12,
        "on_tap_gesture": 4,
        "reality_view": 8,
        "transition": 4,
        "transform": 2,
        "scale": 1,
        "rotation": 4,
        "animation_controller": 1,
        "hierarchy_action": 10,
        "animation_action": 1,
        "model_entity": 2,
        "position": 2,
        "tap_gesture": 2,
        "gesture": 2,
        "task": 8,
        "attach_position": 2
      },
      "projects": [
        "BuildingLocalExperiencesWithRoomTracking",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "HelloWorld",
        "SwiftSplash",
        "DestinationVideo",
        "destination-video",
        "ConstructAnImmersiveEnvironmentForVisionOS",
        "enabling-video-reflections-in-an-immersive-environment",
        "swift-splash",
        "building-an-immersive-media-viewing-experience",
        "hello-world",
        "building-local-experiences-with-room-tracking"
      ],
      "contexts": {}
    },
    "on_tap_gesture": {
      "count": 7,
      "files": [
        "data/projects/swift-splash/SwiftSplash/Views/PlaceStartPieceView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/destination-video/DestinationVideo/Player/InlinePlayerView.swift",
        "data/projects/SwiftSplash/SwiftSplash/Views/PlaceStartPieceView.swift",
        "data/projects/diorama/Diorama/LearnMoreView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/InlinePlayerView.swift"
      ],
      "examples": [
        "            .lineLimit(2)\n            .multilineTextAlignment(.center)\n            \n            .frame(maxWidth: 465, maxHeight: 100, alignment: .center)\n            .glassBackgroundEffect()\n            .onTapGesture {\n                SoundEffectPlayer.shared.play(.fishSounds, from: appState.startPiece ?? appState.root)\n            }\n    }\n}\n#Preview {",
        "                    \n        }\n        .font(.largeTitle)\n        .frame(maxWidth: .infinity, maxHeight: .infinity)\n        .contentShape(Rectangle())\n        .onTapGesture {\n            player.togglePlayback()\n            isShowingControls = true\n            // Execute the code below on the next runloop cycle.\n            Task { @MainActor in\n                if player.isPlaying {",
        "                }\n            }\n            .frame(width: 408)\n            .padding(24)\n            .greenBackground()\n            .onTapGesture {\n                withAnimation(.spring) {\n                    showingMoreInfo.toggle()\n                    \n                    if var trailOpacity = trail?.components[ControlledOpacityComponent.self] {\n                        trailOpacity.shouldShow = showingMoreInfo"
      ],
      "co_occurrences": {
        "swiftui": 7,
        "view": 12,
        "text": 5,
        "state": 5,
        "with_animation": 5,
        "on_disappear": 4,
        "realitykit": 2,
        "reality_view": 1
      },
      "projects": [
        "SwiftSplash",
        "DestinationVideo",
        "destination-video",
        "enabling-video-reflections-in-an-immersive-environment",
        "diorama",
        "swift-splash",
        "building-an-immersive-media-viewing-experience"
      ],
      "contexts": {
        "initialization": 4
      }
    },
    "task": {
      "count": 60,
      "files": [
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/hello-world/World/Modifiers/TypeTextModifier.swift",
        "data/projects/HelloWorld/World/Modifiers/TypeTextModifier.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Views/PaintingView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/HomeView.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/SoloPlay.swift",
        "data/projects/happy-beam/HappyBeam/Views/MultiPlay.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/ObjectTrackingApp.swift",
        "data/projects/HappyBeam/HappyBeam/Views/MultiPlay.swift",
        "data/projects/happy-beam/HappyBeam/Views/SoloPlay.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/ObjectTrackingApp.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/HomeView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/ObjectPlacementApp.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/ObjectPlacementApp.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Views/HomeView.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Views/HomeView.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/CubeMeshInteraction.swift",
        "data/projects/happy-beam/HappyBeam/Views/HappyBeam.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasConfigurationView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/HomeView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/ObjectPlacementApp.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/HappyBeam/HappyBeam/Views/HappyBeam.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift"
      ],
      "examples": [
        "                if isAnimated == false {\n                    text = finalText\n                    isFinished = true\n                }\n            }\n            .task {\n                guard isAnimated else { return }\n\n                // Blink the cursor a few times.\n                for _ in 1 ... 2 {\n                    text = cursor",
        "                .onEnded({ _ in\n                    // End the current stroke when the drag gesture ends.\n                    canvas.finishStroke()\n                })\n        )\n        .task {\n            // Start hand tracking once the view starts.\n            await paintingHandTracking.startTracking()\n        }\n    }\n}",
        "    \n    var body: some View {\n        RealityView { content in\n            content.add(model.setupContentEntity())\n        }\n        .task {\n            do {\n                if model.dataProvidersAreSupported && model.isReadyToRun {\n                    try await model.session.run([model.sceneReconstruction, model.handTracking])\n                } else {\n                    await dismissImmersiveSpace()"
      ],
      "co_occurrences": {
        "swiftui": 60,
        "view": 55,
        "text": 69,
        "on_appear": 10,
        "realitykit": 43,
        "reality_view": 37,
        "state": 140,
        "gesture": 51,
        "tap_gesture": 29,
        "on_change": 33,
        "transform_action": 1,
        "transform": 15,
        "scale": 1,
        "component_access": 52,
        "event_subscription": 84,
        "drag_gesture": 15,
        "observed_object": 6,
        "rotation": 12,
        "hierarchy_action": 74,
        "hierarchy_query": 12,
        "attach_orientation": 24,
        "model_entity": 8,
        "position": 8,
        "on_disappear": 8,
        "attach_position": 8
      },
      "projects": [
        "CreatingASpatialDrawingAppWithRealityKit",
        "HappyBeam",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "building-local-experiences-with-room-tracking",
        "BuildingLocalExperiencesWithRoomTracking",
        "HelloWorld",
        "happy-beam",
        "SceneReconstructionExample",
        "placing-content-on-detected-planes",
        "ExploringObjectTrackingWithARKit",
        "exploring-object-tracking-with-arkit",
        "ObjectPlacementExample",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "initialization": 2,
        "interaction": 4,
        "update": 2
      }
    },
    "model_entity": {
      "count": 55,
      "files": [
        "data/projects/CreatingAVolumetricWindowInVisionOS/Creating a Volumetric Window/Views/VolumetricWindow.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Views/HeadPositionView.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/EntityModel.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/AppState.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/AppState.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/Extensions.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/WorldAndRoomView.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/WorldOcclusionView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/Extensions/Entity+ObjectTracking.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/AppState.swift",
        "data/projects/playing-spatial-audio/SpatialAudio/Visualizer/AxisVisualizer.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/EntityModel.swift",
        "data/projects/CreatingStereoscopicImageInVisionOS/Stereo-Image/Creator/StereoImageCreator.swift",
        "data/projects/DisplayingA3DEnvironmentThroughAPortal/RealityKit-UIPortal/RealityKit-UIPortal/Views/UIPortalView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Utilities/ModelLoader.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/AppState.swift",
        "data/projects/HelloWorld/World/Systems/TraceSystem.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/CarView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenForeground.swift",
        "data/projects/ConstructAnImmersiveEnvironmentForVisionOS/Meadow/ContentView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Utilities/ModelLoader.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FoodPool.swift",
        "data/projects/hello-world/World/Systems/TraceSystem.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/Extensions/Entity+ObjectTracking.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Entities/Hand.swift",
        "data/projects/PlayingSpatialAudioInVisionOS/SpatialAudio/Visualizer/AxisVisualizer.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/AppState.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/CarView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Utilities/ModelLoader.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/Extensions.swift"
      ],
      "examples": [
        "        let traceMap = MaterialParameters.Texture(traceResource)\n        var material = UnlitMaterial(color: .white)\n        material.opacityThreshold = 0\n        material.blending = .transparent(opacity: .init(texture: traceMap))\n       \n        return ModelEntity(mesh: try .generate(from: contents),\n                           materials: [material])\n    }\n}",
        "            \n            /// The material for the floating sphere.\n            let material = SimpleMaterial(color: .cyan, isMetallic: false)\n            \n            /// The sphere mesh entity.\n            let floatingSphere = ModelEntity(\n                mesh: .generateSphere(radius: radius),\n                materials: [material]\n            )\n            \n            // Add the floating sphere to the root entity.",
        "\n        /// The z-axis scale to compress the box into an image placeholder.\n        let zScale: Float = 1E-3\n\n        // Generates the model entity in the shape of a box and applies the shader graph material.\n        let box = ModelEntity(\n            mesh: .generateBox(size: size),\n            materials: [material]\n        )\n\n        // Apply the z-axis scale to compress the box into a flat plane."
      ],
      "co_occurrences": {
        "realitykit": 56,
        "position": 63,
        "component_access": 24,
        "component_update": 2,
        "scene_update": 2,
        "hierarchy_action": 137,
        "swiftui": 19,
        "view": 13,
        "state_object": 1,
        "attach_position": 59,
        "reality_view": 10,
        "scale": 33,
        "transform": 43,
        "text": 19,
        "state": 10,
        "animation_controller": 1,
        "animation_action": 1,
        "gesture_action": 1,
        "transform_action": 2,
        "drag_gesture": 3,
        "gesture": 7,
        "tap_gesture": 2,
        "on_appear": 2,
        "on_disappear": 2,
        "task": 8,
        "on_change": 2
      },
      "projects": [
        "AllowingObjectsToInteractWithRealWorldObjects",
        "DisplayingA3DEnvironmentThroughAPortal",
        "creating-an-interactive-3d-model-in-visionos",
        "CreatingStereoscopicImageInVisionOS",
        "tracking-specific-points-in-world-space",
        "hello-world",
        "building-local-experiences-with-room-tracking",
        "BuildingLocalExperiencesWithRoomTracking",
        "SceneReconstructionExample",
        "PlayingSpatialAudioInVisionOS",
        "placing-content-on-detected-planes",
        "exploring-object-tracking-with-arkit",
        "CreatingA3DModelWithGesturesInVisionOS",
        "ExploringObjectTrackingWithARKit",
        "TrackingAndVisualizingHandMovement",
        "CreatingAVolumetricWindowInVisionOS",
        "ObjectPlacementExample",
        "DisplayingA3DObjectThatMovesToStayInAPersonsView",
        "CreatingASpatialDrawingAppWithRealityKit",
        "playing-spatial-audio",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ConstructAnImmersiveEnvironmentForVisionOS"
      ],
      "contexts": {
        "initialization": 2,
        "update": 4
      }
    },
    "component_update": {
      "count": 36,
      "files": [
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/LODSystem.swift",
        "data/projects/HelloWorld/World/Systems/RotationSystem.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/WanderSystem.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/EntityMoverComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FlockingSystem.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/BillboardSystem.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FearSystem.swift",
        "data/projects/BOTAnist/BOT-anist/Systems/JointPinSystem.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/FollowSystemAndComponent/FollowSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasPlacementView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponent.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/SolidBrushComponent.swift",
        "data/projects/diorama/Diorama/FlockingSystem.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Components/ClosureComponent.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/Compute/ComputeSystem.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MotionSystem.swift",
        "data/projects/hello-world/World/Systems/RotationSystem.swift",
        "data/projects/hello-world/Packages/WorldAssets/Sources/WorldAssets/SunPositionSystem.swift",
        "data/projects/bot-anist/BOT-anist/Systems/JointPinSystem.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Systems/TurnTableSystem.swift",
        "data/projects/HelloWorld/World/Systems/TraceSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundComponent.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroPlantComponent.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/StationaryRobotComponent.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/SparkleBrushComponent.swift",
        "data/projects/HelloWorld/Packages/WorldAssets/Sources/WorldAssets/SunPositionSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/AnchorEntityInputProvider.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Systems/ClosureComponent.swift",
        "data/projects/hello-world/World/Systems/TraceSystem.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/AnimationSpeedSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasVisualizationView.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Systems/DrawableQueueSystem.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/HungerSystem.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Systems/ClosureComponent.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/TrailAnimationSystem.swift"
      ],
      "examples": [
        "struct TraceSystem: System {\n    static let query = EntityQuery(where: .has(TraceComponent.self))\n\n    init(scene: Scene) { }\n\n    func update(context: SceneUpdateContext) {\n        for satellite in context.entities(matching: Self.query, updatingSystemWhen: .rendering) {\n            var trace: TraceComponent = satellite.components[TraceComponent.self]!\n            defer { satellite.components[TraceComponent.self] = trace }\n\n            guard let anchor = trace.anchor else { return }",
        "struct RotationSystem: System {\n    static let query = EntityQuery(where: .has(RotationComponent.self))\n\n    init(scene: RealityKit.Scene) {}\n\n    func update(context: SceneUpdateContext) {\n        for entity in context.entities(matching: Self.query, updatingSystemWhen: .rendering) {\n            guard let component: RotationComponent = entity.components[RotationComponent.self] else { continue }\n            entity.setOrientation(.init(angle: component.speed * Float(context.deltaTime), axis: component.axis), relativeTo: entity)\n        }\n    }",
        "public struct SunPositionSystem: System {\n    static let query = EntityQuery(where: .has(SunPositionComponent.self))\n    \n    public init(scene: RealityKit.Scene) {}\n    \n    public func update(context: SceneUpdateContext) {\n        for entity in context.entities(matching: Self.query, updatingSystemWhen: .rendering) {\n            guard let component = entity.sunPositionComponent else {\n                continue\n            }\n"
      ],
      "co_occurrences": {
        "realitykit": 39,
        "model_entity": 2,
        "position": 8,
        "component_access": 88,
        "scene_update": 36,
        "hierarchy_action": 10,
        "swiftui": 16,
        "event_subscription": 4,
        "rotation": 10,
        "component_system": 11,
        "entity_system": 11,
        "entity_subscription": 4,
        "hierarchy_query": 4,
        "attach_position": 3,
        "animation_controller": 7,
        "animation_action": 4,
        "transform_action": 5,
        "transform": 3,
        "text": 2,
        "attach_orientation": 2,
        "view": 2,
        "reality_view": 4,
        "state": 1,
        "gesture": 1
      },
      "projects": [
        "CreatingASpatialDrawingAppWithRealityKit",
        "GeneratingProceduralTexturesInVisionOS",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "bot-anist",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "BOTAnist",
        "TrackingAndVisualizingHandMovement",
        "diorama",
        "CreatingImmersiveSpacesInVisionOSWithSwiftUI",
        "GeneratingInteractiveGeometryWithRealityKit",
        "DisplayingA3DObjectThatMovesToStayInAPersonsView",
        "hello-world",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "initialization": 18,
        "update": 36
      }
    },
    "scene_update": {
      "count": 36,
      "files": [
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/LODSystem.swift",
        "data/projects/HelloWorld/World/Systems/RotationSystem.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/WanderSystem.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/EntityMoverComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FlockingSystem.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/BillboardSystem.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FearSystem.swift",
        "data/projects/BOTAnist/BOT-anist/Systems/JointPinSystem.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/FollowSystemAndComponent/FollowSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasPlacementView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponent.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/SolidBrushComponent.swift",
        "data/projects/diorama/Diorama/FlockingSystem.swift",
        "data/projects/CreatingA3DPaintingSpaceInVisionOS/Painting/Components/ClosureComponent.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/Compute/ComputeSystem.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MotionSystem.swift",
        "data/projects/hello-world/World/Systems/RotationSystem.swift",
        "data/projects/hello-world/Packages/WorldAssets/Sources/WorldAssets/SunPositionSystem.swift",
        "data/projects/bot-anist/BOT-anist/Systems/JointPinSystem.swift",
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Systems/TurnTableSystem.swift",
        "data/projects/HelloWorld/World/Systems/TraceSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundComponent.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroPlantComponent.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/StationaryRobotComponent.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/SparkleBrushComponent.swift",
        "data/projects/HelloWorld/Packages/WorldAssets/Sources/WorldAssets/SunPositionSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/AnchorEntityInputProvider.swift",
        "data/projects/TrackingAndVisualizingHandMovement/RealityKit-HandTracking/Systems/ClosureComponent.swift",
        "data/projects/hello-world/World/Systems/TraceSystem.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/AnimationSpeedSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasVisualizationView.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Systems/DrawableQueueSystem.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/HungerSystem.swift",
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Systems/ClosureComponent.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/TrailAnimationSystem.swift"
      ],
      "examples": [
        "struct TraceSystem: System {\n    static let query = EntityQuery(where: .has(TraceComponent.self))\n\n    init(scene: Scene) { }\n\n    func update(context: SceneUpdateContext) {\n        for satellite in context.entities(matching: Self.query, updatingSystemWhen: .rendering) {\n            var trace: TraceComponent = satellite.components[TraceComponent.self]!\n            defer { satellite.components[TraceComponent.self] = trace }\n\n            guard let anchor = trace.anchor else { return }",
        "struct RotationSystem: System {\n    static let query = EntityQuery(where: .has(RotationComponent.self))\n\n    init(scene: RealityKit.Scene) {}\n\n    func update(context: SceneUpdateContext) {\n        for entity in context.entities(matching: Self.query, updatingSystemWhen: .rendering) {\n            guard let component: RotationComponent = entity.components[RotationComponent.self] else { continue }\n            entity.setOrientation(.init(angle: component.speed * Float(context.deltaTime), axis: component.axis), relativeTo: entity)\n        }\n    }",
        "public struct SunPositionSystem: System {\n    static let query = EntityQuery(where: .has(SunPositionComponent.self))\n    \n    public init(scene: RealityKit.Scene) {}\n    \n    public func update(context: SceneUpdateContext) {\n        for entity in context.entities(matching: Self.query, updatingSystemWhen: .rendering) {\n            guard let component = entity.sunPositionComponent else {\n                continue\n            }\n"
      ],
      "co_occurrences": {
        "realitykit": 39,
        "model_entity": 2,
        "position": 8,
        "component_access": 88,
        "component_update": 36,
        "hierarchy_action": 10,
        "swiftui": 16,
        "event_subscription": 4,
        "rotation": 10,
        "component_system": 11,
        "entity_system": 11,
        "entity_subscription": 4,
        "hierarchy_query": 4,
        "attach_position": 3,
        "animation_controller": 7,
        "animation_action": 4,
        "transform_action": 5,
        "transform": 3,
        "text": 2,
        "attach_orientation": 2,
        "view": 2,
        "reality_view": 4,
        "state": 1,
        "gesture": 1
      },
      "projects": [
        "CreatingASpatialDrawingAppWithRealityKit",
        "GeneratingProceduralTexturesInVisionOS",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "bot-anist",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "BOTAnist",
        "TrackingAndVisualizingHandMovement",
        "diorama",
        "CreatingImmersiveSpacesInVisionOSWithSwiftUI",
        "GeneratingInteractiveGeometryWithRealityKit",
        "DisplayingA3DObjectThatMovesToStayInAPersonsView",
        "hello-world",
        "CreatingA3DPaintingSpaceInVisionOS"
      ],
      "contexts": {
        "initialization": 18,
        "update": 36
      }
    },
    "entity": {
      "count": 8,
      "files": [
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/hello-world/World/Entities/SatelliteEntity.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMesh/HeightMapMeshEntity.swift",
        "data/projects/hello-world/World/Entities/EarthEntity.swift",
        "data/projects/HelloWorld/World/Entities/EarthEntity.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlaceableObject.swift",
        "data/projects/HelloWorld/World/Entities/SatelliteEntity.swift"
      ],
      "examples": [
        "import RealityKit\nimport SwiftUI\nimport WorldAssets\n\n/// A satellite entity.\nclass SatelliteEntity: Entity {\n    \n    // MARK: - Sub-entities\n\n    private var satellite = Entity()\n    private let box = Entity()",
        "import RealityKit\nimport SwiftUI\nimport WorldAssets\n\n/// An entity that represents the Earth and all its moving parts.\nclass EarthEntity: Entity {\n\n    // MARK: - Sub-entities\n\n    /// The model that draws the Earth's surface features.\n    private var earth: Entity = Entity()",
        "    func attachPreviewEntity(to entity: Entity) {\n        entity.addChild(previewEntity)\n    }\n}\n\nclass PlacedObject: Entity {\n    let fileName: String\n    \n    // The 3D model displayed for this object.\n    private let renderContent: ModelEntity\n"
      ],
      "co_occurrences": {
        "swiftui": 4,
        "realitykit": 8,
        "position": 2,
        "scale": 7,
        "rotation": 6,
        "component_access": 14,
        "hierarchy_action": 23,
        "attach_orientation": 4,
        "attach_position": 2,
        "transform_action": 4
      },
      "projects": [
        "HelloWorld",
        "placing-content-on-detected-planes",
        "GeneratingInteractiveGeometryWithRealityKit",
        "ObjectPlacementExample",
        "tracking-specific-points-in-world-space",
        "hello-world"
      ],
      "contexts": {}
    },
    "attach_orientation": {
      "count": 31,
      "files": [
        "data/projects/HappyBeam/HappyBeam/GameModel.swift",
        "data/projects/BOTAnist/BOT-anist/Robot/RobotCharacter+Movement.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/HelloWorld/World/Entities/EarthEntity.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/diorama/Diorama/FlockingSystem.swift",
        "data/projects/hello-world/World/Entities/SatelliteEntity.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/happy-beam/HappyBeam/GameModel.swift",
        "data/projects/hello-world/World/Entities/EarthEntity.swift",
        "data/projects/bot-anist/BOT-anist/Robot/RobotCharacter+Movement.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Utilities/PersistenceManager.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Starfish.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/HelloWorld/World/Entities/SatelliteEntity.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift"
      ],
      "examples": [
        "        name = configuration.name\n        isEnabled = configuration.isVisible\n\n        // The entity that creates the satellite's orbit using a rotation component.\n        orbit.components.set(RotationComponent(speed: 0))\n        orbit.orientation = .init(angle: Float(configuration.initialRotation.radians), axis: [0, 1, 0])\n        self.addChild(orbit)\n\n        // A container for the satellite that can be scaled and\n        // positioned without interfering with the trace.\n        orbit.addChild(box)",
        "        // Indicate the position of the sun for use in turning the ground\n        // lights on and off.\n        earth.sunPositionComponent = SunPositionComponent(Float(configuration.sunAngle.radians))\n        \n        // Set a static rotation of the tilted Earth, driven from the configuration.\n        rotator.orientation = configuration.rotation\n\n        // Set the speed of the Earth's automatic rotation on it's axis.\n        if var rotation: RotationComponent = earth.components[RotationComponent.self] {\n            rotation.speed = configuration.currentSpeed\n            earth.components[RotationComponent.self] = rotation",
        "            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))\n            characterModel.playAnimation(rotateAnimation)\n            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))\n            let angle = self.idleViewpoint.orientation.angle.radians\n            let finalOrientation = simd_quatf(angle: Float(angle), axis: SIMD3<Float>(x: 0, y: 1, z: 0))\n            self.characterModel.orientation = finalOrientation\n            self.idleTimer = 0\n            self.isRotatingToFaceFront = false\n        }\n#endif\n    }"
      ],
      "co_occurrences": {
        "swiftui": 23,
        "realitykit": 32,
        "entity": 4,
        "position": 58,
        "scale": 24,
        "rotation": 31,
        "component_access": 30,
        "hierarchy_action": 182,
        "attach_position": 58,
        "transform_action": 5,
        "transition": 4,
        "animation_action": 9,
        "text": 1,
        "animation_controller": 5,
        "component_update": 2,
        "scene_update": 2,
        "hierarchy_query": 17,
        "transform": 34,
        "view": 8,
        "reality_view": 8,
        "state": 64,
        "observed_object": 8,
        "event_subscription": 32,
        "gesture": 8,
        "task": 24,
        "on_change": 8
      },
      "projects": [
        "HappyBeam",
        "HelloWorld",
        "bot-anist",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "happy-beam",
        "BOTAnist",
        "placing-content-on-detected-planes",
        "diorama",
        "ObjectPlacementExample",
        "tracking-specific-points-in-world-space",
        "hello-world"
      ],
      "contexts": {
        "initialization": 5
      }
    },
    "transform_action": {
      "count": 15,
      "files": [
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasPlacementView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasConfigurationView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasVisualizationView.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Components/GestureComponent.swift",
        "data/projects/hello-world/World/Entities/EarthEntity.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Octopus.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MotionSystem.swift",
        "data/projects/Creating2DShapesInVisionOSWithSwiftUI/Creating 2D Shapes/Triangle.swift",
        "data/projects/HelloWorld/World/Entities/EarthEntity.swift",
        "data/projects/Creating2DShapesInVisionOSWithSwiftUI/Creating 2D Shapes/Line.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenForeground.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/FollowSystemAndComponent/FollowSystem.swift"
      ],
      "examples": [
        "        // locate the sun along the positive x-axis. Animate this move for\n        // changes that the user makes when the globe appears in the volume.\n        var planeTransform = equatorialPlane.transform\n        planeTransform.rotation = tilt(date: configuration.date)\n        if animateUpdates {\n            equatorialPlane.move(to: planeTransform, relativeTo: self, duration: 0.25)\n        } else {\n            equatorialPlane.move(to: planeTransform, relativeTo: self)\n        }\n\n        // Scale and position the entire entity.",
        "        var planeTransform = equatorialPlane.transform\n        planeTransform.rotation = tilt(date: configuration.date)\n        if animateUpdates {\n            equatorialPlane.move(to: planeTransform, relativeTo: self, duration: 0.25)\n        } else {\n            equatorialPlane.move(to: planeTransform, relativeTo: self)\n        }\n\n        // Scale and position the entire entity.\n        move(\n            to: Transform(",
        "        // Iterate through each entity in the scene containing `FollowComponent`.\n        let entities = context.entities(matching: Self.query, updatingSystemWhen: .rendering)\n        \n        for entity in entities {\n            // Move the entity to the device's transform.\n            entity.move(to: deviceTransform, relativeTo: entity.parent, duration: 1.2, timingFunction: .easeInOut)\n        }\n    }\n}"
      ],
      "co_occurrences": {
        "swiftui": 14,
        "realitykit": 14,
        "entity": 4,
        "scale": 9,
        "rotation": 14,
        "component_access": 17,
        "hierarchy_action": 38,
        "attach_orientation": 5,
        "component_update": 5,
        "scene_update": 5,
        "transform": 4,
        "text": 4,
        "position": 1,
        "animation_controller": 1,
        "animation_action": 1,
        "attach_position": 1,
        "view": 5,
        "reality_view": 4,
        "state": 2,
        "task": 1,
        "gesture": 1,
        "model_entity": 2
      },
      "projects": [
        "CreatingASpatialDrawingAppWithRealityKit",
        "TransformingRealityKitEntitiesUsingGestures",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "HelloWorld",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "Creating2DShapesInVisionOSWithSwiftUI",
        "hello-world"
      ],
      "contexts": {
        "animation": 1
      }
    },
    "state_object": {
      "count": 3,
      "files": [
        "data/projects/DisplayingA3DObjectThatMovesToStayInAPersonsView/HeadTracking/Views/HeadPositionView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Settings.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/ContentView.swift"
      ],
      "examples": [
        "import RealityKit\n\n/// An immersive view that creates a small sphere that smoothly translates to always be in front of the device.\nstruct HeadPositionView: View {\n    /// The tracker that contains the logic to handle real-time transformations from the device.\n    @StateObject var headTracker = HeadPositionTracker()\n    \n    var body: some View {\n        RealityView(make: { content in\n            /// The entity representation of the world origin.\n            let root = Entity()",
        "    var settings: Settings\n}\n\nstruct SettingsView: View {\n\n    @StateObject var settings: Settings\n\n    var body: some View {\n\n        // View\n        UnderwaterView.DebugOptionsView(options: $settings.view)",
        "\nstruct ContentView: View {\n\n    @State private var gameState = GameState()\n    @State private var showDebugOptions: Bool = false\n    @StateObject var settings = Settings()\n\n    var body: some View {\n        // Scene + Debug (optional)\n        HStack {\n"
      ],
      "co_occurrences": {
        "swiftui": 3,
        "realitykit": 3,
        "view": 3,
        "model_entity": 1,
        "hierarchy_action": 1,
        "text": 2,
        "state": 2,
        "drag_gesture": 1,
        "gesture": 1
      },
      "projects": [
        "BuildingAnImmersiveExperienceWithRealityKit",
        "DisplayingA3DObjectThatMovesToStayInAPersonsView"
      ],
      "contexts": {}
    },
    "component_system": {
      "count": 11,
      "files": [
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/AnchorEntityInputProvider.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponent.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/SolidBrushComponent.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/EntityMoverComponent.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroPlantComponent.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/SparkleBrushComponent.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/Compute/ComputeSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundComponent.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/TrailAnimationSystem.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/StationaryRobotComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FearSystem.swift"
      ],
      "examples": [
        "}\n\n// The StationaryRobotSystemcoordination manages the initializing and\n// updating of the robot.\n@MainActor\npublic class StationaryRobotSystem: System {\n\n    // Define a query to return all entities with a MyComponent.\n    @MainActor\n    private static let query = EntityQuery(where: .has(StationaryRobotRuntimeComponent.self))\n",
        "}\n\n// Manage the coordination of initializing and updating\n// the `EntityMoverComponent`.\n@MainActor\npublic class EntityMoverSystem: System {\n\n    // Define a query to return all entities with\n    // an `EntityMoverRuntimeComponent`.\n    private static let runTimeComponentQuery\n        = EntityQuery(where: .has(EntityMoverRuntimeComponent.self))",
        "    }\n}\n\n// Manage the coordination of initializing and updating a hero plant.\n@MainActor\npublic class HeroPlantSystem: System {\n\n    // Define a query to return all entities with a HeroPlantComponent.\n    @MainActor\n    private static let query = EntityQuery(where: .has(HeroPlantRuntimeComponent.self))\n"
      ],
      "co_occurrences": {
        "realitykit": 12,
        "event_subscription": 4,
        "position": 3,
        "rotation": 4,
        "component_access": 33,
        "component_update": 11,
        "scene_update": 11,
        "entity_system": 11,
        "entity_subscription": 4,
        "hierarchy_query": 3,
        "attach_position": 2,
        "animation_controller": 6,
        "animation_action": 3,
        "hierarchy_action": 6,
        "swiftui": 1,
        "reality_view": 1
      },
      "projects": [
        "CreatingASpatialDrawingAppWithRealityKit",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "diorama",
        "GeneratingInteractiveGeometryWithRealityKit"
      ],
      "contexts": {
        "initialization": 1,
        "update": 2
      }
    },
    "entity_system": {
      "count": 11,
      "files": [
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Document/AnchorEntityInputProvider.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponent.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Solid/SolidBrushComponent.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/EntityMoverComponent.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroPlantComponent.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Brushes/Sparkle/SparkleBrushComponent.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/Compute/ComputeSystem.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Splash Screen/SplashScreenBackgroundComponent.swift",
        "data/projects/diorama/Packages/RealityKitContent/Sources/RealityKitContent/TrailAnimationSystem.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/StationaryRobotComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FearSystem.swift"
      ],
      "examples": [
        "}\n\n// The StationaryRobotSystemcoordination manages the initializing and\n// updating of the robot.\n@MainActor\npublic class StationaryRobotSystem: System {\n\n    // Define a query to return all entities with a MyComponent.\n    @MainActor\n    private static let query = EntityQuery(where: .has(StationaryRobotRuntimeComponent.self))\n",
        "}\n\n// Manage the coordination of initializing and updating\n// the `EntityMoverComponent`.\n@MainActor\npublic class EntityMoverSystem: System {\n\n    // Define a query to return all entities with\n    // an `EntityMoverRuntimeComponent`.\n    private static let runTimeComponentQuery\n        = EntityQuery(where: .has(EntityMoverRuntimeComponent.self))",
        "    }\n}\n\n// Manage the coordination of initializing and updating a hero plant.\n@MainActor\npublic class HeroPlantSystem: System {\n\n    // Define a query to return all entities with a HeroPlantComponent.\n    @MainActor\n    private static let query = EntityQuery(where: .has(HeroPlantRuntimeComponent.self))\n"
      ],
      "co_occurrences": {
        "realitykit": 12,
        "event_subscription": 4,
        "position": 3,
        "rotation": 4,
        "component_access": 33,
        "component_system": 11,
        "component_update": 11,
        "scene_update": 11,
        "entity_subscription": 4,
        "hierarchy_query": 3,
        "attach_position": 2,
        "animation_controller": 6,
        "animation_action": 3,
        "hierarchy_action": 6,
        "swiftui": 1,
        "reality_view": 1
      },
      "projects": [
        "CreatingASpatialDrawingAppWithRealityKit",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "diorama",
        "GeneratingInteractiveGeometryWithRealityKit"
      ],
      "contexts": {
        "initialization": 1,
        "update": 2
      }
    },
    "entity_subscription": {
      "count": 11,
      "files": [
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/UnderwaterView.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroRobotComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Character.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/EntityMoverComponent.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/HeroPlantComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Fish.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/PostProcessing.swift",
        "data/projects/ComposingInteractive3DContentWithRealityKitAndRealityComposerPro/RealityKitAnimation/Packages/RealityKitContent/Sources/RealityKitContent/StationaryRobotComponent.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/CharacterStates.swift"
      ],
      "examples": [
        "\n    private var subscription: Cancellable?\n\n    public required init(scene: Scene) {\n        subscription =\n            scene.subscribe(\n                to: ComponentEvents.DidAdd.self,\n                componentType: StationaryRobotComponent.self, { event in\n                    self.createRuntimeComponent(entity: event.entity)\n                }\n            )",
        "    public required init(scene: Scene) {\n\n        // Subscribe to all events in the scene that add an\n        // `EntityMoverComponent` and call `createRuntimeComponent`.\n        subscription =\n            scene.subscribe(\n                to: ComponentEvents.DidAdd.self,\n                componentType: EntityMoverComponent.self, { event in\n                    self.createRuntimeComponent(entity: event.entity)\n                }\n            )",
        "\n    private var subscription: Cancellable?\n\n    public required init(scene: Scene) {\n        subscription =\n            scene.subscribe(\n                to: ComponentEvents.DidAdd.self,\n                componentType: HeroPlantComponent.self, { event in\n                    self.createRuntimeComponent(entity: event.entity)\n                }\n            )"
      ],
      "co_occurrences": {
        "realitykit": 11,
        "event_subscription": 15,
        "position": 5,
        "rotation": 5,
        "component_access": 66,
        "component_system": 4,
        "component_update": 4,
        "scene_update": 4,
        "entity_system": 4,
        "hierarchy_query": 4,
        "attach_position": 4,
        "animation_controller": 9,
        "animation_action": 15,
        "swiftui": 3,
        "text": 2,
        "event_handling": 3,
        "transform": 3,
        "scale": 3,
        "hierarchy_action": 8
      },
      "projects": [
        "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro",
        "BuildingAnImmersiveExperienceWithRealityKit"
      ],
      "contexts": {
        "initialization": 4,
        "animation": 2
      }
    },
    "drag_gesture": {
      "count": 19,
      "files": [
        "data/projects/BOTAnist/BOT-anist/Views/RobotView.swift",
        "data/projects/building-an-immersive-media-viewing-experience/DestinationVideo/Player/PlayerView.swift",
        "data/projects/AllowingObjectsToInteractWithRealWorldObjects/Occlusion/Views/WorldOcclusionView.swift",
        "data/projects/bot-anist/BOT-anist/Extensions/RealityView+TouchControls.swift",
        "data/projects/enabling-video-reflections-in-an-immersive-environment/DestinationVideo/Player/PlayerView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/ContentView.swift",
        "data/projects/creating-an-interactive-3d-model-in-visionos/CarExample/Views/CarView.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/DestinationVideo/DestinationVideo/Player/PlayerView.swift",
        "data/projects/TransformingRealityKitEntitiesUsingGestures/Packages/RealityKitContent/Sources/RealityKitContent/Extensions/RealityViewExtensions.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/CreatingA3DModelWithGesturesInVisionOS/CarExample/Views/CarView.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/Views/ObjectPlacementRealityView.swift",
        "data/projects/bot-anist/BOT-anist/Views/RobotView.swift",
        "data/projects/BOTAnist/BOT-anist/Extensions/RealityView+TouchControls.swift",
        "data/projects/destination-video/DestinationVideo/Player/PlayerView.swift"
      ],
      "examples": [
        "        #if os(macOS)\n        // Adds the drag gesture to a transparent overlay and inserts\n        // the overlay between the video content and the playback controls.\n        let overlay = Color.clear\n            .contentShape(.rect)\n            .gesture(WindowDragGesture())\n            // Enable the window drag gesture to receive events that activate the window.\n            .allowsWindowActivationEvents(true)\n        return SystemPlayerView(showContextualActions: showContextualActions, overlay: overlay)\n        #else\n        return SystemPlayerView(showContextualActions: showContextualActions)",
        "\npublic extension View {\n    \n    func platformTouchControls(appState: AppState) -> some View {\n#if !os(visionOS)\n        return simultaneousGesture(DragGesture()\n            .onChanged { value in\n                let translation = value.translation\n                let movementVector = SIMD3<Float>(x: Float(translation.width), y: 0, z: Float(translation.height))\n                appState.robot?.movementVector = movementVector\n                ",
        "                appState.robot?.animationState.transition(to: .walkEnd)\n                appState.robot?.movementVector = .zero\n            }\n        )\n#else\n        return simultaneousGesture(DragGesture()\n            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.\n            .onChanged { @MainActor value in\n                guard let robot = appState.robot else { fatalError(\"No robot.\") }\n                let translation = value.translation3D\n                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))"
      ],
      "co_occurrences": {
        "swiftui": 19,
        "view": 16,
        "state": 21,
        "gesture": 17,
        "on_change": 5,
        "realitykit": 15,
        "transition": 20,
        "reality_view": 11,
        "text": 5,
        "simultaneous_gesture": 4,
        "state_object": 1,
        "model_entity": 3,
        "position": 3,
        "attach_position": 3,
        "event_subscription": 12,
        "tap_gesture": 3,
        "task": 15,
        "component_access": 9,
        "transform": 1,
        "scale": 3,
        "rotation": 2,
        "hierarchy_action": 4
      },
      "projects": [
        "TransformingRealityKitEntitiesUsingGestures",
        "AllowingObjectsToInteractWithRealWorldObjects",
        "CreatingA3DModelWithGesturesInVisionOS",
        "bot-anist",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "creating-an-interactive-3d-model-in-visionos",
        "DestinationVideo",
        "BOTAnist",
        "destination-video",
        "placing-content-on-detected-planes",
        "enabling-video-reflections-in-an-immersive-environment",
        "building-an-immersive-media-viewing-experience",
        "GeneratingInteractiveGeometryWithRealityKit",
        "ObjectPlacementExample",
        "tracking-specific-points-in-world-space"
      ],
      "contexts": {
        "interaction": 13
      }
    },
    "transform": {
      "count": 53,
      "files": [
        "data/projects/CreatingImmersiveSpacesInVisionOSWithSwiftUI/Creating Immersive Spaces/Extensions/Entity.swift",
        "data/projects/incorporating-real-world-surroundings-in-an-immersive-experience/SceneReconstructionExample/EntityModel.swift",
        "data/projects/BuildingLocalExperiencesWithRoomTracking/ARKitRoomTracking/AppState.swift",
        "data/projects/GeneratingInteractiveGeometryWithRealityKit/GeneratingInteractiveGeometry/GeneratingInteractiveGeometry/HeightMapMeshView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/UnderwaterView.swift",
        "data/projects/placing-content-on-detected-planes/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/exploring-object-tracking-with-arkit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MotionSystem.swift",
        "data/projects/PlacingEntitiesUsingHeadAndDeviceTransform/HeadTracking/ImmersiveView.swift",
        "data/projects/SceneReconstructionExample/SceneReconstructionExample/EntityModel.swift",
        "data/projects/happy-beam/HappyBeam/Views/HappyBeam.swift",
        "data/projects/GeneratingProceduralTexturesInVisionOS/RealityKit-Drawable/Views/EntityView.swift",
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/Canvas/DrawingCanvasConfigurationView.swift",
        "data/projects/ExploringObjectTrackingWithARKit/ObjectTracking/App/ObjectAnchorVisualization.swift",
        "data/projects/tracking-specific-points-in-world-space/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Character.swift",
        "data/projects/ObjectPlacementExample/ObjectPlacement/App/PlacementManager.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FoodPool.swift",
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/bot-anist/BOT-anist/AppState+Exploration.swift",
        "data/projects/BOTAnist/BOT-anist/AppState+Exploration.swift",
        "data/projects/building-local-experiences-with-room-tracking/ARKitRoomTracking/AppState.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/MeshAnchorTracker.swift",
        "data/projects/HappyBeam/HappyBeam/Views/HappyBeam.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift"
      ],
      "examples": [
        "        // Set the position of the root so that the hummingbird flies in from the center.\n        followRoot.setPosition([0, 1, -1], relativeTo: nil)\n        \n        // Rotate the hummingbird to face over the left shoulder, which faces the person due to the offset.\n        let orientation = simd_quatf(angle: .pi * -0.15, axis: [0, 1, 0]) * simd_quatf(angle: .pi * 0.2, axis: [1, 0, 0])\n        hummingbird.transform.rotation = orientation\n        \n        // Set the hummingbird as a subentity of its root, and move it to the top-right corner.\n        followRoot.addChild(hummingbird)\n        hummingbird.setPosition([0.4, 0.2, -1], relativeTo: followRoot)\n    }",
        "    }\n    \n    /// Sets up the head-position mode by enabling the feeder, creating a head anchor, and adding the hummingbird and feeder.\n    func startHeadPositionMode(content: RealityViewContent) {\n        // Reset the rotation so it aligns with the feeder.\n        hummingbird.transform.rotation = simd_quatf()\n        \n        // Create an anchor for the head and set the tracking mode to `.once`.\n        let headAnchor = AnchorEntity(.head)\n        headAnchor.anchoring.trackingMode = .once\n        headAnchor.name = \"headAnchor\"",
        "        robot?.head.removeFromParent()\n        robot?.body.removeFromParent()\n        robot?.backpack.removeFromParent()\n        \n        robot?.head.transform.translation = .zero\n        robot?.head.transform.rotation = simd_quatf()\n        robot?.body.transform.translation = .zero\n        robot?.body.transform.rotation = simd_quatf()\n        robot?.backpack.transform.translation = .zero\n        robot?.backpack.transform.rotation = simd_quatf()\n       "
      ],
      "co_occurrences": {
        "swiftui": 43,
        "realitykit": 55,
        "view": 11,
        "reality_view": 10,
        "scale": 41,
        "rotation": 56,
        "on_disappear": 2,
        "animation_controller": 5,
        "hierarchy_action": 341,
        "animation_action": 3,
        "transition": 6,
        "component_access": 58,
        "hierarchy_query": 14,
        "model_entity": 43,
        "event_subscription": 19,
        "event_handling": 3,
        "entity_subscription": 3,
        "gesture_action": 1,
        "transform_action": 4,
        "component_update": 3,
        "scene_update": 3,
        "text": 8,
        "state": 40,
        "task": 15,
        "position": 66,
        "attach_position": 66,
        "attach_orientation": 34,
        "observed_object": 4,
        "gesture": 5,
        "on_change": 5,
        "drag_gesture": 1
      },
      "projects": [
        "GeneratingProceduralTexturesInVisionOS",
        "happy-beam",
        "tracking-specific-points-in-world-space",
        "building-local-experiences-with-room-tracking",
        "BuildingLocalExperiencesWithRoomTracking",
        "SceneReconstructionExample",
        "BOTAnist",
        "placing-content-on-detected-planes",
        "exploring-object-tracking-with-arkit",
        "GeneratingInteractiveGeometryWithRealityKit",
        "HappyBeam",
        "PlacingEntitiesUsingHeadAndDeviceTransform",
        "bot-anist",
        "ExploringObjectTrackingWithARKit",
        "CreatingImmersiveSpacesInVisionOSWithSwiftUI",
        "ObjectPlacementExample",
        "CreatingASpatialDrawingAppWithRealityKit",
        "incorporating-real-world-surroundings-in-an-immersive-experience",
        "BuildingAnImmersiveExperienceWithRealityKit"
      ],
      "contexts": {
        "update": 8,
        "initialization": 5
      }
    },
    "event_handling": {
      "count": 5,
      "files": [
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/UnderwaterView.swift",
        "data/projects/BOTAnist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/PostProcessing.swift",
        "data/projects/bot-anist/BOT-anist/Views/ExplorationView.swift",
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/Character.swift"
      ],
      "examples": [
        "    @State private var currentViewpoint: Viewpoint3D = .standard\n    #endif\n    var body: some View {\n        ZStack {\n            RealityView { content in\n                let updateEvent = content.subscribe(to: SceneEvents.Update.self, { event in\n                    let deltaTime = Float(event.deltaTime)\n                    appState.robot?.handleMovement(deltaTime: deltaTime)\n                })\n                let animationStopEvent = content.subscribe(to: AnimationEvents.PlaybackTerminated.self, { event in\n                    guard let robot = appState.robot else { return }",
        "    }\n\n    init(arView: UnderwaterView) {\n        self.arView = arView\n\n        self.directionsCancellable = arView.scene.subscribe(to: SceneEvents.Update.self) { [weak self] event in\n            guard let self = self else { return }\n\n            self.directions = Directions(\n                topLeft: arView.ray(through: .init(x: 0, y: arView.bounds.height))!.direction,\n                topRight: arView.ray(through: .init(x: arView.bounds.width, y: arView.bounds.height))!.direction,",
        "    func set(debugThrottle: Bool) {\n        let minFPS = 10.0\n        let maxFPS = 120.0\n        guard debugThrottle else { self.debugThrottle = nil; return }\n        var debugThrottleTime = 0.0\n        self.debugThrottle = scene.subscribe(to: SceneEvents.Update.self) { event in\n            Thread.sleep(forTimeInterval: 1.0 / (minFPS + 0.5 * (1.0 + sin(debugThrottleTime)) * (maxFPS - minFPS)))\n            debugThrottleTime += event.deltaTime\n        }\n    }\n"
      ],
      "co_occurrences": {
        "swiftui": 5,
        "realitykit": 5,
        "view": 2,
        "reality_view": 2,
        "state": 4,
        "event_subscription": 9,
        "on_change": 2,
        "text": 2,
        "entity_subscription": 3,
        "transform": 3,
        "scale": 1,
        "hierarchy_action": 4,
        "rotation": 1,
        "animation_controller": 1,
        "component_access": 1
      },
      "projects": [
        "BOTAnist",
        "BuildingAnImmersiveExperienceWithRealityKit",
        "bot-anist"
      ],
      "contexts": {
        "update": 2,
        "initialization": 1
      }
    },
    "view_attach": {
      "count": 1,
      "files": [
        "data/projects/combining-2d-and-3d-views-in-an-immersive-app/MultiDimensionalImmersiveContent/RainbowView.swift"
      ],
      "examples": [
        "        \n        // Set the z position to be 0.1 meters back.\n        var zPosition: Float = -0.1\n        var position = SIMD3(x: 0, y: yPosition, z: zPosition)\n        \n        for entity in rainbowModel.attachments {\n\n            // Push the arch back by 0.1 meters.\n            zPosition -= 0.1\n            position.z = zPosition\n            "
      ],
      "co_occurrences": {
        "swiftui": 1,
        "realitykit": 2,
        "view": 1,
        "reality_view": 1,
        "state": 1,
        "position": 1,
        "scale": 1,
        "hierarchy_action": 3,
        "hierarchy_query": 4,
        "attach_position": 1
      },
      "projects": [
        "combining-2d-and-3d-views-in-an-immersive-app"
      ],
      "contexts": {}
    },
    "gesture_action": {
      "count": 1,
      "files": [
        "data/projects/BuildingAnImmersiveExperienceWithRealityKit/Underwater/FoodPool.swift"
      ],
      "examples": [
        "    init(arView: ARView, krillModel: Entity) {\n        self.arView = arView\n\n        let twoFingerTap = UITapGestureRecognizer(target: self, action: #selector(handleTap))\n        twoFingerTap.numberOfTouchesRequired = 2\n        arView.addGestureRecognizer(twoFingerTap)\n\n        scene.addAnchor(foodAnchor)\n\n        let sphereMesh = MeshResource.generateSphere(radius: foodSize)\n"
      ],
      "co_occurrences": {
        "realitykit": 1,
        "model_entity": 1,
        "transform": 1,
        "animation_controller": 1,
        "component_access": 5,
        "hierarchy_action": 2,
        "animation_action": 1
      },
      "projects": [
        "BuildingAnImmersiveExperienceWithRealityKit"
      ],
      "contexts": {}
    },
    "high_priority_gesture": {
      "count": 1,
      "files": [
        "data/projects/CreatingASpatialDrawingAppWithRealityKit/RealityKitDrawingApp/UI/Palette/Presets/PresetBrushView.swift"
      ],
      "examples": [
        "            .simultaneousGesture(\n                LongPressGesture()\n                    .targetedToAnyEntity()\n                    .onEnded { _ in isDeletePopoverPresented = true }\n            )\n            .highPriorityGesture(\n                TapGesture()\n                    .targetedToAnyEntity()\n                    .onEnded { _ in brushState.apply(preset: preset) }\n            )\n            .popover(isPresented: $isDeletePopoverPresented) {"
      ],
      "co_occurrences": {
        "swiftui": 1,
        "realitykit": 2,
        "view": 2,
        "reality_view": 1,
        "text": 3,
        "state": 2,
        "position": 1,
        "scale": 1,
        "tap_gesture": 1,
        "simultaneous_gesture": 1
      },
      "projects": [
        "CreatingASpatialDrawingAppWithRealityKit"
      ],
      "contexts": {}
    },
    "observed_object": {
      "count": 2,
      "files": [
        "data/projects/happy-beam/HappyBeam/HappyBeamSpace.swift",
        "data/projects/HappyBeam/HappyBeam/HappyBeamSpace.swift"
      ],
      "examples": [
        "import SwiftUI\nimport HappyBeamAssets\n\n/// The Full Space that displays when someone plays the game.\nstruct HappyBeamSpace: View {\n    @ObservedObject var gestureModel: HeartGestureModel\n    @Environment(GameModel.self) var gameModel\n    \n    @State private var emittingBeam = false\n    @State private var blasterPosition = Float(0)\n    @State private var lastGestureUpdateTime: TimeInterval = 0"
      ],
      "co_occurrences": {
        "swiftui": 2,
        "realitykit": 2,
        "view": 2,
        "reality_view": 2,
        "state": 16,
        "event_subscription": 8,
        "transform": 4,
        "rotation": 4,
        "gesture": 2,
        "task": 6,
        "on_change": 2,
        "component_access": 2,
        "hierarchy_action": 22,
        "hierarchy_query": 4,
        "attach_orientation": 8
      },
      "projects": [
        "happy-beam",
        "HappyBeam"
      ],
      "contexts": {
        "interaction": 2
      }
    }
  },
  "projects": {
    "SwiftSplash": {
      "pattern_count": 222,
      "unique_patterns": 26,
      "relationship_count": 127,
      "file_count": 36,
      "pattern_density": 6.166666666666667
    },
    "HelloWorld": {
      "pattern_count": 214,
      "unique_patterns": 27,
      "relationship_count": 86,
      "file_count": 42,
      "pattern_density": 5.095238095238095
    },
    "creating-3d-entities-with-realitykit": {
      "pattern_count": 6,
      "unique_patterns": 4,
      "relationship_count": 1,
      "file_count": 3,
      "pattern_density": 2.0
    },
    "CreatingGlassMaterialFor3DShapesInVisionOS": {
      "pattern_count": 15,
      "unique_patterns": 6,
      "relationship_count": 19,
      "file_count": 4,
      "pattern_density": 3.75
    },
    "DisplayingA3DObjectThatMovesToStayInAPersonsView": {
      "pattern_count": 17,
      "unique_patterns": 11,
      "relationship_count": 7,
      "file_count": 6,
      "pattern_density": 2.8333333333333335
    },
    "DisplayingTextInVisionOS": {
      "pattern_count": 10,
      "unique_patterns": 3,
      "relationship_count": 0,
      "file_count": 3,
      "pattern_density": 3.3333333333333335
    },
    "CreatingA3DPaintingSpaceInVisionOS": {
      "pattern_count": 34,
      "unique_patterns": 15,
      "relationship_count": 13,
      "file_count": 9,
      "pattern_density": 3.7777777777777777
    },
    "CreatingStereoscopicImageInVisionOS": {
      "pattern_count": 10,
      "unique_patterns": 6,
      "relationship_count": 1,
      "file_count": 4,
      "pattern_density": 2.5
    },
    "ComposingInteractive3DContentWithRealityKitAndRealityComposerPro": {
      "pattern_count": 128,
      "unique_patterns": 24,
      "relationship_count": 141,
      "file_count": 11,
      "pattern_density": 11.636363636363637
    },
    "PlayingSpatialAudioInVisionOS": {
      "pattern_count": 41,
      "unique_patterns": 12,
      "relationship_count": 71,
      "file_count": 4,
      "pattern_density": 10.25
    },
    "enabling-video-reflections-in-an-immersive-environment": {
      "pattern_count": 135,
      "unique_patterns": 16,
      "relationship_count": 41,
      "file_count": 46,
      "pattern_density": 2.9347826086956523
    },
    "PlacingEntitiesUsingHeadAndDeviceTransform": {
      "pattern_count": 38,
      "unique_patterns": 16,
      "relationship_count": 5,
      "file_count": 8,
      "pattern_density": 4.75
    },
    "BOTAnist": {
      "pattern_count": 171,
      "unique_patterns": 26,
      "relationship_count": 108,
      "file_count": 30,
      "pattern_density": 5.7
    },
    "CreatingAVolumetricWindowInVisionOS": {
      "pattern_count": 7,
      "unique_patterns": 6,
      "relationship_count": 3,
      "file_count": 2,
      "pattern_density": 3.5
    },
    "Creating2DShapesInVisionOSWithSwiftUI": {
      "pattern_count": 9,
      "unique_patterns": 3,
      "relationship_count": 0,
      "file_count": 5,
      "pattern_density": 1.8
    },
    "SceneReconstructionExample": {
      "pattern_count": 31,
      "unique_patterns": 13,
      "relationship_count": 17,
      "file_count": 5,
      "pattern_density": 6.2
    },
    "combining-2d-and-3d-views-in-an-immersive-app": {
      "pattern_count": 27,
      "unique_patterns": 11,
      "relationship_count": 8,
      "file_count": 11,
      "pattern_density": 2.4545454545454546
    },
    "CreatingANewSwiftUIWindowViewInVisionOS": {
      "pattern_count": 9,
      "unique_patterns": 4,
      "relationship_count": 1,
      "file_count": 4,
      "pattern_density": 2.25
    },
    "DestinationVideo": {
      "pattern_count": 135,
      "unique_patterns": 16,
      "relationship_count": 41,
      "file_count": 46,
      "pattern_density": 2.9347826086956523
    },
    "TrackingAndVisualizingHandMovement": {
      "pattern_count": 22,
      "unique_patterns": 12,
      "relationship_count": 9,
      "file_count": 7,
      "pattern_density": 3.142857142857143
    },
    "DisplayingA3DEnvironmentThroughAPortal": {
      "pattern_count": 17,
      "unique_patterns": 8,
      "relationship_count": 10,
      "file_count": 4,
      "pattern_density": 4.25
    },
    "hello-world": {
      "pattern_count": 214,
      "unique_patterns": 27,
      "relationship_count": 86,
      "file_count": 42,
      "pattern_density": 5.095238095238095
    },
    "BuildingAnImmersiveExperienceWithRealityKit": {
      "pattern_count": 200,
      "unique_patterns": 29,
      "relationship_count": 167,
      "file_count": 27,
      "pattern_density": 7.407407407407407
    },
    "PresentingAnArtistsScene": {
      "pattern_count": 17,
      "unique_patterns": 8,
      "relationship_count": 2,
      "file_count": 6,
      "pattern_density": 2.8333333333333335
    },
    "CreatingASpatialDrawingAppWithRealityKit": {
      "pattern_count": 199,
      "unique_patterns": 25,
      "relationship_count": 105,
      "file_count": 39,
      "pattern_density": 5.102564102564102
    },
    "swift-splash": {
      "pattern_count": 222,
      "unique_patterns": 26,
      "relationship_count": 127,
      "file_count": 36,
      "pattern_density": 6.166666666666667
    },
    "diorama": {
      "pattern_count": 99,
      "unique_patterns": 25,
      "relationship_count": 50,
      "file_count": 19,
      "pattern_density": 5.2105263157894735
    },
    "destination-video": {
      "pattern_count": 135,
      "unique_patterns": 16,
      "relationship_count": 41,
      "file_count": 46,
      "pattern_density": 2.9347826086956523
    },
    "exploring-object-tracking-with-arkit": {
      "pattern_count": 67,
      "unique_patterns": 14,
      "relationship_count": 90,
      "file_count": 9,
      "pattern_density": 7.444444444444445
    },
    "building-an-immersive-media-viewing-experience": {
      "pattern_count": 135,
      "unique_patterns": 16,
      "relationship_count": 41,
      "file_count": 46,
      "pattern_density": 2.9347826086956523
    },
    "AllowingObjectsToInteractWithRealWorldObjects": {
      "pattern_count": 20,
      "unique_patterns": 13,
      "relationship_count": 10,
      "file_count": 5,
      "pattern_density": 4.0
    },
    "ObjectPlacementExample": {
      "pattern_count": 113,
      "unique_patterns": 22,
      "relationship_count": 138,
      "file_count": 19,
      "pattern_density": 5.947368421052632
    },
    "playing-spatial-audio": {
      "pattern_count": 41,
      "unique_patterns": 12,
      "relationship_count": 71,
      "file_count": 4,
      "pattern_density": 10.25
    },
    "HappyBeam": {
      "pattern_count": 153,
      "unique_patterns": 24,
      "relationship_count": 86,
      "file_count": 19,
      "pattern_density": 8.052631578947368
    },
    "ExploringObjectTrackingWithARKit": {
      "pattern_count": 67,
      "unique_patterns": 14,
      "relationship_count": 90,
      "file_count": 9,
      "pattern_density": 7.444444444444445
    },
    "GeneratingInteractiveGeometryWithRealityKit": {
      "pattern_count": 36,
      "unique_patterns": 21,
      "relationship_count": 14,
      "file_count": 12,
      "pattern_density": 3.0
    },
    "building-local-experiences-with-room-tracking": {
      "pattern_count": 57,
      "unique_patterns": 18,
      "relationship_count": 55,
      "file_count": 5,
      "pattern_density": 11.4
    },
    "Combining2DAnd3DViewsInAnImmersiveApp": {
      "pattern_count": 36,
      "unique_patterns": 14,
      "relationship_count": 11,
      "file_count": 11,
      "pattern_density": 3.272727272727273
    },
    "BuildingLocalExperiencesWithRoomTracking": {
      "pattern_count": 57,
      "unique_patterns": 18,
      "relationship_count": 55,
      "file_count": 5,
      "pattern_density": 11.4
    },
    "CreatingA3DModelWithGesturesInVisionOS": {
      "pattern_count": 19,
      "unique_patterns": 13,
      "relationship_count": 16,
      "file_count": 4,
      "pattern_density": 4.75
    },
    "CreatingImmersiveSpacesInVisionOSWithSwiftUI": {
      "pattern_count": 25,
      "unique_patterns": 12,
      "relationship_count": 5,
      "file_count": 5,
      "pattern_density": 5.0
    },
    "GeneratingProceduralTexturesInVisionOS": {
      "pattern_count": 19,
      "unique_patterns": 9,
      "relationship_count": 7,
      "file_count": 6,
      "pattern_density": 3.1666666666666665
    },
    "creating-an-interactive-3d-model-in-visionos": {
      "pattern_count": 19,
      "unique_patterns": 13,
      "relationship_count": 16,
      "file_count": 4,
      "pattern_density": 4.75
    },
    "incorporating-real-world-surroundings-in-an-immersive-experience": {
      "pattern_count": 31,
      "unique_patterns": 13,
      "relationship_count": 17,
      "file_count": 5,
      "pattern_density": 6.2
    },
    "TransformingRealityKitEntitiesUsingGestures": {
      "pattern_count": 30,
      "unique_patterns": 11,
      "relationship_count": 5,
      "file_count": 8,
      "pattern_density": 3.75
    },
    "Creating3DEntitiesInVisionOSWithRealityKit": {
      "pattern_count": 6,
      "unique_patterns": 4,
      "relationship_count": 1,
      "file_count": 3,
      "pattern_density": 2.0
    },
    "bot-anist": {
      "pattern_count": 171,
      "unique_patterns": 26,
      "relationship_count": 108,
      "file_count": 30,
      "pattern_density": 5.7
    },
    "ConstructAnImmersiveEnvironmentForVisionOS": {
      "pattern_count": 19,
      "unique_patterns": 8,
      "relationship_count": 7,
      "file_count": 6,
      "pattern_density": 3.1666666666666665
    },
    "ApplyingMeshToRealWorldSurroundings": {
      "pattern_count": 14,
      "unique_patterns": 7,
      "relationship_count": 1,
      "file_count": 7,
      "pattern_density": 2.0
    },
    "placing-content-on-detected-planes": {
      "pattern_count": 113,
      "unique_patterns": 22,
      "relationship_count": 138,
      "file_count": 19,
      "pattern_density": 5.947368421052632
    },
    "happy-beam": {
      "pattern_count": 153,
      "unique_patterns": 24,
      "relationship_count": 86,
      "file_count": 19,
      "pattern_density": 8.052631578947368
    },
    "AddingADepthEffectToTextInVisionOS": {
      "pattern_count": 8,
      "unique_patterns": 5,
      "relationship_count": 2,
      "file_count": 3,
      "pattern_density": 2.6666666666666665
    },
    "tracking-specific-points-in-world-space": {
      "pattern_count": 113,
      "unique_patterns": 22,
      "relationship_count": 138,
      "file_count": 19,
      "pattern_density": 5.947368421052632
    },
    "adding-a-depth-effect-to-text-in-visionos": {
      "pattern_count": 8,
      "unique_patterns": 5,
      "relationship_count": 2,
      "file_count": 3,
      "pattern_density": 2.6666666666666665
    }
  },
  "summary": {
    "total_files": 790,
    "total_projects": 54,
    "total_patterns_found": 3914,
    "most_common_patterns": [
      {
        "pattern": "swiftui",
        "count": 513,
        "project_coverage": 54
      },
      {
        "pattern": "text",
        "count": 503,
        "project_coverage": 46
      },
      {
        "pattern": "realitykit",
        "count": 380,
        "project_coverage": 49
      },
      {
        "pattern": "view",
        "count": 374,
        "project_coverage": 54
      },
      {
        "pattern": "hierarchy_action",
        "count": 330,
        "project_coverage": 35
      },
      {
        "pattern": "state",
        "count": 272,
        "project_coverage": 44
      },
      {
        "pattern": "component_access",
        "count": 213,
        "project_coverage": 28
      },
      {
        "pattern": "position",
        "count": 118,
        "project_coverage": 28
      },
      {
        "pattern": "on_change",
        "count": 90,
        "project_coverage": 27
      },
      {
        "pattern": "attach_position",
        "count": 88,
        "project_coverage": 28
      }
    ],
    "most_common_relationships": [],
    "pattern_distribution": {
      "swiftui": {
        "count": 513,
        "project_coverage": 100.0
      },
      "realitykit": {
        "count": 380,
        "project_coverage": 90.74074074074075
      },
      "state": {
        "count": 272,
        "project_coverage": 81.48148148148148
      },
      "on_change": {
        "count": 90,
        "project_coverage": 50.0
      },
      "component_access": {
        "count": 213,
        "project_coverage": 51.85185185185185
      },
      "transition": {
        "count": 46,
        "project_coverage": 14.814814814814813
      },
      "animation_controller": {
        "count": 38,
        "project_coverage": 14.814814814814813
      },
      "hierarchy_action": {
        "count": 330,
        "project_coverage": 64.81481481481481
      },
      "animation_action": {
        "count": 46,
        "project_coverage": 18.51851851851852
      },
      "position": {
        "count": 118,
        "project_coverage": 51.85185185185185
      },
      "rotation": {
        "count": 66,
        "project_coverage": 35.18518518518518
      },
      "hierarchy_query": {
        "count": 75,
        "project_coverage": 20.37037037037037
      },
      "attach_position": {
        "count": 88,
        "project_coverage": 51.85185185185185
      },
      "scale": {
        "count": 71,
        "project_coverage": 44.44444444444444
      },
      "view": {
        "count": 374,
        "project_coverage": 100.0
      },
      "text": {
        "count": 503,
        "project_coverage": 85.18518518518519
      },
      "animation": {
        "count": 35,
        "project_coverage": 29.629629629629626
      },
      "on_appear": {
        "count": 63,
        "project_coverage": 46.2962962962963
      },
      "reality_view": {
        "count": 67,
        "project_coverage": 87.03703703703704
      },
      "event_subscription": {
        "count": 44,
        "project_coverage": 25.925925925925924
      },
      "tap_gesture": {
        "count": 13,
        "project_coverage": 22.22222222222222
      },
      "gesture": {
        "count": 32,
        "project_coverage": 48.148148148148145
      },
      "simultaneous_gesture": {
        "count": 16,
        "project_coverage": 16.666666666666664
      },
      "with_animation": {
        "count": 21,
        "project_coverage": 20.37037037037037
      },
      "on_disappear": {
        "count": 34,
        "project_coverage": 22.22222222222222
      },
      "on_tap_gesture": {
        "count": 7,
        "project_coverage": 12.962962962962962
      },
      "task": {
        "count": 60,
        "project_coverage": 27.77777777777778
      },
      "model_entity": {
        "count": 55,
        "project_coverage": 44.44444444444444
      },
      "component_update": {
        "count": 36,
        "project_coverage": 27.77777777777778
      },
      "scene_update": {
        "count": 36,
        "project_coverage": 27.77777777777778
      },
      "entity": {
        "count": 8,
        "project_coverage": 11.11111111111111
      },
      "attach_orientation": {
        "count": 31,
        "project_coverage": 20.37037037037037
      },
      "transform_action": {
        "count": 15,
        "project_coverage": 12.962962962962962
      },
      "state_object": {
        "count": 3,
        "project_coverage": 3.7037037037037033
      },
      "component_system": {
        "count": 11,
        "project_coverage": 9.25925925925926
      },
      "entity_system": {
        "count": 11,
        "project_coverage": 9.25925925925926
      },
      "entity_subscription": {
        "count": 11,
        "project_coverage": 3.7037037037037033
      },
      "drag_gesture": {
        "count": 19,
        "project_coverage": 27.77777777777778
      },
      "transform": {
        "count": 53,
        "project_coverage": 35.18518518518518
      },
      "event_handling": {
        "count": 5,
        "project_coverage": 5.555555555555555
      },
      "view_attach": {
        "count": 1,
        "project_coverage": 1.8518518518518516
      },
      "gesture_action": {
        "count": 1,
        "project_coverage": 1.8518518518518516
      },
      "high_priority_gesture": {
        "count": 1,
        "project_coverage": 1.8518518518518516
      },
      "observed_object": {
        "count": 2,
        "project_coverage": 3.7037037037037033
      }
    }
  }
}