2024-11-03 19:08:25,552 - INFO - Starting scraper...
2024-11-03 19:08:25,553 - INFO - Initializing scraper...
2024-11-03 19:08:25,890 - INFO - Scraping: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-03 19:08:28,309 - INFO - Found 31 new URLs
2024-11-03 19:08:28,310 - INFO - Scraping: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-03 19:08:30,015 - INFO - Found 26 new URLs
2024-11-03 19:08:30,015 - INFO - Scraping: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-03 19:08:31,489 - INFO - Found 24 new URLs
2024-11-03 19:08:31,489 - INFO - Cleaning up...
2024-11-03 19:08:31,517 - INFO - Scraper finished
2024-11-03 19:18:10,503 - INFO - Starting scraper...
2024-11-03 19:18:10,503 - INFO - Initializing scraper...
2024-11-03 19:18:11,113 - INFO - Scraping: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-03 19:19:13,481 - ERROR - Error scraping https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app (attempt 1/3): Timeout 60000ms exceeded.
2024-11-03 19:20:15,845 - ERROR - Error scraping https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app (attempt 2/3): Timeout 60000ms exceeded.
2024-11-03 19:21:19,339 - ERROR - Error scraping https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app (attempt 3/3): Timeout 60000ms exceeded.
2024-11-03 19:21:19,339 - INFO - Scraping: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-03 19:22:21,061 - ERROR - Error scraping https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app (attempt 1/3): Timeout 60000ms exceeded.
2024-11-03 19:23:52,949 - ERROR - Error scraping https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app (attempt 2/3): Timeout 60000ms exceeded.
2024-11-03 19:23:57,856 - INFO - Cleaning up...
2024-11-03 19:23:57,895 - ERROR - Error during cleanup: Protocol error (Target.disposeBrowserContext): Failed to find context with id 062E75EB370136F541CF99B92B5DA069
2024-11-03 19:23:57,905 - ERROR - Future exception was never retrieved
future: <Future finished exception=TargetClosedError('Target page, context or browser has been closed')>
playwright._impl._errors.TargetClosedError: Target page, context or browser has been closed
2024-11-04 12:49:51,380 - INFO - Processing documentation page: https://developer.apple.com/documentation/visionos/creating-3d-shapes-in-visionos-with-realitykit
2024-11-04 12:49:51,714 - ERROR - No project information found
2024-11-04 12:52:20,559 - INFO - Processing documentation page: https://developer.apple.com/documentation/visionos/creating-3d-shapes-in-visionos-with-realitykit
2024-11-04 12:52:20,807 - ERROR - No download button found
2024-11-04 12:52:20,808 - INFO - Saved debug HTML to data/docs/debug_creating-3d-shapes-in-visionos-with-realitykit.html
2024-11-04 12:52:20,808 - ERROR - No project information found
2024-11-04 12:54:48,314 - INFO - Processing documentation page: https://developer.apple.com/documentation/visionos/creating-3d-shapes-in-visionos-with-realitykit
2024-11-04 12:54:48,652 - ERROR - No download button found
2024-11-04 12:54:48,653 - INFO - Saved debug HTML to data/docs/debug_creating-3d-shapes-in-visionos-with-realitykit.html
2024-11-04 12:54:48,653 - ERROR - No project information found
2024-11-04 12:56:33,584 - INFO - Processing documentation page: https://developer.apple.com/documentation/visionos/creating-3d-shapes-in-visionos-with-realitykit
2024-11-04 12:56:33,872 - ERROR - No download button found
2024-11-04 12:56:33,873 - INFO - Saved debug HTML to data/docs/debug_creating-3d-shapes-in-visionos-with-realitykit.html
2024-11-04 12:56:33,877 - ERROR - No project information found
2024-11-04 12:57:48,178 - INFO - Processing documentation page: https://developer.apple.com/documentation/visionos/creating-3d-shapes-in-visionos-with-realitykit
2024-11-04 12:57:48,559 - INFO - Found buttons/links:
2024-11-04 12:57:48,560 - ERROR - No download button found
2024-11-04 12:57:48,560 - INFO - Saved debug HTML to data/docs/debug_creating-3d-shapes-in-visionos-with-realitykit.html
2024-11-04 12:57:48,561 - ERROR - No project information found
2024-11-04 12:58:43,297 - INFO - Processing documentation page: https://developer.apple.com/documentation/visionos/creating-3d-shapes-in-visionos-with-realitykit
2024-11-04 12:58:43,578 - INFO - Found links:
2024-11-04 12:58:43,578 - ERROR - No download button found
2024-11-04 12:58:43,579 - INFO - Saved debug HTML to data/docs/debug_creating-3d-shapes-in-visionos-with-realitykit.html
2024-11-04 12:58:43,579 - ERROR - No project information found
2024-11-04 12:59:30,118 - INFO - Processing documentation page: https://developer.apple.com/documentation/visionos/creating-3d-shapes-in-visionos-with-realitykit
2024-11-04 12:59:33,103 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 12:59:33,137 - INFO - Found project: Creating 3D entities with RealityKit
2024-11-04 12:59:33,137 - INFO - Description: 
2024-11-04 12:59:33,137 - INFO - Requirements: {'visionOS': '2.0+', 'Xcode': '15.0+'}
2024-11-04 12:59:33,137 - INFO - Downloading project...
2024-11-04 12:59:33,552 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 12:59:33,552 - INFO - Project downloaded to: data/projects/creating-3d-entities-with-realitykit
2024-11-04 13:10:19,715 - INFO - Processing documentation page: https://developer.apple.com/documentation/visionos/creating-3d-shapes-in-visionos-with-realitykit
2024-11-04 13:10:22,297 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 13:10:22,331 - INFO - Found project: Creating 3D entities with RealityKit
2024-11-04 13:10:22,331 - INFO - Description: 
2024-11-04 13:10:22,331 - INFO - Requirements: {'visionOS': '2.0+', 'Xcode': '15.0+'}
2024-11-04 13:10:22,331 - INFO - Downloading project...
2024-11-04 13:10:22,527 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 13:10:22,527 - INFO - Project downloaded to: data/projects/creating-3d-entities-with-realitykit
2024-11-04 13:10:22,527 - INFO - Analyzing project...
2024-11-04 13:10:22,528 - INFO - Found 3 Swift files
2024-11-04 13:10:22,529 - INFO - Found cylinder example in ShapesView+Entities.swift
2024-11-04 13:10:22,529 - INFO - 
Found 1 3d_content examples:
2024-11-04 13:10:22,529 - INFO - - In file: ShapesView+Entities.swift
2024-11-04 13:10:22,529 - INFO -   Preview: /*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
An extension of the app's main view that creates entities with geometries.
*/

import RealityKit

extension ShapesView {...
2024-11-04 13:10:22,529 - INFO - 
Found 0 animation examples:
2024-11-04 13:10:22,529 - INFO - 
Found 0 transforms examples:
2024-11-04 13:10:22,529 - INFO - 
Found 0 ui_components examples:
2024-11-04 13:13:02,336 - INFO - Processing documentation page: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-04 13:13:06,308 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 13:13:06,355 - INFO - Found project: BOT-anist
2024-11-04 13:13:06,355 - INFO - Description: 
2024-11-04 13:13:06,355 - INFO - Requirements: {'visionOS': '2.0+', 'Xcode': '15.0+'}
2024-11-04 13:13:06,355 - INFO - Downloading project...
2024-11-04 13:13:20,375 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 13:13:20,381 - INFO - Project downloaded to: data/projects/bot-anist
2024-11-04 13:13:20,381 - INFO - Analyzing project...
2024-11-04 13:13:20,386 - INFO - Found 30 Swift files
2024-11-04 13:13:20,387 - INFO - 
Analyzing AppState.swift:
2024-11-04 13:13:20,387 - INFO - Found transform usage
2024-11-04 13:13:20,387 - ERROR - Error analyzing project: 'ProjectAnalyzer' object has no attribute '_extract_code_block'
2024-11-04 13:17:01,427 - INFO - Processing documentation page: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-04 13:17:06,859 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 13:17:06,890 - INFO - Found project: BOT-anist
2024-11-04 13:17:06,891 - INFO - Description: 
2024-11-04 13:17:06,891 - INFO - Requirements: {'visionOS': '2.0+', 'Xcode': '15.0+'}
2024-11-04 13:17:06,891 - INFO - Downloading project...
2024-11-04 13:17:17,860 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 13:17:17,867 - INFO - Project downloaded to: data/projects/bot-anist
2024-11-04 13:17:17,867 - INFO - Analyzing project...
2024-11-04 13:17:17,872 - INFO - Found 30 Swift files
2024-11-04 13:17:17,872 - INFO - 
Analyzing AppState.swift:
2024-11-04 13:17:17,873 - INFO - Found 3 animation examples
2024-11-04 13:17:17,873 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 13:17:17,873 - INFO - Found 32 animation examples
2024-11-04 13:17:17,873 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 13:17:17,873 - INFO - Found 3 transform/rotation examples
2024-11-04 13:17:17,873 - INFO - Found 5 animation examples
2024-11-04 13:17:17,873 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 13:17:17,873 - INFO - 
Analyzing Package.swift:
2024-11-04 13:17:17,873 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 13:17:17,873 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 13:17:17,873 - INFO - Found 3 animation examples
2024-11-04 13:17:17,874 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 13:17:17,874 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 13:17:17,874 - INFO - Found 13 animation examples
2024-11-04 13:17:17,874 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 13:17:17,874 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 13:17:17,874 - INFO - Found 7 animation examples
2024-11-04 13:17:17,874 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 13:17:17,874 - INFO - Found 23 animation examples
2024-11-04 13:17:17,874 - INFO - 
Analyzing RobotData.swift:
2024-11-04 13:17:17,874 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 13:17:17,874 - INFO - Found 16 animation examples
2024-11-04 13:17:17,874 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 13:17:17,874 - INFO - Found 6 animation examples
2024-11-04 13:17:17,874 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 13:17:17,874 - INFO - Found 2 transform/rotation examples
2024-11-04 13:17:17,874 - INFO - Found 4 animation examples
2024-11-04 13:17:17,874 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 13:17:17,874 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 13:17:17,874 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 13:17:17,874 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 13:17:17,875 - INFO - Found 2 animation examples
2024-11-04 13:17:17,875 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 13:17:17,875 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 13:17:17,875 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 13:17:17,875 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 13:17:17,875 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 13:17:17,875 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 13:17:17,875 - INFO - 
Analyzing RobotView.swift:
2024-11-04 13:17:17,875 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 13:17:17,875 - INFO - Found 1 animation examples
2024-11-04 13:17:17,875 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 13:17:17,875 - INFO - Found 4 animation examples
2024-11-04 13:17:17,875 - INFO - 
Analyzing ContentView.swift:
2024-11-04 13:17:17,875 - INFO - 
Found 0 3d_content examples:
2024-11-04 13:17:17,875 - INFO - 
Found 13 animation examples:
2024-11-04 13:17:17,875 - INFO - 
File: AppState.swift
2024-11-04 13:17:17,875 - INFO - 
File: PlantAnimationProvider.swift
2024-11-04 13:17:17,875 - INFO - 
File: AppState+Exploration.swift
2024-11-04 13:17:17,875 - INFO - 
File: EntityExtensions.swift
2024-11-04 13:17:17,875 - INFO - 
File: RobotCharacter+Movement.swift
2024-11-04 13:17:17,875 - INFO - 
File: RobotProvider+Loading.swift
2024-11-04 13:17:17,875 - INFO - 
File: RobotCharacter.swift
2024-11-04 13:17:17,875 - INFO - 
File: AnimationStateMachine.swift
2024-11-04 13:17:17,875 - INFO - 
File: RealityView+TouchControls.swift
2024-11-04 13:17:17,875 - INFO - 
File: EntityExtensions.swift
2024-11-04 13:17:17,875 - INFO - 
File: RealityView+KeyboardControls.swift
2024-11-04 13:17:17,875 - INFO - 
File: RobotCustomizationView.swift
2024-11-04 13:17:17,875 - INFO - 
File: ExplorationView.swift
2024-11-04 13:17:17,876 - INFO - 
Found 2 transforms examples:
2024-11-04 13:17:17,876 - INFO - 
File: AppState+Exploration.swift
2024-11-04 13:17:17,876 - INFO - 
File: EntityExtensions.swift
2024-11-04 13:17:17,876 - INFO - 
Found 0 ui_components examples:
2024-11-04 13:18:54,400 - INFO - Processing documentation page: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-04 13:18:57,196 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 13:18:57,229 - INFO - Found project: BOT-anist
2024-11-04 13:18:57,229 - INFO - Description: 
2024-11-04 13:18:57,229 - INFO - Requirements: {'visionOS': '2.0+', 'Xcode': '15.0+'}
2024-11-04 13:18:57,229 - INFO - Downloading project...
2024-11-04 13:19:02,966 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 13:19:02,973 - INFO - Project downloaded to: data/projects/bot-anist
2024-11-04 13:19:02,973 - INFO - Analyzing project...
2024-11-04 13:19:02,978 - INFO - Found 30 Swift files
2024-11-04 13:19:02,978 - INFO - 
Analyzing AppState.swift:
2024-11-04 13:19:02,978 - INFO - Found 3 animation examples
2024-11-04 13:19:02,978 - INFO - Animation example:
_ = PlantAnimationProvider.shared
2024-11-04 13:19:02,979 - INFO - Context:
    /// The orientation of the robot model in the creation screen.
    var robotCreationOrientation: Rotation3D = Rotation3D()
    
    var isRotating = false
    
    /// The camera establishing the rendering perspective for the creation screen `RealityView` for platforms other than visionOS.
    let robotCamera = PerspectiveCamera()
    /// The camera establishing the rendering perspective for the exploration screen `RealityView` for platforms other than visionOS.
    var explorationCamera = PerspectiveCamera()
        
    var totalPlants: Int = 3
    
    init() {
        // Warm up the provider and load the assets
        let provider = RobotProvider.shared
        _ = PlantAnimationProvider.shared
       
        phase = .loadingAssets
        provider.listenForLoadComplete() { provider in
            self.phase = .playing
            self.robotData = RobotData()
            
            #if os(macOS) || os(iOS)
            self.creationRoot.scale = SIMD3<Float>(repeating: 0.027)
            self.creationRoot.position = SIMD3<Float>(x: -0, y: -0.022, z: -0.05)
            #else
            self.creationRoot.scale = SIMD3<Float>(repeating: 0.23)
            self.creationRoot.position = SIMD3<Float>(x: -0.02, y: -0.175, z: -0.05)
            #endif

            RobotPart.allCases.forEach { part in

2024-11-04 13:19:02,979 - INFO - Animation example:
if let celebrateAnim = PlantAnimationProvider.shared.celebrateAnimations[plantComponent.plantType] {
2024-11-04 13:19:02,979 - INFO - Context:
            }
            
            setMaterial(part: part, material: .plastic)
            robotData.lightColor[part] = .white
            robotData.materialColorIndex[part] = 0
            robotData.face = .circle
            updateRobotAppearance()
        }
    }
    
    /// Starts the celebration after the robot finishes propagating all the plants.
    public func startCelebration() {
        celebrating = true
        explorationEnvironment?.forEachDescendant(withComponent: PlantComponent.self) { plantEntity, plantComponent in
            plantEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { blendEntity, blendComponent in
                if let celebrateAnim = PlantAnimationProvider.shared.celebrateAnimations[plantComponent.plantType] {
                    blendEntity.playAnimation(celebrateAnim.repeat())
                }
            }
        }
    }
}


2024-11-04 13:19:02,979 - INFO - Animation example:
blendEntity.playAnimation(celebrateAnim.repeat())
2024-11-04 13:19:02,979 - INFO - Context:
            
            setMaterial(part: part, material: .plastic)
            robotData.lightColor[part] = .white
            robotData.materialColorIndex[part] = 0
            robotData.face = .circle
            updateRobotAppearance()
        }
    }
    
    /// Starts the celebration after the robot finishes propagating all the plants.
    public func startCelebration() {
        celebrating = true
        explorationEnvironment?.forEachDescendant(withComponent: PlantComponent.self) { plantEntity, plantComponent in
            plantEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { blendEntity, blendComponent in
                if let celebrateAnim = PlantAnimationProvider.shared.celebrateAnimations[plantComponent.plantType] {
                    blendEntity.playAnimation(celebrateAnim.repeat())
                }
            }
        }
    }
}


2024-11-04 13:19:02,979 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 13:19:02,979 - INFO - Found 26 animation examples
2024-11-04 13:19:02,979 - INFO - Animation example:
Loads and provides access to plant animations.
2024-11-04 13:19:02,979 - INFO - Context:
/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
Loads and provides access to plant animations.
*/

import Foundation
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()

2024-11-04 13:19:02,979 - INFO - Animation example:
class PlantAnimationProvider: Sendable {
2024-11-04 13:19:02,979 - INFO - Context:
/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
Loads and provides access to plant animations.
*/

import Foundation
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)

2024-11-04 13:19:02,979 - INFO - Animation example:
static var shared = PlantAnimationProvider()
2024-11-04 13:19:02,979 - INFO - Context:
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
Loads and provides access to plant animations.
*/

import Foundation
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)

2024-11-04 13:19:02,979 - INFO - Animation example:
public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
2024-11-04 13:19:02,979 - INFO - Context:
Loads and provides access to plant animations.
*/

import Foundation
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }

2024-11-04 13:19:02,979 - INFO - Animation example:
public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
2024-11-04 13:19:02,979 - INFO - Context:

import Foundation
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim

2024-11-04 13:19:02,979 - INFO - Animation example:
public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
2024-11-04 13:19:02,979 - INFO - Context:
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }

2024-11-04 13:19:02,979 - INFO - Animation example:
await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
2024-11-04 13:19:02,979 - INFO - Context:

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    

2024-11-04 13:19:02,979 - INFO - Animation example:
let growAnim = await self.generateGrowAnimationResource(for: plantType)
2024-11-04 13:19:02,979 - INFO - Context:
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"

2024-11-04 13:19:02,980 - INFO - Animation example:
let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
2024-11-04 13:19:02,980 - INFO - Context:
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil

2024-11-04 13:19:02,980 - INFO - Animation example:
return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
2024-11-04 13:19:02,980 - INFO - Context:
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {

2024-11-04 13:19:02,980 - INFO - Animation example:
growAnimations[result.plantType] = result.growAnim
2024-11-04 13:19:02,980 - INFO - Context:
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value

2024-11-04 13:19:02,980 - INFO - Animation example:
celebrateAnimations[result.plantType] = result.celebrateAnim
2024-11-04 13:19:02,980 - INFO - Context:
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }

2024-11-04 13:19:02,980 - INFO - Animation example:
private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
2024-11-04 13:19:02,980 - INFO - Context:
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }

2024-11-04 13:19:02,980 - INFO - Animation example:
let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
2024-11-04 13:19:02,980 - INFO - Context:
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    

2024-11-04 13:19:02,980 - INFO - Animation example:
var ret: AnimationResource? = nil
2024-11-04 13:19:02,980 - INFO - Context:
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.

2024-11-04 13:19:02,980 - INFO - Animation example:
if let index = entity.animationLibraryComponent?.animations.startIndex {
2024-11-04 13:19:02,980 - INFO - Context:
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {

2024-11-04 13:19:02,980 - INFO - Animation example:
ret = entity.animationLibraryComponent?.animations[index].value
2024-11-04 13:19:02,980 - INFO - Context:
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)

2024-11-04 13:19:02,980 - INFO - Animation example:
guard let ret else { fatalError("Animation resource unexpectedly nil.") }
2024-11-04 13:19:02,980 - INFO - Context:
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }

2024-11-04 13:19:02,980 - INFO - Animation example:
private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
2024-11-04 13:19:02,980 - INFO - Context:
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
}


2024-11-04 13:19:02,980 - INFO - Animation example:
let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
2024-11-04 13:19:02,980 - INFO - Context:
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
}

@MainActor

2024-11-04 13:19:02,980 - INFO - Animation example:
var ret: AnimationResource? = nil
2024-11-04 13:19:02,980 - INFO - Context:
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.

2024-11-04 13:19:02,980 - INFO - Animation example:
ret = entity.animationLibraryComponent?.defaultAnimation
2024-11-04 13:19:02,980 - INFO - Context:
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
}

@MainActor
public struct PlantAnimationResult: Sendable {
    var growAnim: AnimationResource
    var celebrateAnim: AnimationResource
    var plantType: PlantComponent.PlantTypeKey
}

2024-11-04 13:19:02,980 - INFO - Animation example:
guard let ret else { fatalError("Animation resource unexpectedly nil.") }
2024-11-04 13:19:02,980 - INFO - Context:
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }

2024-11-04 13:19:02,980 - INFO - Animation example:
public struct PlantAnimationResult: Sendable {
2024-11-04 13:19:02,981 - INFO - Context:
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
}

@MainActor
public struct PlantAnimationResult: Sendable {
    var growAnim: AnimationResource
    var celebrateAnim: AnimationResource
    var plantType: PlantComponent.PlantTypeKey
}


2024-11-04 13:19:02,981 - INFO - Animation example:
var growAnim: AnimationResource
2024-11-04 13:19:02,981 - INFO - Context:
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
}

@MainActor
public struct PlantAnimationResult: Sendable {
    var growAnim: AnimationResource
    var celebrateAnim: AnimationResource
    var plantType: PlantComponent.PlantTypeKey
}


2024-11-04 13:19:02,981 - INFO - Animation example:
var celebrateAnim: AnimationResource
2024-11-04 13:19:02,981 - INFO - Context:
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
}

@MainActor
public struct PlantAnimationResult: Sendable {
    var growAnim: AnimationResource
    var celebrateAnim: AnimationResource
    var plantType: PlantComponent.PlantTypeKey
}


2024-11-04 13:19:02,981 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 13:19:02,981 - INFO - Found 3 transform/rotation examples
2024-11-04 13:19:02,981 - INFO - Transform example:
robot?.head.transform.rotation = simd_quatf()
2024-11-04 13:19:02,981 - INFO - Context:
    
    /// Exits the exploration phase of the app and return to the creation view.
    public func exitExploration() {
        if let bodies = RobotProvider.shared.robotParts[.body] {
            for body in bodies {
                body.stopAllAnimations()
            }
        }

        robot?.animationState = .idle
        robot?.head.removeFromParent()
        robot?.body.removeFromParent()
        robot?.backpack.removeFromParent()
        
        robot?.head.transform.translation = .zero
        robot?.head.transform.rotation = simd_quatf()
        robot?.body.transform.translation = .zero
        robot?.body.transform.rotation = simd_quatf()
        robot?.backpack.transform.translation = .zero
        robot?.backpack.transform.rotation = simd_quatf()
       
        if let skeleton = robot?.body.findEntity(named: "rig_grp") {
            skeleton.jointPinComponent = nil
        }
        
        let children = explorationRoot.children
        for child in children {
            child.removeFromParent()
        }
        
        explorationEnvironment = nil

2024-11-04 13:19:02,981 - INFO - Transform example:
robot?.body.transform.rotation = simd_quatf()
2024-11-04 13:19:02,981 - INFO - Context:
    public func exitExploration() {
        if let bodies = RobotProvider.shared.robotParts[.body] {
            for body in bodies {
                body.stopAllAnimations()
            }
        }

        robot?.animationState = .idle
        robot?.head.removeFromParent()
        robot?.body.removeFromParent()
        robot?.backpack.removeFromParent()
        
        robot?.head.transform.translation = .zero
        robot?.head.transform.rotation = simd_quatf()
        robot?.body.transform.translation = .zero
        robot?.body.transform.rotation = simd_quatf()
        robot?.backpack.transform.translation = .zero
        robot?.backpack.transform.rotation = simd_quatf()
       
        if let skeleton = robot?.body.findEntity(named: "rig_grp") {
            skeleton.jointPinComponent = nil
        }
        
        let children = explorationRoot.children
        for child in children {
            child.removeFromParent()
        }
        
        explorationEnvironment = nil
    
        restoreRobotInCreator()

2024-11-04 13:19:02,981 - INFO - Transform example:
robot?.backpack.transform.rotation = simd_quatf()
2024-11-04 13:19:02,981 - INFO - Context:
            for body in bodies {
                body.stopAllAnimations()
            }
        }

        robot?.animationState = .idle
        robot?.head.removeFromParent()
        robot?.body.removeFromParent()
        robot?.backpack.removeFromParent()
        
        robot?.head.transform.translation = .zero
        robot?.head.transform.rotation = simd_quatf()
        robot?.body.transform.translation = .zero
        robot?.body.transform.rotation = simd_quatf()
        robot?.backpack.transform.translation = .zero
        robot?.backpack.transform.rotation = simd_quatf()
       
        if let skeleton = robot?.body.findEntity(named: "rig_grp") {
            skeleton.jointPinComponent = nil
        }
        
        let children = explorationRoot.children
        for child in children {
            child.removeFromParent()
        }
        
        explorationEnvironment = nil
    
        restoreRobotInCreator()
        phase = .playing
    }

2024-11-04 13:19:02,981 - INFO - Found 5 animation examples
2024-11-04 13:19:02,981 - INFO - Animation example:
Extensions to global app state with animation-related functions.
2024-11-04 13:19:02,981 - INFO - Context:
/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
Extensions to global app state with animation-related functions.
*/

import Foundation
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

extension AppState {
    
    /// Prepares the app to transition from the creation phase to the exploration phase.
    public func prepareForExploration() {
        do {
            
            // Load the environment entity and set the blendshape weight mapping for each entity with a BlendShapeWeightsComponent.

2024-11-04 13:19:02,981 - INFO - Animation example:
robot?.animationState.transition(to: .idle)
2024-11-04 13:19:02,981 - INFO - Context:
        let cameraTilt = -0.5
        let rotationAngle = Angle2D(radians: cameraTilt)
        let rotation = Rotation3D(angle: rotationAngle, axis: RotationAxis3D.x)
        let startOrientation = Rotation3D()
        let newOrientation = startOrientation.rotated(by: rotation)
        explorationCamera.setOrientation(.init(newOrientation), relativeTo: nil)
        
        explorationRoot.addChild(robot.characterParent)
        explorationRoot.addChild(explorationEnvironment)
        explorationRoot.scale = SIMD3<Float>(repeating: 0.7)
    }
    
    /// Resets the environment so that no plants have been collected and the robot is back in the intial position.
    public func resetExploration() {
        robot?.plantsFound = 0
        robot?.animationState.transition(to: .idle)
        celebrating = false
        explorationRoot.forEachDescendant(withComponent: PlantComponent.self) { entity, component in
            var plantComponent = component
            plantComponent.interactedWith = false
            entity.components.set(plantComponent)
            entity.stopAllAnimations(recursive: true)
        }
        explorationEnvironment!.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
            Task { @MainActor [entity] in
                entity.components[BlendShapeWeightsComponent.self]!.weightSet[0].weights = BlendShapeWeights([0, 1, 0, 0, 0, 0, 0])
            }
        }
        robot?.characterParent.teleportCharacter(to: [0, 0.065, 0], relativeTo: explorationEnvironment)
    }
    

2024-11-04 13:19:02,981 - INFO - Animation example:
entity.stopAllAnimations(recursive: true)
2024-11-04 13:19:02,981 - INFO - Context:
        
        explorationRoot.addChild(robot.characterParent)
        explorationRoot.addChild(explorationEnvironment)
        explorationRoot.scale = SIMD3<Float>(repeating: 0.7)
    }
    
    /// Resets the environment so that no plants have been collected and the robot is back in the intial position.
    public func resetExploration() {
        robot?.plantsFound = 0
        robot?.animationState.transition(to: .idle)
        celebrating = false
        explorationRoot.forEachDescendant(withComponent: PlantComponent.self) { entity, component in
            var plantComponent = component
            plantComponent.interactedWith = false
            entity.components.set(plantComponent)
            entity.stopAllAnimations(recursive: true)
        }
        explorationEnvironment!.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
            Task { @MainActor [entity] in
                entity.components[BlendShapeWeightsComponent.self]!.weightSet[0].weights = BlendShapeWeights([0, 1, 0, 0, 0, 0, 0])
            }
        }
        robot?.characterParent.teleportCharacter(to: [0, 0.065, 0], relativeTo: explorationEnvironment)
    }
    
    /// Exits the exploration phase of the app and return to the creation view.
    public func exitExploration() {
        if let bodies = RobotProvider.shared.robotParts[.body] {
            for body in bodies {
                body.stopAllAnimations()
            }

2024-11-04 13:19:02,981 - INFO - Animation example:
body.stopAllAnimations()
2024-11-04 13:19:02,981 - INFO - Context:
            entity.components.set(plantComponent)
            entity.stopAllAnimations(recursive: true)
        }
        explorationEnvironment!.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
            Task { @MainActor [entity] in
                entity.components[BlendShapeWeightsComponent.self]!.weightSet[0].weights = BlendShapeWeights([0, 1, 0, 0, 0, 0, 0])
            }
        }
        robot?.characterParent.teleportCharacter(to: [0, 0.065, 0], relativeTo: explorationEnvironment)
    }
    
    /// Exits the exploration phase of the app and return to the creation view.
    public func exitExploration() {
        if let bodies = RobotProvider.shared.robotParts[.body] {
            for body in bodies {
                body.stopAllAnimations()
            }
        }

        robot?.animationState = .idle
        robot?.head.removeFromParent()
        robot?.body.removeFromParent()
        robot?.backpack.removeFromParent()
        
        robot?.head.transform.translation = .zero
        robot?.head.transform.rotation = simd_quatf()
        robot?.body.transform.translation = .zero
        robot?.body.transform.rotation = simd_quatf()
        robot?.backpack.transform.translation = .zero
        robot?.backpack.transform.rotation = simd_quatf()
       

2024-11-04 13:19:02,981 - INFO - Animation example:
robot?.animationState = .idle
2024-11-04 13:19:02,981 - INFO - Context:
            Task { @MainActor [entity] in
                entity.components[BlendShapeWeightsComponent.self]!.weightSet[0].weights = BlendShapeWeights([0, 1, 0, 0, 0, 0, 0])
            }
        }
        robot?.characterParent.teleportCharacter(to: [0, 0.065, 0], relativeTo: explorationEnvironment)
    }
    
    /// Exits the exploration phase of the app and return to the creation view.
    public func exitExploration() {
        if let bodies = RobotProvider.shared.robotParts[.body] {
            for body in bodies {
                body.stopAllAnimations()
            }
        }

        robot?.animationState = .idle
        robot?.head.removeFromParent()
        robot?.body.removeFromParent()
        robot?.backpack.removeFromParent()
        
        robot?.head.transform.translation = .zero
        robot?.head.transform.rotation = simd_quatf()
        robot?.body.transform.translation = .zero
        robot?.body.transform.rotation = simd_quatf()
        robot?.backpack.transform.translation = .zero
        robot?.backpack.transform.rotation = simd_quatf()
       
        if let skeleton = robot?.body.findEntity(named: "rig_grp") {
            skeleton.jointPinComponent = nil
        }
        

2024-11-04 13:19:02,981 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 13:19:02,981 - INFO - 
Analyzing Package.swift:
2024-11-04 13:19:02,981 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 13:19:02,981 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 13:19:02,981 - INFO - Found 3 animation examples
2024-11-04 13:19:02,981 - INFO - Animation example:
var animationLibraryComponent: AnimationLibraryComponent? {
2024-11-04 13:19:02,982 - INFO - Context:
    /// Recursive search of children looking for any descendants with a specific component and calling a closure with them.
    func forEachDescendant<T: Component>(withComponent componentClass: T.Type, _ closure: (Entity, T) -> Void) {
        for child in children {
            if let component = child.components[componentClass] {
                closure(child, component)
            }
            child.forEachDescendant(withComponent: componentClass, closure)
        }
    }
    
    var modelComponent: ModelComponent? {
        get { components[ModelComponent.self] }
        set { components[ModelComponent.self] = newValue }
    }
    
    var animationLibraryComponent: AnimationLibraryComponent? {
        get { components[AnimationLibraryComponent.self] }
        set { components[AnimationLibraryComponent.self] = newValue }
    }
}


2024-11-04 13:19:02,982 - INFO - Animation example:
get { components[AnimationLibraryComponent.self] }
2024-11-04 13:19:02,982 - INFO - Context:
    func forEachDescendant<T: Component>(withComponent componentClass: T.Type, _ closure: (Entity, T) -> Void) {
        for child in children {
            if let component = child.components[componentClass] {
                closure(child, component)
            }
            child.forEachDescendant(withComponent: componentClass, closure)
        }
    }
    
    var modelComponent: ModelComponent? {
        get { components[ModelComponent.self] }
        set { components[ModelComponent.self] = newValue }
    }
    
    var animationLibraryComponent: AnimationLibraryComponent? {
        get { components[AnimationLibraryComponent.self] }
        set { components[AnimationLibraryComponent.self] = newValue }
    }
}


2024-11-04 13:19:02,982 - INFO - Animation example:
set { components[AnimationLibraryComponent.self] = newValue }
2024-11-04 13:19:02,982 - INFO - Context:
        for child in children {
            if let component = child.components[componentClass] {
                closure(child, component)
            }
            child.forEachDescendant(withComponent: componentClass, closure)
        }
    }
    
    var modelComponent: ModelComponent? {
        get { components[ModelComponent.self] }
        set { components[ModelComponent.self] = newValue }
    }
    
    var animationLibraryComponent: AnimationLibraryComponent? {
        get { components[AnimationLibraryComponent.self] }
        set { components[AnimationLibraryComponent.self] = newValue }
    }
}


2024-11-04 13:19:02,982 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 13:19:02,982 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 13:19:02,982 - INFO - Found 11 animation examples
2024-11-04 13:19:02,982 - INFO - Animation example:
guard ![.celebrate, .wave].contains(animationState) else { return }
2024-11-04 13:19:02,982 - INFO - Context:

Abstract:
A class extension containing movement-related functions.
*/

import BOTanistAssets
import Combine
import Foundation
import RealityKit
import Spatial
import SwiftUI

extension RobotCharacter {
    /// Handles the movement of the robot every time RealityKit updates the scene.
    func handleMovement(deltaTime: Float) {
        guard ![.celebrate, .wave].contains(animationState) else { return }
        if movementVector != .zero {
            handleNonZeroMovement(deltaTime: deltaTime)
        } else {
            handleZeroMovement(deltaTime: deltaTime)
        }
    }
    
    /// Handles the behavior of the robot if its movement vector is non-zero.
    private func handleNonZeroMovement(deltaTime: Float) {
        // If the player is moving the robot, reset the idle timer.
        idleTimer = 0
        
        // Normalizing the movement vector makes sure diagonal movement doesn't have a higher speed
        // than movement in the cardinal directions.
        let normalizedMovement = movementVector / max(100, length(movementVector))

2024-11-04 13:19:02,982 - INFO - Animation example:
if animationState == .walkEnd {
2024-11-04 13:19:02,982 - INFO - Context:
            handleNonZeroMovement(deltaTime: deltaTime)
        } else {
            handleZeroMovement(deltaTime: deltaTime)
        }
    }
    
    /// Handles the behavior of the robot if its movement vector is non-zero.
    private func handleNonZeroMovement(deltaTime: Float) {
        // If the player is moving the robot, reset the idle timer.
        idleTimer = 0
        
        // Normalizing the movement vector makes sure diagonal movement doesn't have a higher speed
        // than movement in the cardinal directions.
        let normalizedMovement = movementVector / max(100, length(movementVector))
        var speed = baseSpeed
        if animationState == .walkEnd {
            speed = 0.001
        }

        // Move the robot in the direction of the movement vector with scaling applied to account for volume size changes.
        // In the event of a collision, check if the collision object is a plant that hasn't been interacted with.
        // If it is a plant, trigger the plant's grow animation.
        characterParent.moveCharacter(by: normalizedMovement * speed * speedScale * deltaTime, deltaTime: deltaTime, relativeTo: nil) { collision in
            if var plantComponent = collision.hitEntity.plantComponent {
                if plantComponent.interactedWith == false {
                    plantComponent.interactedWith = true
                    collision.hitEntity.components.set(plantComponent)
                    self.plantsFound += 1
                    if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
                        collision.hitEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                            let playbackController = entity.playAnimation(growAnimation)

2024-11-04 13:19:02,982 - INFO - Animation example:
if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
2024-11-04 13:19:02,982 - INFO - Context:
        let normalizedMovement = movementVector / max(100, length(movementVector))
        var speed = baseSpeed
        if animationState == .walkEnd {
            speed = 0.001
        }

        // Move the robot in the direction of the movement vector with scaling applied to account for volume size changes.
        // In the event of a collision, check if the collision object is a plant that hasn't been interacted with.
        // If it is a plant, trigger the plant's grow animation.
        characterParent.moveCharacter(by: normalizedMovement * speed * speedScale * deltaTime, deltaTime: deltaTime, relativeTo: nil) { collision in
            if var plantComponent = collision.hitEntity.plantComponent {
                if plantComponent.interactedWith == false {
                    plantComponent.interactedWith = true
                    collision.hitEntity.components.set(plantComponent)
                    self.plantsFound += 1
                    if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
                        collision.hitEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                            let playbackController = entity.playAnimation(growAnimation)
                            PlantAnimationProvider.shared.currentGrowAnimations[plantComponent.plantType] = playbackController
                        }
                    }
                }
            }
            if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
                self.animationState.transition(to: .celebrate)
            }
        }
        // Make sure the robot's facing the direction of the movement.
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }

2024-11-04 13:19:02,982 - INFO - Animation example:
let playbackController = entity.playAnimation(growAnimation)
2024-11-04 13:19:02,982 - INFO - Context:
        if animationState == .walkEnd {
            speed = 0.001
        }

        // Move the robot in the direction of the movement vector with scaling applied to account for volume size changes.
        // In the event of a collision, check if the collision object is a plant that hasn't been interacted with.
        // If it is a plant, trigger the plant's grow animation.
        characterParent.moveCharacter(by: normalizedMovement * speed * speedScale * deltaTime, deltaTime: deltaTime, relativeTo: nil) { collision in
            if var plantComponent = collision.hitEntity.plantComponent {
                if plantComponent.interactedWith == false {
                    plantComponent.interactedWith = true
                    collision.hitEntity.components.set(plantComponent)
                    self.plantsFound += 1
                    if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
                        collision.hitEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                            let playbackController = entity.playAnimation(growAnimation)
                            PlantAnimationProvider.shared.currentGrowAnimations[plantComponent.plantType] = playbackController
                        }
                    }
                }
            }
            if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
                self.animationState.transition(to: .celebrate)
            }
        }
        // Make sure the robot's facing the direction of the movement.
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }
    
    /// Handles the behavior of the robot if its movement vector is zero.

2024-11-04 13:19:02,982 - INFO - Animation example:
PlantAnimationProvider.shared.currentGrowAnimations[plantComponent.plantType] = playbackController
2024-11-04 13:19:02,982 - INFO - Context:
            speed = 0.001
        }

        // Move the robot in the direction of the movement vector with scaling applied to account for volume size changes.
        // In the event of a collision, check if the collision object is a plant that hasn't been interacted with.
        // If it is a plant, trigger the plant's grow animation.
        characterParent.moveCharacter(by: normalizedMovement * speed * speedScale * deltaTime, deltaTime: deltaTime, relativeTo: nil) { collision in
            if var plantComponent = collision.hitEntity.plantComponent {
                if plantComponent.interactedWith == false {
                    plantComponent.interactedWith = true
                    collision.hitEntity.components.set(plantComponent)
                    self.plantsFound += 1
                    if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
                        collision.hitEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                            let playbackController = entity.playAnimation(growAnimation)
                            PlantAnimationProvider.shared.currentGrowAnimations[plantComponent.plantType] = playbackController
                        }
                    }
                }
            }
            if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
                self.animationState.transition(to: .celebrate)
            }
        }
        // Make sure the robot's facing the direction of the movement.
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }
    
    /// Handles the behavior of the robot if its movement vector is zero.
    private func handleZeroMovement (deltaTime: Float) {

2024-11-04 13:19:02,982 - INFO - Animation example:
if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
2024-11-04 13:19:02,982 - INFO - Context:
        // If it is a plant, trigger the plant's grow animation.
        characterParent.moveCharacter(by: normalizedMovement * speed * speedScale * deltaTime, deltaTime: deltaTime, relativeTo: nil) { collision in
            if var plantComponent = collision.hitEntity.plantComponent {
                if plantComponent.interactedWith == false {
                    plantComponent.interactedWith = true
                    collision.hitEntity.components.set(plantComponent)
                    self.plantsFound += 1
                    if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
                        collision.hitEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                            let playbackController = entity.playAnimation(growAnimation)
                            PlantAnimationProvider.shared.currentGrowAnimations[plantComponent.plantType] = playbackController
                        }
                    }
                }
            }
            if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
                self.animationState.transition(to: .celebrate)
            }
        }
        // Make sure the robot's facing the direction of the movement.
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }
    
    /// Handles the behavior of the robot if its movement vector is zero.
    private func handleZeroMovement (deltaTime: Float) {
        idleTimer += deltaTime
        guard idleTimer > idleTimeout && animationState == .idle && !isRotatingToFaceFront else { return }
        
        guard hasChangedOrientationSinceLastWave else {
            return

2024-11-04 13:19:02,982 - INFO - Animation example:
self.animationState.transition(to: .celebrate)
2024-11-04 13:19:02,982 - INFO - Context:
        characterParent.moveCharacter(by: normalizedMovement * speed * speedScale * deltaTime, deltaTime: deltaTime, relativeTo: nil) { collision in
            if var plantComponent = collision.hitEntity.plantComponent {
                if plantComponent.interactedWith == false {
                    plantComponent.interactedWith = true
                    collision.hitEntity.components.set(plantComponent)
                    self.plantsFound += 1
                    if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
                        collision.hitEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                            let playbackController = entity.playAnimation(growAnimation)
                            PlantAnimationProvider.shared.currentGrowAnimations[plantComponent.plantType] = playbackController
                        }
                    }
                }
            }
            if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
                self.animationState.transition(to: .celebrate)
            }
        }
        // Make sure the robot's facing the direction of the movement.
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }
    
    /// Handles the behavior of the robot if its movement vector is zero.
    private func handleZeroMovement (deltaTime: Float) {
        idleTimer += deltaTime
        guard idleTimer > idleTimeout && animationState == .idle && !isRotatingToFaceFront else { return }
        
        guard hasChangedOrientationSinceLastWave else {
            return
        }

2024-11-04 13:19:02,982 - INFO - Animation example:
guard idleTimer > idleTimeout && animationState == .idle && !isRotatingToFaceFront else { return }
2024-11-04 13:19:02,982 - INFO - Context:
                    }
                }
            }
            if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
                self.animationState.transition(to: .celebrate)
            }
        }
        // Make sure the robot's facing the direction of the movement.
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }
    
    /// Handles the behavior of the robot if its movement vector is zero.
    private func handleZeroMovement (deltaTime: Float) {
        idleTimer += deltaTime
        guard idleTimer > idleTimeout && animationState == .idle && !isRotatingToFaceFront else { return }
        
        guard hasChangedOrientationSinceLastWave else {
            return
        }

#if os(visionOS)
        // Generate a rotation animation for the model parent to face the given viewpoint.
        guard let rotateAnimation = characterModel.getRotationAnimation(toFace: self.idleViewpoint,
                                                                        duration: rotationDuration) else { fatalError() }
        hasChangedOrientationSinceLastWave = false
        isRotatingToFaceFront = true
        self.animationState.transition(to: .wave)
        
        Task { @MainActor in
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))

2024-11-04 13:19:02,982 - INFO - Animation example:
guard let rotateAnimation = characterModel.getRotationAnimation(toFace: self.idleViewpoint,
2024-11-04 13:19:02,982 - INFO - Context:
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }
    
    /// Handles the behavior of the robot if its movement vector is zero.
    private func handleZeroMovement (deltaTime: Float) {
        idleTimer += deltaTime
        guard idleTimer > idleTimeout && animationState == .idle && !isRotatingToFaceFront else { return }
        
        guard hasChangedOrientationSinceLastWave else {
            return
        }

#if os(visionOS)
        // Generate a rotation animation for the model parent to face the given viewpoint.
        guard let rotateAnimation = characterModel.getRotationAnimation(toFace: self.idleViewpoint,
                                                                        duration: rotationDuration) else { fatalError() }
        hasChangedOrientationSinceLastWave = false
        isRotatingToFaceFront = true
        self.animationState.transition(to: .wave)
        
        Task { @MainActor in
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))
            characterModel.playAnimation(rotateAnimation)
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))
            let angle = self.idleViewpoint.orientation.angle.radians
            let finalOrientation = simd_quatf(angle: Float(angle), axis: SIMD3<Float>(x: 0, y: 1, z: 0))
            self.characterModel.orientation = finalOrientation
            self.idleTimer = 0
            self.isRotatingToFaceFront = false
        }

2024-11-04 13:19:02,982 - INFO - Animation example:
self.animationState.transition(to: .wave)
2024-11-04 13:19:02,982 - INFO - Context:
    /// Handles the behavior of the robot if its movement vector is zero.
    private func handleZeroMovement (deltaTime: Float) {
        idleTimer += deltaTime
        guard idleTimer > idleTimeout && animationState == .idle && !isRotatingToFaceFront else { return }
        
        guard hasChangedOrientationSinceLastWave else {
            return
        }

#if os(visionOS)
        // Generate a rotation animation for the model parent to face the given viewpoint.
        guard let rotateAnimation = characterModel.getRotationAnimation(toFace: self.idleViewpoint,
                                                                        duration: rotationDuration) else { fatalError() }
        hasChangedOrientationSinceLastWave = false
        isRotatingToFaceFront = true
        self.animationState.transition(to: .wave)
        
        Task { @MainActor in
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))
            characterModel.playAnimation(rotateAnimation)
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))
            let angle = self.idleViewpoint.orientation.angle.radians
            let finalOrientation = simd_quatf(angle: Float(angle), axis: SIMD3<Float>(x: 0, y: 1, z: 0))
            self.characterModel.orientation = finalOrientation
            self.idleTimer = 0
            self.isRotatingToFaceFront = false
        }
#endif
    }
}


2024-11-04 13:19:02,983 - INFO - Animation example:
characterModel.playAnimation(rotateAnimation)
2024-11-04 13:19:02,983 - INFO - Context:
        
        guard hasChangedOrientationSinceLastWave else {
            return
        }

#if os(visionOS)
        // Generate a rotation animation for the model parent to face the given viewpoint.
        guard let rotateAnimation = characterModel.getRotationAnimation(toFace: self.idleViewpoint,
                                                                        duration: rotationDuration) else { fatalError() }
        hasChangedOrientationSinceLastWave = false
        isRotatingToFaceFront = true
        self.animationState.transition(to: .wave)
        
        Task { @MainActor in
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))
            characterModel.playAnimation(rotateAnimation)
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))
            let angle = self.idleViewpoint.orientation.angle.radians
            let finalOrientation = simd_quatf(angle: Float(angle), axis: SIMD3<Float>(x: 0, y: 1, z: 0))
            self.characterModel.orientation = finalOrientation
            self.idleTimer = 0
            self.isRotatingToFaceFront = false
        }
#endif
    }
}


2024-11-04 13:19:02,983 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 13:19:02,983 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 13:19:02,983 - INFO - Found 7 animation examples
2024-11-04 13:19:02,983 - INFO - Animation example:
var libComponent = AnimationLibraryComponent()
2024-11-04 13:19:02,983 - INFO - Context:
            fatalError("\tEncountered fatal error: \(error.localizedDescription)")
        }
        return materials
    }
    
    /// Loads each robot part asynchronously as a task that this method adds to a provided task group.
    func loadRobotParts(taskGroup: inout TaskGroup<RobotPartLoadResult>) async {
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {

2024-11-04 13:19:02,987 - INFO - Animation example:
let animationDirectory = "Assets/Robot/animations/\(partName)/"
2024-11-04 13:19:02,987 - INFO - Context:
        }
        return materials
    }
    
    /// Loads each robot part asynchronously as a task that this method adds to a provided task group.
    func loadRobotParts(taskGroup: inout TaskGroup<RobotPartLoadResult>) async {
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {
                            fatalError("Error loading robot part \(partName) from scene \(sceneName)")

2024-11-04 13:19:02,987 - INFO - Animation example:
for animationType in AnimationState.allCases {
2024-11-04 13:19:02,987 - INFO - Context:
        return materials
    }
    
    /// Loads each robot part asynchronously as a task that this method adds to a provided task group.
    func loadRobotParts(taskGroup: inout TaskGroup<RobotPartLoadResult>) async {
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {
                            fatalError("Error loading robot part \(partName) from scene \(sceneName)")
                        }

2024-11-04 13:19:02,987 - INFO - Animation example:
if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
2024-11-04 13:19:02,987 - INFO - Context:
    }
    
    /// Loads each robot part asynchronously as a task that this method adds to a provided task group.
    func loadRobotParts(taskGroup: inout TaskGroup<RobotPartLoadResult>) async {
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {
                            fatalError("Error loading robot part \(partName) from scene \(sceneName)")
                        }
                    } catch {

2024-11-04 13:19:02,987 - INFO - Animation example:
if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
2024-11-04 13:19:02,987 - INFO - Context:
    /// Loads each robot part asynchronously as a task that this method adds to a provided task group.
    func loadRobotParts(taskGroup: inout TaskGroup<RobotPartLoadResult>) async {
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {
                            fatalError("Error loading robot part \(partName) from scene \(sceneName)")
                        }
                    } catch {
                        fatalError("Error loading scene \(sceneName) for part \(part.rawValue)")
                    }

2024-11-04 13:19:02,987 - INFO - Animation example:
if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
2024-11-04 13:19:02,987 - INFO - Context:
    func loadRobotParts(taskGroup: inout TaskGroup<RobotPartLoadResult>) async {
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {
                            fatalError("Error loading robot part \(partName) from scene \(sceneName)")
                        }
                    } catch {
                        fatalError("Error loading scene \(sceneName) for part \(part.rawValue)")
                    }
                }

2024-11-04 13:19:02,987 - INFO - Animation example:
libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
2024-11-04 13:19:02,987 - INFO - Context:
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {
                            fatalError("Error loading robot part \(partName) from scene \(sceneName)")
                        }
                    } catch {
                        fatalError("Error loading scene \(sceneName) for part \(part.rawValue)")
                    }
                }
            }

2024-11-04 13:19:02,987 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 13:19:02,988 - INFO - Found 21 animation examples
2024-11-04 13:19:02,988 - INFO - Animation example:
var animationState: AnimationState = .idle
2024-11-04 13:19:02,988 - INFO - Context:
    
    /// The vector that represents the direction of the robot's movement.
    var movementVector: SIMD3<Float> = .zero
    /// A multiplier you use to calculate the movement speed for the robot.
    var baseSpeed: Float = 0.165
    /// A multiplier you use to calculate the movement speed for the robot.
    ///
    /// When a person resizes the volume, this value updates to keep the robot's speed consistent.
    var speedScale: Float = 1
    /// The number of plants the robot has planted.
    var plantsFound: Int = 0
    var collisionCapsuleRadius: Float = 0.2
    var collisionCapsuleHeight: Float = 2
    
    /// The robot's current animation state.
    var animationState: AnimationState = .idle
    var subscriptions = [any Cancellable]()
    var appState: AppState
    
    #if os(visionOS)
    /// The direction the robot turns to face front after the idle timer expires.
    var idleViewpoint: SquareAzimuth = .front
    #endif
    
    /// The amount of idle time before the robot turns to face the direction in the idle Viewpoint.
    let idleTimeout: Float = 2.0
    /// The amount of time the robot has been idle.
    var idleTimer: Float = 0.0
    
    /// A Boolean value that indicates whether the robot is rotating.
    var isRotatingToFaceFront = false

2024-11-04 13:19:03,042 - INFO - Animation example:
var animationControllers = [AnimationState: AnimationPlaybackController]()
2024-11-04 13:19:03,042 - INFO - Context:
    /// The amount of idle time before the robot turns to face the direction in the idle Viewpoint.
    let idleTimeout: Float = 2.0
    /// The amount of time the robot has been idle.
    var idleTimer: Float = 0.0
    
    /// A Boolean value that indicates whether the robot is rotating.
    var isRotatingToFaceFront = false
    /// A Boolean value that indicates whether the person using the app has changed the orientation they're viewing the volume from.
    var hasChangedOrientationSinceLastWave = false
    
    /// The scale factor of the 3D models that comprise the robot.
    private var modelScale: Float = 0.065

    let rotationDuration = 0.5
    
    var animationControllers = [AnimationState: AnimationPlaybackController]()
    
    init(head: Entity, body: Entity, backpack: Entity, appState: AppState, headOffset: SIMD3<Float>? = nil, backpackOffset: SIMD3<Float>? = nil) {
        self.head = head
        self.body = body
        self.backpack = backpack
        self.appState = appState
        
        self.body.removeFromParent()
        self.head.removeFromParent()
        self.backpack.removeFromParent()
        
        guard let skeleton = body.findEntity(named: "rig_grp") as? ModelEntity else {
            fatalError("Didn't find expected rig_grp entity as descendent of rigged body.")
        }
        

2024-11-04 13:19:03,043 - INFO - Animation example:
animationState.registerHandler { @MainActor state in
2024-11-04 13:19:03,043 - INFO - Context:
                                                            backpackOffset: Transform(translation: backpackOffset).matrix,
                                                            bodyEntity: self.body)
        
        characterParent.components.set(CharacterControllerComponent(radius: collisionCapsuleRadius,
                                                                    height: collisionCapsuleHeight,
                                                                    slopeLimit: 0,
                                                                    stepLimit: 0))
        characterParent.setPosition([0, collisionCapsuleHeight / 2 * modelScale, 0], relativeTo: nil)
        characterModel.addChild(self.head)
        characterModel.addChild(self.body)
        characterModel.addChild(self.backpack)
        characterParent.addChild(characterModel)
        characterModel.setPosition([0, -collisionCapsuleHeight / 2, 0], relativeTo: characterParent)
        
        characterParent.scale = SIMD3<Float>(repeating: modelScale)
        animationState.registerHandler { @MainActor state in
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)

2024-11-04 13:19:03,043 - INFO - Animation example:
self.playAnimation(state)
2024-11-04 13:19:03,043 - INFO - Context:
                                                            bodyEntity: self.body)
        
        characterParent.components.set(CharacterControllerComponent(radius: collisionCapsuleRadius,
                                                                    height: collisionCapsuleHeight,
                                                                    slopeLimit: 0,
                                                                    stepLimit: 0))
        characterParent.setPosition([0, collisionCapsuleHeight / 2 * modelScale, 0], relativeTo: nil)
        characterModel.addChild(self.head)
        characterModel.addChild(self.body)
        characterModel.addChild(self.backpack)
        characterParent.addChild(characterModel)
        characterModel.setPosition([0, -collisionCapsuleHeight / 2, 0], relativeTo: characterParent)
        
        characterParent.scale = SIMD3<Float>(repeating: modelScale)
        animationState.registerHandler { @MainActor state in
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback

2024-11-04 13:19:03,043 - INFO - Animation example:
func playAnimation(_ animState: AnimationState) {
2024-11-04 13:19:03,043 - INFO - Context:
                                                                    stepLimit: 0))
        characterParent.setPosition([0, collisionCapsuleHeight / 2 * modelScale, 0], relativeTo: nil)
        characterModel.addChild(self.head)
        characterModel.addChild(self.body)
        characterModel.addChild(self.backpack)
        characterParent.addChild(characterModel)
        characterModel.setPosition([0, -collisionCapsuleHeight / 2, 0], relativeTo: characterParent)
        
        characterParent.scale = SIMD3<Float>(repeating: modelScale)
        animationState.registerHandler { @MainActor state in
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                

2024-11-04 13:19:03,043 - INFO - Animation example:
guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
2024-11-04 13:19:03,043 - INFO - Context:
        characterParent.setPosition([0, collisionCapsuleHeight / 2 * modelScale, 0], relativeTo: nil)
        characterModel.addChild(self.head)
        characterModel.addChild(self.body)
        characterModel.addChild(self.backpack)
        characterParent.addChild(characterModel)
        characterModel.setPosition([0, -collisionCapsuleHeight / 2, 0], relativeTo: characterParent)
        
        characterParent.scale = SIMD3<Float>(repeating: modelScale)
        animationState.registerHandler { @MainActor state in
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)

2024-11-04 13:19:03,043 - INFO - Animation example:
fatalError("Didn't find requested animation in library.")
2024-11-04 13:19:03,043 - INFO - Context:
        characterModel.addChild(self.head)
        characterModel.addChild(self.body)
        characterModel.addChild(self.backpack)
        characterParent.addChild(characterModel)
        characterModel.setPosition([0, -collisionCapsuleHeight / 2, 0], relativeTo: characterParent)
        
        characterParent.scale = SIMD3<Float>(repeating: modelScale)
        animationState.registerHandler { @MainActor state in
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in

2024-11-04 13:19:03,043 - INFO - Animation example:
let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
2024-11-04 13:19:03,043 - INFO - Context:
        animationState.registerHandler { @MainActor state in
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0

2024-11-04 13:19:03,043 - INFO - Animation example:
animationControllers[animState] = playback
2024-11-04 13:19:03,043 - INFO - Context:
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }

2024-11-04 13:19:03,043 - INFO - Animation example:
let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
2024-11-04 13:19:03,043 - INFO - Context:
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {

2024-11-04 13:19:03,044 - INFO - Animation example:
animationControllers[animState] = playback
2024-11-04 13:19:03,044 - INFO - Context:
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }

2024-11-04 13:19:03,044 - INFO - Animation example:
let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
2024-11-04 13:19:03,044 - INFO - Context:
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }

2024-11-04 13:19:03,044 - INFO - Animation example:
let nextState = self.animationState.nextState
2024-11-04 13:19:03,044 - INFO - Context:
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    

2024-11-04 13:19:03,044 - INFO - Animation example:
if self.animationState != self.animationState.nextState {
2024-11-04 13:19:03,044 - INFO - Context:
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {

2024-11-04 13:19:03,044 - INFO - Animation example:
self.animationState.transition(to: nextState)
2024-11-04 13:19:03,044 - INFO - Context:
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {

2024-11-04 13:19:03,044 - INFO - Animation example:
if self.animationState != .idle {
2024-11-04 13:19:03,044 - INFO - Context:
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {
            let controller = animationControllers[animState]
            controller?.stop()

2024-11-04 13:19:03,044 - INFO - Animation example:
func stopAllAnimations() {
2024-11-04 13:19:03,044 - INFO - Context:
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {
            let controller = animationControllers[animState]
            controller?.stop()
            animationControllers[animState] = nil
        }
        body.stopAllAnimations(recursive: true)
    }
    
    private func getJointHierarchy(_ skeleton: ModelEntity, for jointName: String) -> [Int] {
        guard let jointIndex = skeleton.getJointIndex(suffix: jointName) else { fatalError("Unable to retrieve joint named \(jointName).") }
        let jointNames = skeleton.jointNames
        let jointPath = jointNames[jointIndex]
        var components = jointPath.components(separatedBy: "/")
        var indices: [Int] = []
        while !components.isEmpty {

2024-11-04 13:19:03,044 - INFO - Animation example:
for animState in AnimationState.allCases {
2024-11-04 13:19:03,044 - INFO - Context:
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {
            let controller = animationControllers[animState]
            controller?.stop()
            animationControllers[animState] = nil
        }
        body.stopAllAnimations(recursive: true)
    }
    
    private func getJointHierarchy(_ skeleton: ModelEntity, for jointName: String) -> [Int] {
        guard let jointIndex = skeleton.getJointIndex(suffix: jointName) else { fatalError("Unable to retrieve joint named \(jointName).") }
        let jointNames = skeleton.jointNames
        let jointPath = jointNames[jointIndex]
        var components = jointPath.components(separatedBy: "/")
        var indices: [Int] = []
        while !components.isEmpty {
            let path = components.joined(separator: "/")

2024-11-04 13:19:03,044 - INFO - Animation example:
let controller = animationControllers[animState]
2024-11-04 13:19:03,044 - INFO - Context:
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {
            let controller = animationControllers[animState]
            controller?.stop()
            animationControllers[animState] = nil
        }
        body.stopAllAnimations(recursive: true)
    }
    
    private func getJointHierarchy(_ skeleton: ModelEntity, for jointName: String) -> [Int] {
        guard let jointIndex = skeleton.getJointIndex(suffix: jointName) else { fatalError("Unable to retrieve joint named \(jointName).") }
        let jointNames = skeleton.jointNames
        let jointPath = jointNames[jointIndex]
        var components = jointPath.components(separatedBy: "/")
        var indices: [Int] = []
        while !components.isEmpty {
            let path = components.joined(separator: "/")
            indices.append(jointNames.firstIndex(of: path)!)

2024-11-04 13:19:03,044 - INFO - Animation example:
animationControllers[animState] = nil
2024-11-04 13:19:03,044 - INFO - Context:
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {
            let controller = animationControllers[animState]
            controller?.stop()
            animationControllers[animState] = nil
        }
        body.stopAllAnimations(recursive: true)
    }
    
    private func getJointHierarchy(_ skeleton: ModelEntity, for jointName: String) -> [Int] {
        guard let jointIndex = skeleton.getJointIndex(suffix: jointName) else { fatalError("Unable to retrieve joint named \(jointName).") }
        let jointNames = skeleton.jointNames
        let jointPath = jointNames[jointIndex]
        var components = jointPath.components(separatedBy: "/")
        var indices: [Int] = []
        while !components.isEmpty {
            let path = components.joined(separator: "/")
            indices.append(jointNames.firstIndex(of: path)!)
            components.removeLast()
        }

2024-11-04 13:19:03,044 - INFO - Animation example:
body.stopAllAnimations(recursive: true)
2024-11-04 13:19:03,044 - INFO - Context:
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {
            let controller = animationControllers[animState]
            controller?.stop()
            animationControllers[animState] = nil
        }
        body.stopAllAnimations(recursive: true)
    }
    
    private func getJointHierarchy(_ skeleton: ModelEntity, for jointName: String) -> [Int] {
        guard let jointIndex = skeleton.getJointIndex(suffix: jointName) else { fatalError("Unable to retrieve joint named \(jointName).") }
        let jointNames = skeleton.jointNames
        let jointPath = jointNames[jointIndex]
        var components = jointPath.components(separatedBy: "/")
        var indices: [Int] = []
        while !components.isEmpty {
            let path = components.joined(separator: "/")
            indices.append(jointNames.firstIndex(of: path)!)
            components.removeLast()
        }
        
        var boneList = [String]()

2024-11-04 13:19:03,044 - INFO - 
Analyzing RobotData.swift:
2024-11-04 13:19:03,045 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 13:19:03,045 - INFO - Found 14 animation examples
2024-11-04 13:19:03,045 - INFO - Animation example:
A state machine that tracks the robot's animations.
2024-11-04 13:19:03,045 - INFO - Context:
/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
A state machine that tracks the robot's animations.
*/

import Foundation
import RealityKit

typealias AnimationStateMachineHandler = (AnimationState) -> Void

/// An enumeration that represents a state machine that tracks the current animation state of the robot.
public enum AnimationState: String, Codable, Sendable, Equatable, CaseIterable {
    case idle
    case walkLoop
    case walkEnd
    case plant
    case celebrate
    case wave

2024-11-04 13:19:03,045 - INFO - Animation example:
typealias AnimationStateMachineHandler = (AnimationState) -> Void
2024-11-04 13:19:03,045 - INFO - Context:
/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
A state machine that tracks the robot's animations.
*/

import Foundation
import RealityKit

typealias AnimationStateMachineHandler = (AnimationState) -> Void

/// An enumeration that represents a state machine that tracks the current animation state of the robot.
public enum AnimationState: String, Codable, Sendable, Equatable, CaseIterable {
    case idle
    case walkLoop
    case walkEnd
    case plant
    case celebrate
    case wave
    
    public enum AnimationLoopingBehavior {
        case infinite
        case finite (times: Int)
    }
    

2024-11-04 13:19:03,045 - INFO - Animation example:
public enum AnimationState: String, Codable, Sendable, Equatable, CaseIterable {
2024-11-04 13:19:03,045 - INFO - Context:
/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
A state machine that tracks the robot's animations.
*/

import Foundation
import RealityKit

typealias AnimationStateMachineHandler = (AnimationState) -> Void

/// An enumeration that represents a state machine that tracks the current animation state of the robot.
public enum AnimationState: String, Codable, Sendable, Equatable, CaseIterable {
    case idle
    case walkLoop
    case walkEnd
    case plant
    case celebrate
    case wave
    
    public enum AnimationLoopingBehavior {
        case infinite
        case finite (times: Int)
    }
    
    @MainActor static var handlers = [AnimationStateMachineHandler]()
    
    /// Returns an array containing all valid state transitions from the current state.

2024-11-04 13:19:03,045 - INFO - Animation example:
public enum AnimationLoopingBehavior {
2024-11-04 13:19:03,045 - INFO - Context:

import Foundation
import RealityKit

typealias AnimationStateMachineHandler = (AnimationState) -> Void

/// An enumeration that represents a state machine that tracks the current animation state of the robot.
public enum AnimationState: String, Codable, Sendable, Equatable, CaseIterable {
    case idle
    case walkLoop
    case walkEnd
    case plant
    case celebrate
    case wave
    
    public enum AnimationLoopingBehavior {
        case infinite
        case finite (times: Int)
    }
    
    @MainActor static var handlers = [AnimationStateMachineHandler]()
    
    /// Returns an array containing all valid state transitions from the current state.
    var validNextStates: [AnimationState] {
        switch self {
            case .idle:
                return [.walkLoop, .plant, .celebrate, .wave]
            case .walkLoop:
                return [.walkEnd, .celebrate]
            case .walkEnd, .plant:
                return [.idle, .celebrate, .wave, .walkLoop]

2024-11-04 13:19:03,045 - INFO - Animation example:
@MainActor static var handlers = [AnimationStateMachineHandler]()
2024-11-04 13:19:03,045 - INFO - Context:

/// An enumeration that represents a state machine that tracks the current animation state of the robot.
public enum AnimationState: String, Codable, Sendable, Equatable, CaseIterable {
    case idle
    case walkLoop
    case walkEnd
    case plant
    case celebrate
    case wave
    
    public enum AnimationLoopingBehavior {
        case infinite
        case finite (times: Int)
    }
    
    @MainActor static var handlers = [AnimationStateMachineHandler]()
    
    /// Returns an array containing all valid state transitions from the current state.
    var validNextStates: [AnimationState] {
        switch self {
            case .idle:
                return [.walkLoop, .plant, .celebrate, .wave]
            case .walkLoop:
                return [.walkEnd, .celebrate]
            case .walkEnd, .plant:
                return [.idle, .celebrate, .wave, .walkLoop]
            case .celebrate, .wave:
                return [.idle]
        }
    }
    

2024-11-04 13:19:03,045 - INFO - Animation example:
var validNextStates: [AnimationState] {
2024-11-04 13:19:03,045 - INFO - Context:
    case idle
    case walkLoop
    case walkEnd
    case plant
    case celebrate
    case wave
    
    public enum AnimationLoopingBehavior {
        case infinite
        case finite (times: Int)
    }
    
    @MainActor static var handlers = [AnimationStateMachineHandler]()
    
    /// Returns an array containing all valid state transitions from the current state.
    var validNextStates: [AnimationState] {
        switch self {
            case .idle:
                return [.walkLoop, .plant, .celebrate, .wave]
            case .walkLoop:
                return [.walkEnd, .celebrate]
            case .walkEnd, .plant:
                return [.idle, .celebrate, .wave, .walkLoop]
            case .celebrate, .wave:
                return [.idle]
        }
    }
    
    @MainActor
    func registerHandler(_ handler: @escaping AnimationStateMachineHandler) {
        AnimationState.handlers.append(handler)

2024-11-04 13:19:03,045 - INFO - Animation example:
func registerHandler(_ handler: @escaping AnimationStateMachineHandler) {
2024-11-04 13:19:03,045 - INFO - Context:
    /// Returns an array containing all valid state transitions from the current state.
    var validNextStates: [AnimationState] {
        switch self {
            case .idle:
                return [.walkLoop, .plant, .celebrate, .wave]
            case .walkLoop:
                return [.walkEnd, .celebrate]
            case .walkEnd, .plant:
                return [.idle, .celebrate, .wave, .walkLoop]
            case .celebrate, .wave:
                return [.idle]
        }
    }
    
    @MainActor
    func registerHandler(_ handler: @escaping AnimationStateMachineHandler) {
        AnimationState.handlers.append(handler)
        // Call the handler for the current state, since it doesn't exist during the transition.
        handler(self)
    }
   
    /// The looping behavior of the animation state.
    var loopingBehavior: AnimationLoopingBehavior {
        if [.idle, .walkLoop, .celebrate].contains(self) {
            return .infinite
        } else {
            return .finite(times: 1)
        }
    }
    
    var nextState: AnimationState {

2024-11-04 13:19:03,045 - INFO - Animation example:
AnimationState.handlers.append(handler)
2024-11-04 13:19:03,045 - INFO - Context:
    var validNextStates: [AnimationState] {
        switch self {
            case .idle:
                return [.walkLoop, .plant, .celebrate, .wave]
            case .walkLoop:
                return [.walkEnd, .celebrate]
            case .walkEnd, .plant:
                return [.idle, .celebrate, .wave, .walkLoop]
            case .celebrate, .wave:
                return [.idle]
        }
    }
    
    @MainActor
    func registerHandler(_ handler: @escaping AnimationStateMachineHandler) {
        AnimationState.handlers.append(handler)
        // Call the handler for the current state, since it doesn't exist during the transition.
        handler(self)
    }
   
    /// The looping behavior of the animation state.
    var loopingBehavior: AnimationLoopingBehavior {
        if [.idle, .walkLoop, .celebrate].contains(self) {
            return .infinite
        } else {
            return .finite(times: 1)
        }
    }
    
    var nextState: AnimationState {
        switch self {

2024-11-04 13:19:03,045 - INFO - Animation example:
var loopingBehavior: AnimationLoopingBehavior {
2024-11-04 13:19:03,045 - INFO - Context:
            case .walkEnd, .plant:
                return [.idle, .celebrate, .wave, .walkLoop]
            case .celebrate, .wave:
                return [.idle]
        }
    }
    
    @MainActor
    func registerHandler(_ handler: @escaping AnimationStateMachineHandler) {
        AnimationState.handlers.append(handler)
        // Call the handler for the current state, since it doesn't exist during the transition.
        handler(self)
    }
   
    /// The looping behavior of the animation state.
    var loopingBehavior: AnimationLoopingBehavior {
        if [.idle, .walkLoop, .celebrate].contains(self) {
            return .infinite
        } else {
            return .finite(times: 1)
        }
    }
    
    var nextState: AnimationState {
        switch self {
        case .walkEnd, .celebrate, .plant, .wave:
                return .idle
            default:
                return self
        }
    }

2024-11-04 13:19:03,045 - INFO - Animation example:
var nextState: AnimationState {
2024-11-04 13:19:03,045 - INFO - Context:
    func registerHandler(_ handler: @escaping AnimationStateMachineHandler) {
        AnimationState.handlers.append(handler)
        // Call the handler for the current state, since it doesn't exist during the transition.
        handler(self)
    }
   
    /// The looping behavior of the animation state.
    var loopingBehavior: AnimationLoopingBehavior {
        if [.idle, .walkLoop, .celebrate].contains(self) {
            return .infinite
        } else {
            return .finite(times: 1)
        }
    }
    
    var nextState: AnimationState {
        switch self {
        case .walkEnd, .celebrate, .plant, .wave:
                return .idle
            default:
                return self
        }
    }
    
    func fileSuffix() -> String {
        return "_\(self.rawValue)_anim"
    }
    
    @MainActor
    mutating func reset() {
        self = .idle

2024-11-04 13:19:03,045 - INFO - Animation example:
for handler in AnimationState.handlers {
2024-11-04 13:19:03,045 - INFO - Context:
        switch self {
        case .walkEnd, .celebrate, .plant, .wave:
                return .idle
            default:
                return self
        }
    }
    
    func fileSuffix() -> String {
        return "_\(self.rawValue)_anim"
    }
    
    @MainActor
    mutating func reset() {
        self = .idle
        for handler in AnimationState.handlers {
            handler(self)
        }
    }
    
    func isValidNextState(_ state: AnimationState) -> Bool {
        return validNextStates.contains(state)
    }
    
    /// Requests a state transition.
    @MainActor
    @discardableResult
    mutating public func transition(to newState: AnimationState) -> Bool {
        let oldValue = self.rawValue
        logger.info("Attempting to change state from \(oldValue) to \(newState.rawValue)")
        guard self != newState else {

2024-11-04 13:19:03,045 - INFO - Animation example:
func isValidNextState(_ state: AnimationState) -> Bool {
2024-11-04 13:19:03,045 - INFO - Context:
        }
    }
    
    func fileSuffix() -> String {
        return "_\(self.rawValue)_anim"
    }
    
    @MainActor
    mutating func reset() {
        self = .idle
        for handler in AnimationState.handlers {
            handler(self)
        }
    }
    
    func isValidNextState(_ state: AnimationState) -> Bool {
        return validNextStates.contains(state)
    }
    
    /// Requests a state transition.
    @MainActor
    @discardableResult
    mutating public func transition(to newState: AnimationState) -> Bool {
        let oldValue = self.rawValue
        logger.info("Attempting to change state from \(oldValue) to \(newState.rawValue)")
        guard self != newState else {
            logger.debug("Attempting to change phase to \(newState.rawValue) but already in that state. Treating as a no-op.")
            return false
        }
        guard isValidNextState(newState) else {
            logger.error("Requested transition from \(oldValue) to \(newState.rawValue), but that's not a valid transition.")

2024-11-04 13:19:03,045 - INFO - Animation example:
mutating public func transition(to newState: AnimationState) -> Bool {
2024-11-04 13:19:03,045 - INFO - Context:
    @MainActor
    mutating func reset() {
        self = .idle
        for handler in AnimationState.handlers {
            handler(self)
        }
    }
    
    func isValidNextState(_ state: AnimationState) -> Bool {
        return validNextStates.contains(state)
    }
    
    /// Requests a state transition.
    @MainActor
    @discardableResult
    mutating public func transition(to newState: AnimationState) -> Bool {
        let oldValue = self.rawValue
        logger.info("Attempting to change state from \(oldValue) to \(newState.rawValue)")
        guard self != newState else {
            logger.debug("Attempting to change phase to \(newState.rawValue) but already in that state. Treating as a no-op.")
            return false
        }
        guard isValidNextState(newState) else {
            logger.error("Requested transition from \(oldValue) to \(newState.rawValue), but that's not a valid transition.")
            return false
        }
        self = newState
        for handler in AnimationState.handlers {
            handler(self)
        }
        return true

2024-11-04 13:19:03,045 - INFO - Animation example:
for handler in AnimationState.handlers {
2024-11-04 13:19:03,045 - INFO - Context:
        switch self {
        case .walkEnd, .celebrate, .plant, .wave:
                return .idle
            default:
                return self
        }
    }
    
    func fileSuffix() -> String {
        return "_\(self.rawValue)_anim"
    }
    
    @MainActor
    mutating func reset() {
        self = .idle
        for handler in AnimationState.handlers {
            handler(self)
        }
    }
    
    func isValidNextState(_ state: AnimationState) -> Bool {
        return validNextStates.contains(state)
    }
    
    /// Requests a state transition.
    @MainActor
    @discardableResult
    mutating public func transition(to newState: AnimationState) -> Bool {
        let oldValue = self.rawValue
        logger.info("Attempting to change state from \(oldValue) to \(newState.rawValue)")
        guard self != newState else {

2024-11-04 13:19:03,045 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 13:19:03,046 - INFO - Found 6 animation examples
2024-11-04 13:19:03,046 - INFO - Animation example:
if movementVector != .zero && appState.robot?.animationState == .idle {
2024-11-04 13:19:03,046 - INFO - Context:

import Foundation
import RealityKit
import SwiftUI

public extension View {
    
    func platformTouchControls(appState: AppState) -> some View {
#if !os(visionOS)
        return simultaneousGesture(DragGesture()
            .onChanged { value in
                let translation = value.translation
                let movementVector = SIMD3<Float>(x: Float(translation.width), y: 0, z: Float(translation.height))
                appState.robot?.movementVector = movementVector
                
                if movementVector != .zero && appState.robot?.animationState == .idle {
                    appState.robot?.animationState.transition(to: .walkLoop)
                }
            }
            .onEnded { value in
                appState.robot?.animationState.transition(to: .walkEnd)
                appState.robot?.movementVector = .zero
            }
        )
#else
        return simultaneousGesture(DragGesture()
            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.
            .onChanged { @MainActor value in
                guard let robot = appState.robot else { fatalError("No robot.") }
                let translation = value.translation3D
                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))

2024-11-04 13:19:03,046 - INFO - Animation example:
appState.robot?.animationState.transition(to: .walkLoop)
2024-11-04 13:19:03,046 - INFO - Context:
import Foundation
import RealityKit
import SwiftUI

public extension View {
    
    func platformTouchControls(appState: AppState) -> some View {
#if !os(visionOS)
        return simultaneousGesture(DragGesture()
            .onChanged { value in
                let translation = value.translation
                let movementVector = SIMD3<Float>(x: Float(translation.width), y: 0, z: Float(translation.height))
                appState.robot?.movementVector = movementVector
                
                if movementVector != .zero && appState.robot?.animationState == .idle {
                    appState.robot?.animationState.transition(to: .walkLoop)
                }
            }
            .onEnded { value in
                appState.robot?.animationState.transition(to: .walkEnd)
                appState.robot?.movementVector = .zero
            }
        )
#else
        return simultaneousGesture(DragGesture()
            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.
            .onChanged { @MainActor value in
                guard let robot = appState.robot else { fatalError("No robot.") }
                let translation = value.translation3D
                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))
                

2024-11-04 13:19:03,046 - INFO - Animation example:
appState.robot?.animationState.transition(to: .walkEnd)
2024-11-04 13:19:03,046 - INFO - Context:
public extension View {
    
    func platformTouchControls(appState: AppState) -> some View {
#if !os(visionOS)
        return simultaneousGesture(DragGesture()
            .onChanged { value in
                let translation = value.translation
                let movementVector = SIMD3<Float>(x: Float(translation.width), y: 0, z: Float(translation.height))
                appState.robot?.movementVector = movementVector
                
                if movementVector != .zero && appState.robot?.animationState == .idle {
                    appState.robot?.animationState.transition(to: .walkLoop)
                }
            }
            .onEnded { value in
                appState.robot?.animationState.transition(to: .walkEnd)
                appState.robot?.movementVector = .zero
            }
        )
#else
        return simultaneousGesture(DragGesture()
            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.
            .onChanged { @MainActor value in
                guard let robot = appState.robot else { fatalError("No robot.") }
                let translation = value.translation3D
                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))
                
                // Starting movement while idle
                if robot.movementVector == .zero && movementVector != .zero {
                    robot.animationState.transition(to: .walkLoop)
                }

2024-11-04 13:19:03,046 - INFO - Animation example:
robot.animationState.transition(to: .walkLoop)
2024-11-04 13:19:03,046 - INFO - Context:
            .onEnded { value in
                appState.robot?.animationState.transition(to: .walkEnd)
                appState.robot?.movementVector = .zero
            }
        )
#else
        return simultaneousGesture(DragGesture()
            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.
            .onChanged { @MainActor value in
                guard let robot = appState.robot else { fatalError("No robot.") }
                let translation = value.translation3D
                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))
                
                // Starting movement while idle
                if robot.movementVector == .zero && movementVector != .zero {
                    robot.animationState.transition(to: .walkLoop)
                }
                
                // Ending movement while walking
                if robot.movementVector != .zero && movementVector == .zero {
                    robot.animationState.transition(to: .walkEnd)
                }
                robot.movementVector = movementVector
                
            } .onEnded { value in
                appState.robot?.movementVector = SIMD3<Float>(x: 0, y: 0, z: 0)
                appState.robot?.animationState.transition(to: .walkEnd)
            }
        )
#endif
    }

2024-11-04 13:19:03,046 - INFO - Animation example:
robot.animationState.transition(to: .walkEnd)
2024-11-04 13:19:03,046 - INFO - Context:
#else
        return simultaneousGesture(DragGesture()
            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.
            .onChanged { @MainActor value in
                guard let robot = appState.robot else { fatalError("No robot.") }
                let translation = value.translation3D
                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))
                
                // Starting movement while idle
                if robot.movementVector == .zero && movementVector != .zero {
                    robot.animationState.transition(to: .walkLoop)
                }
                
                // Ending movement while walking
                if robot.movementVector != .zero && movementVector == .zero {
                    robot.animationState.transition(to: .walkEnd)
                }
                robot.movementVector = movementVector
                
            } .onEnded { value in
                appState.robot?.movementVector = SIMD3<Float>(x: 0, y: 0, z: 0)
                appState.robot?.animationState.transition(to: .walkEnd)
            }
        )
#endif
    }
}


2024-11-04 13:19:03,046 - INFO - Animation example:
appState.robot?.animationState.transition(to: .walkEnd)
2024-11-04 13:19:03,046 - INFO - Context:
public extension View {
    
    func platformTouchControls(appState: AppState) -> some View {
#if !os(visionOS)
        return simultaneousGesture(DragGesture()
            .onChanged { value in
                let translation = value.translation
                let movementVector = SIMD3<Float>(x: Float(translation.width), y: 0, z: Float(translation.height))
                appState.robot?.movementVector = movementVector
                
                if movementVector != .zero && appState.robot?.animationState == .idle {
                    appState.robot?.animationState.transition(to: .walkLoop)
                }
            }
            .onEnded { value in
                appState.robot?.animationState.transition(to: .walkEnd)
                appState.robot?.movementVector = .zero
            }
        )
#else
        return simultaneousGesture(DragGesture()
            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.
            .onChanged { @MainActor value in
                guard let robot = appState.robot else { fatalError("No robot.") }
                let translation = value.translation3D
                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))
                
                // Starting movement while idle
                if robot.movementVector == .zero && movementVector != .zero {
                    robot.animationState.transition(to: .walkLoop)
                }

2024-11-04 13:19:03,046 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 13:19:03,046 - INFO - Found 2 transform/rotation examples
2024-11-04 13:19:03,046 - INFO - Transform example:
let toTransform = Transform(scale: transform.scale, rotation: quat, translation: transform.translation)
2024-11-04 13:19:03,046 - INFO - Context:
import RealityKit
import Foundation
import SwiftUI

public extension Entity {
    var jointPinComponent: JointPinComponent? {
        get { components[JointPinComponent.self] }
        set { components[JointPinComponent.self] = newValue }
    }

    #if os(visionOS)
    /// Generates a rotation animation for the entity from its current orientation to face the person playing.
    func getRotationAnimation(toFace: SquareAzimuth, duration: TimeInterval) -> AnimationResource? {
        let quat = simd_quatf(toFace.orientation)
        let fromTransform = transform
        let toTransform = Transform(scale: transform.scale, rotation: quat, translation: transform.translation)
        let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
        return try? AnimationResource.generate(with: rotateAnim)
    }
    #endif
}

extension ModelEntity {
    func getJointIndex(suffix: String) -> Int? {
        return jointNames
            .enumerated()
            .first(where: { $0.element.hasSuffix(suffix) })?
            .offset
    }
}


2024-11-04 13:19:03,046 - INFO - Transform example:
let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
2024-11-04 13:19:03,046 - INFO - Context:
import Foundation
import SwiftUI

public extension Entity {
    var jointPinComponent: JointPinComponent? {
        get { components[JointPinComponent.self] }
        set { components[JointPinComponent.self] = newValue }
    }

    #if os(visionOS)
    /// Generates a rotation animation for the entity from its current orientation to face the person playing.
    func getRotationAnimation(toFace: SquareAzimuth, duration: TimeInterval) -> AnimationResource? {
        let quat = simd_quatf(toFace.orientation)
        let fromTransform = transform
        let toTransform = Transform(scale: transform.scale, rotation: quat, translation: transform.translation)
        let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
        return try? AnimationResource.generate(with: rotateAnim)
    }
    #endif
}

extension ModelEntity {
    func getJointIndex(suffix: String) -> Int? {
        return jointNames
            .enumerated()
            .first(where: { $0.element.hasSuffix(suffix) })?
            .offset
    }
}


2024-11-04 13:19:03,046 - INFO - Found 3 animation examples
2024-11-04 13:19:03,046 - INFO - Animation example:
func getRotationAnimation(toFace: SquareAzimuth, duration: TimeInterval) -> AnimationResource? {
2024-11-04 13:19:03,046 - INFO - Context:
Extensions on Entity and ModelEntity that add commonly used custom variables and functions.
*/

import RealityKit
import Foundation
import SwiftUI

public extension Entity {
    var jointPinComponent: JointPinComponent? {
        get { components[JointPinComponent.self] }
        set { components[JointPinComponent.self] = newValue }
    }

    #if os(visionOS)
    /// Generates a rotation animation for the entity from its current orientation to face the person playing.
    func getRotationAnimation(toFace: SquareAzimuth, duration: TimeInterval) -> AnimationResource? {
        let quat = simd_quatf(toFace.orientation)
        let fromTransform = transform
        let toTransform = Transform(scale: transform.scale, rotation: quat, translation: transform.translation)
        let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
        return try? AnimationResource.generate(with: rotateAnim)
    }
    #endif
}

extension ModelEntity {
    func getJointIndex(suffix: String) -> Int? {
        return jointNames
            .enumerated()
            .first(where: { $0.element.hasSuffix(suffix) })?
            .offset

2024-11-04 13:19:03,046 - INFO - Animation example:
let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
2024-11-04 13:19:03,047 - INFO - Context:
import Foundation
import SwiftUI

public extension Entity {
    var jointPinComponent: JointPinComponent? {
        get { components[JointPinComponent.self] }
        set { components[JointPinComponent.self] = newValue }
    }

    #if os(visionOS)
    /// Generates a rotation animation for the entity from its current orientation to face the person playing.
    func getRotationAnimation(toFace: SquareAzimuth, duration: TimeInterval) -> AnimationResource? {
        let quat = simd_quatf(toFace.orientation)
        let fromTransform = transform
        let toTransform = Transform(scale: transform.scale, rotation: quat, translation: transform.translation)
        let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
        return try? AnimationResource.generate(with: rotateAnim)
    }
    #endif
}

extension ModelEntity {
    func getJointIndex(suffix: String) -> Int? {
        return jointNames
            .enumerated()
            .first(where: { $0.element.hasSuffix(suffix) })?
            .offset
    }
}


2024-11-04 13:19:03,047 - INFO - Animation example:
return try? AnimationResource.generate(with: rotateAnim)
2024-11-04 13:19:03,047 - INFO - Context:
import SwiftUI

public extension Entity {
    var jointPinComponent: JointPinComponent? {
        get { components[JointPinComponent.self] }
        set { components[JointPinComponent.self] = newValue }
    }

    #if os(visionOS)
    /// Generates a rotation animation for the entity from its current orientation to face the person playing.
    func getRotationAnimation(toFace: SquareAzimuth, duration: TimeInterval) -> AnimationResource? {
        let quat = simd_quatf(toFace.orientation)
        let fromTransform = transform
        let toTransform = Transform(scale: transform.scale, rotation: quat, translation: transform.translation)
        let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
        return try? AnimationResource.generate(with: rotateAnim)
    }
    #endif
}

extension ModelEntity {
    func getJointIndex(suffix: String) -> Int? {
        return jointNames
            .enumerated()
            .first(where: { $0.element.hasSuffix(suffix) })?
            .offset
    }
}


2024-11-04 13:19:03,051 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 13:19:03,051 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 13:19:03,051 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 13:19:03,051 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 13:19:03,051 - INFO - Found 2 animation examples
2024-11-04 13:19:03,051 - INFO - Animation example:
appState.robot?.animationState.transition(to: .walkLoop)
2024-11-04 13:19:03,051 - INFO - Context:
        var ret = Set<KeyEquivalent>()
        for (key, _) in keyBindings {
            ret.insert(key)
        }
        return ret
    }
    
    fileprivate func forEachValidKeyPress(_ press: KeyPress, _ handler: @escaping (SIMD3<Float>) -> Void) {
        if let vector = keyBindings[press.key] {
            handler(vector)
        }
    }
     
    func installTouchControls(appState: AppState) -> some View {
        return onKeyPress(keys: boundKeys, phases: .down) { press in
            appState.robot?.animationState.transition(to: .walkLoop)
            forEachValidKeyPress(press) { vector in
                appState.robot?.movementVector += vector
            }
            
            return .handled
        }
        .onKeyPress(keys: boundKeys, phases: .up) { press in
            Task { @MainActor in
                try? await Task.sleep(for: .seconds(0.1))
                if appState.robot?.movementVector == .zero {
                    appState.robot?.animationState.transition(to: .walkEnd)
                }
            }
            forEachValidKeyPress(press) { vector in
                appState.robot?.movementVector -= vector

2024-11-04 13:19:03,051 - INFO - Animation example:
appState.robot?.animationState.transition(to: .walkEnd)
2024-11-04 13:19:03,051 - INFO - Context:
    }
     
    func installTouchControls(appState: AppState) -> some View {
        return onKeyPress(keys: boundKeys, phases: .down) { press in
            appState.robot?.animationState.transition(to: .walkLoop)
            forEachValidKeyPress(press) { vector in
                appState.robot?.movementVector += vector
            }
            
            return .handled
        }
        .onKeyPress(keys: boundKeys, phases: .up) { press in
            Task { @MainActor in
                try? await Task.sleep(for: .seconds(0.1))
                if appState.robot?.movementVector == .zero {
                    appState.robot?.animationState.transition(to: .walkEnd)
                }
            }
            forEachValidKeyPress(press) { vector in
                appState.robot?.movementVector -= vector
            }
            return .handled
        }
        .onKeyPress(keys: boundKeys, phases: .repeat) { press in
            return .handled
        }
    }
}


2024-11-04 13:19:03,052 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 13:19:03,052 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 13:19:03,052 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 13:19:03,052 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 13:19:03,052 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 13:19:03,052 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 13:19:03,052 - INFO - 
Analyzing RobotView.swift:
2024-11-04 13:19:03,052 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 13:19:03,052 - INFO - Found 1 animation examples
2024-11-04 13:19:03,052 - INFO - Animation example:
withAnimation {
2024-11-04 13:19:03,052 - INFO - Context:
                        FaceSelectorView(currentFace: $currentFace)
                    }
                    MaterialSelectView(currentPart: $currentRobotPart,
                                       materialSelection: $partMaterials,
                                       colorSelection: $partColors)
                    
                    MaterialColorSelectView(currentPart: $currentRobotPart,
                                            materialSelection: $partMaterials,
                                            colorSelection: $partColors)
                    
                    LightColorSelectView(currentPart: $currentRobotPart,
                                         lightColorSelection: $partLights)
                }
                .padding(.horizontal)
                .onChange(of: currentRobotPart) {
                    withAnimation {
                        value.scrollTo("topView", anchor: .top)
                    }
                }
            }
        }
        .padding([.top, .leading, .trailing])
    }
}

#Preview(traits: .sampleAppState) {
    RobotCustomizationView()
}


2024-11-04 13:19:03,053 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 13:19:03,053 - INFO - Found 4 animation examples
2024-11-04 13:19:03,053 - INFO - Animation example:
let updateEvent = content.subscribe(to: SceneEvents.Update.self, { event in
2024-11-04 13:19:03,053 - INFO - Context:
struct ExplorationView: View {
    @Environment(AppState.self) private var appState
    @Environment(\.scenePhase) private var scenePhase
    @Environment(\.openWindow) var openWindow
    
    @State private var cancellables = [EventSubscription]()
    @FocusState var focusable: Bool
    
    #if os(visionOS)
    /// The current viewpoint from which a person using the app is viewing the volume.
    @State private var currentViewpoint: Viewpoint3D = .standard
    #endif
    var body: some View {
        ZStack {
            RealityView { content in
                let updateEvent = content.subscribe(to: SceneEvents.Update.self, { event in
                    let deltaTime = Float(event.deltaTime)
                    appState.robot?.handleMovement(deltaTime: deltaTime)
                })
                let animationStopEvent = content.subscribe(to: AnimationEvents.PlaybackTerminated.self, { event in
                    guard let robot = appState.robot else { return }
                    
                    if robot.plantsFound == appState.totalPlants && !appState.celebrating {
                        for anim in PlantAnimationProvider.shared.currentGrowAnimations.values where anim.isPlaying {
                                return
                        }
                        appState.startCelebration()
                    }
                })
                #if !os(visionOS)
                    if let environment = try? EnvironmentResource(equirectangular: skyImage) {

2024-11-04 13:19:03,053 - INFO - Animation example:
let animationStopEvent = content.subscribe(to: AnimationEvents.PlaybackTerminated.self, { event in
2024-11-04 13:19:03,053 - INFO - Context:
    
    @State private var cancellables = [EventSubscription]()
    @FocusState var focusable: Bool
    
    #if os(visionOS)
    /// The current viewpoint from which a person using the app is viewing the volume.
    @State private var currentViewpoint: Viewpoint3D = .standard
    #endif
    var body: some View {
        ZStack {
            RealityView { content in
                let updateEvent = content.subscribe(to: SceneEvents.Update.self, { event in
                    let deltaTime = Float(event.deltaTime)
                    appState.robot?.handleMovement(deltaTime: deltaTime)
                })
                let animationStopEvent = content.subscribe(to: AnimationEvents.PlaybackTerminated.self, { event in
                    guard let robot = appState.robot else { return }
                    
                    if robot.plantsFound == appState.totalPlants && !appState.celebrating {
                        for anim in PlantAnimationProvider.shared.currentGrowAnimations.values where anim.isPlaying {
                                return
                        }
                        appState.startCelebration()
                    }
                })
                #if !os(visionOS)
                    if let environment = try? EnvironmentResource(equirectangular: skyImage) {
                        content.environment = .skybox(environment)
                    }
                #endif
                cancellables.append(updateEvent)

2024-11-04 13:19:03,053 - INFO - Animation example:
for anim in PlantAnimationProvider.shared.currentGrowAnimations.values where anim.isPlaying {
2024-11-04 13:19:03,053 - INFO - Context:
    #if os(visionOS)
    /// The current viewpoint from which a person using the app is viewing the volume.
    @State private var currentViewpoint: Viewpoint3D = .standard
    #endif
    var body: some View {
        ZStack {
            RealityView { content in
                let updateEvent = content.subscribe(to: SceneEvents.Update.self, { event in
                    let deltaTime = Float(event.deltaTime)
                    appState.robot?.handleMovement(deltaTime: deltaTime)
                })
                let animationStopEvent = content.subscribe(to: AnimationEvents.PlaybackTerminated.self, { event in
                    guard let robot = appState.robot else { return }
                    
                    if robot.plantsFound == appState.totalPlants && !appState.celebrating {
                        for anim in PlantAnimationProvider.shared.currentGrowAnimations.values where anim.isPlaying {
                                return
                        }
                        appState.startCelebration()
                    }
                })
                #if !os(visionOS)
                    if let environment = try? EnvironmentResource(equirectangular: skyImage) {
                        content.environment = .skybox(environment)
                    }
                #endif
                cancellables.append(updateEvent)
                cancellables.append(animationStopEvent)
                if appState.phase == .exploration {
                    content.add(appState.explorationRoot)
                    content.add(appState.explorationCamera)

2024-11-04 13:19:03,053 - INFO - Animation example:
cancellables.append(animationStopEvent)
2024-11-04 13:19:03,053 - INFO - Context:
                    guard let robot = appState.robot else { return }
                    
                    if robot.plantsFound == appState.totalPlants && !appState.celebrating {
                        for anim in PlantAnimationProvider.shared.currentGrowAnimations.values where anim.isPlaying {
                                return
                        }
                        appState.startCelebration()
                    }
                })
                #if !os(visionOS)
                    if let environment = try? EnvironmentResource(equirectangular: skyImage) {
                        content.environment = .skybox(environment)
                    }
                #endif
                cancellables.append(updateEvent)
                cancellables.append(animationStopEvent)
                if appState.phase == .exploration {
                    content.add(appState.explorationRoot)
                    content.add(appState.explorationCamera)
                }
            } update: { updateContent in
                // Reset the idle timer when the robot moves.
                appState.robot?.idleTimer = 0
                #if os(visionOS)
                if appState.robot?.idleViewpoint != currentViewpoint.squareAzimuth {
                    appState.robot?.idleViewpoint = currentViewpoint.squareAzimuth
                    appState.robot?.hasChangedOrientationSinceLastWave = true
                }
                #endif
            }
            .platformTouchControls(appState: appState)

2024-11-04 13:19:03,053 - INFO - 
Analyzing ContentView.swift:
2024-11-04 13:19:03,053 - INFO - 
Found 0 3d_content examples:
2024-11-04 13:19:03,053 - INFO - 
Found 13 animation examples:
2024-11-04 13:19:03,053 - INFO - 
File: AppState.swift
2024-11-04 13:19:03,053 - INFO - 
File: PlantAnimationProvider.swift
2024-11-04 13:19:03,053 - INFO - 
File: AppState+Exploration.swift
2024-11-04 13:19:03,053 - INFO - 
File: EntityExtensions.swift
2024-11-04 13:19:03,053 - INFO - 
File: RobotCharacter+Movement.swift
2024-11-04 13:19:03,053 - INFO - 
File: RobotProvider+Loading.swift
2024-11-04 13:19:03,053 - INFO - 
File: RobotCharacter.swift
2024-11-04 13:19:03,053 - INFO - 
File: AnimationStateMachine.swift
2024-11-04 13:19:03,053 - INFO - 
File: RealityView+TouchControls.swift
2024-11-04 13:19:03,053 - INFO - 
File: EntityExtensions.swift
2024-11-04 13:19:03,053 - INFO - 
File: RealityView+KeyboardControls.swift
2024-11-04 13:19:03,053 - INFO - 
File: RobotCustomizationView.swift
2024-11-04 13:19:03,053 - INFO - 
File: ExplorationView.swift
2024-11-04 13:19:03,053 - INFO - 
Found 2 transforms examples:
2024-11-04 13:19:03,053 - INFO - 
File: AppState+Exploration.swift
2024-11-04 13:19:03,053 - INFO - 
File: EntityExtensions.swift
2024-11-04 13:19:03,053 - INFO - 
Found 0 ui_components examples:
2024-11-04 14:07:33,877 - INFO - Processing documentation page: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-04 14:07:38,031 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 14:07:38,081 - INFO - Found project: BOT-anist
2024-11-04 14:07:38,082 - INFO - Description: 
2024-11-04 14:07:38,082 - INFO - Requirements: {'visionOS': '2.0+', 'Xcode': '15.0+'}
2024-11-04 14:07:38,082 - INFO - Downloading project...
2024-11-04 14:07:51,037 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 14:07:51,043 - INFO - Project downloaded to: data/projects/bot-anist
2024-11-04 14:07:51,043 - INFO - Analyzing project...
2024-11-04 14:07:51,049 - INFO - Found 30 Swift files
2024-11-04 14:07:51,049 - INFO - 
Analyzing AppState.swift:
2024-11-04 14:07:51,050 - INFO - Found 3 animation examples
2024-11-04 14:07:51,050 - INFO - Animation example:
_ = PlantAnimationProvider.shared
2024-11-04 14:07:51,050 - INFO - Context:
    /// The orientation of the robot model in the creation screen.
    var robotCreationOrientation: Rotation3D = Rotation3D()
    
    var isRotating = false
    
    /// The camera establishing the rendering perspective for the creation screen `RealityView` for platforms other than visionOS.
    let robotCamera = PerspectiveCamera()
    /// The camera establishing the rendering perspective for the exploration screen `RealityView` for platforms other than visionOS.
    var explorationCamera = PerspectiveCamera()
        
    var totalPlants: Int = 3
    
    init() {
        // Warm up the provider and load the assets
        let provider = RobotProvider.shared
        _ = PlantAnimationProvider.shared
       
        phase = .loadingAssets
        provider.listenForLoadComplete() { provider in
            self.phase = .playing
            self.robotData = RobotData()
            
            #if os(macOS) || os(iOS)
            self.creationRoot.scale = SIMD3<Float>(repeating: 0.027)
            self.creationRoot.position = SIMD3<Float>(x: -0, y: -0.022, z: -0.05)
            #else
            self.creationRoot.scale = SIMD3<Float>(repeating: 0.23)
            self.creationRoot.position = SIMD3<Float>(x: -0.02, y: -0.175, z: -0.05)
            #endif

            RobotPart.allCases.forEach { part in

2024-11-04 14:07:51,050 - INFO - Animation example:
if let celebrateAnim = PlantAnimationProvider.shared.celebrateAnimations[plantComponent.plantType] {
2024-11-04 14:07:51,050 - INFO - Context:
            }
            
            setMaterial(part: part, material: .plastic)
            robotData.lightColor[part] = .white
            robotData.materialColorIndex[part] = 0
            robotData.face = .circle
            updateRobotAppearance()
        }
    }
    
    /// Starts the celebration after the robot finishes propagating all the plants.
    public func startCelebration() {
        celebrating = true
        explorationEnvironment?.forEachDescendant(withComponent: PlantComponent.self) { plantEntity, plantComponent in
            plantEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { blendEntity, blendComponent in
                if let celebrateAnim = PlantAnimationProvider.shared.celebrateAnimations[plantComponent.plantType] {
                    blendEntity.playAnimation(celebrateAnim.repeat())
                }
            }
        }
    }
}


2024-11-04 14:07:51,050 - INFO - Animation example:
blendEntity.playAnimation(celebrateAnim.repeat())
2024-11-04 14:07:51,050 - INFO - Context:
            
            setMaterial(part: part, material: .plastic)
            robotData.lightColor[part] = .white
            robotData.materialColorIndex[part] = 0
            robotData.face = .circle
            updateRobotAppearance()
        }
    }
    
    /// Starts the celebration after the robot finishes propagating all the plants.
    public func startCelebration() {
        celebrating = true
        explorationEnvironment?.forEachDescendant(withComponent: PlantComponent.self) { plantEntity, plantComponent in
            plantEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { blendEntity, blendComponent in
                if let celebrateAnim = PlantAnimationProvider.shared.celebrateAnimations[plantComponent.plantType] {
                    blendEntity.playAnimation(celebrateAnim.repeat())
                }
            }
        }
    }
}


2024-11-04 14:07:51,050 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 14:07:51,050 - INFO - Found 26 animation examples
2024-11-04 14:07:51,050 - INFO - Animation example:
Loads and provides access to plant animations.
2024-11-04 14:07:51,050 - INFO - Context:
/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
Loads and provides access to plant animations.
*/

import Foundation
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()

2024-11-04 14:07:51,050 - INFO - Animation example:
class PlantAnimationProvider: Sendable {
2024-11-04 14:07:51,050 - INFO - Context:
/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
Loads and provides access to plant animations.
*/

import Foundation
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)

2024-11-04 14:07:51,050 - INFO - Animation example:
static var shared = PlantAnimationProvider()
2024-11-04 14:07:51,050 - INFO - Context:
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
Loads and provides access to plant animations.
*/

import Foundation
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)

2024-11-04 14:07:51,050 - INFO - Animation example:
public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
2024-11-04 14:07:51,050 - INFO - Context:
Loads and provides access to plant animations.
*/

import Foundation
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }

2024-11-04 14:07:51,050 - INFO - Animation example:
public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
2024-11-04 14:07:51,051 - INFO - Context:

import Foundation
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim

2024-11-04 14:07:51,051 - INFO - Animation example:
public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
2024-11-04 14:07:51,051 - INFO - Context:
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }

2024-11-04 14:07:51,051 - INFO - Animation example:
await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
2024-11-04 14:07:51,051 - INFO - Context:

/// An object that loads and provides all the necessary animations for each plant model.
@MainActor
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    

2024-11-04 14:07:51,051 - INFO - Animation example:
let growAnim = await self.generateGrowAnimationResource(for: plantType)
2024-11-04 14:07:51,051 - INFO - Context:
class PlantAnimationProvider: Sendable {
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"

2024-11-04 14:07:51,051 - INFO - Animation example:
let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
2024-11-04 14:07:51,051 - INFO - Context:
    static var shared = PlantAnimationProvider()
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil

2024-11-04 14:07:51,051 - INFO - Animation example:
return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
2024-11-04 14:07:51,051 - INFO - Context:
    
    /// A dictionary of the grow animations for each type of plant.
    public var growAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the celebration animations for each type of plant.
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {

2024-11-04 14:07:51,051 - INFO - Animation example:
growAnimations[result.plantType] = result.growAnim
2024-11-04 14:07:51,051 - INFO - Context:
    public var celebrateAnimations = [PlantComponent.PlantTypeKey: AnimationResource]()
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value

2024-11-04 14:07:51,051 - INFO - Animation example:
celebrateAnimations[result.plantType] = result.celebrateAnim
2024-11-04 14:07:51,051 - INFO - Context:
    /// A dictionary of the current animation controllers for each type of plant.
    public var currentGrowAnimations = [PlantComponent.PlantTypeKey: AnimationPlaybackController]()
    
    init() {
        Task { @MainActor in
            await withTaskGroup(of: PlantAnimationResult.self) { taskGroup in
                for plantType in PlantComponent.PlantTypeKey.allCases {
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }

2024-11-04 14:07:51,051 - INFO - Animation example:
private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
2024-11-04 14:07:51,051 - INFO - Context:
                    taskGroup.addTask {
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }

2024-11-04 14:07:51,051 - INFO - Animation example:
let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
2024-11-04 14:07:51,051 - INFO - Context:
                        let growAnim = await self.generateGrowAnimationResource(for: plantType)
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    

2024-11-04 14:07:51,051 - INFO - Animation example:
var ret: AnimationResource? = nil
2024-11-04 14:07:51,051 - INFO - Context:
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.

2024-11-04 14:07:51,051 - INFO - Animation example:
if let index = entity.animationLibraryComponent?.animations.startIndex {
2024-11-04 14:07:51,051 - INFO - Context:
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {

2024-11-04 14:07:51,051 - INFO - Animation example:
ret = entity.animationLibraryComponent?.animations[index].value
2024-11-04 14:07:51,051 - INFO - Context:
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)

2024-11-04 14:07:51,051 - INFO - Animation example:
guard let ret else { fatalError("Animation resource unexpectedly nil.") }
2024-11-04 14:07:51,052 - INFO - Context:
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }

2024-11-04 14:07:51,052 - INFO - Animation example:
private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
2024-11-04 14:07:51,052 - INFO - Context:
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
}


2024-11-04 14:07:51,052 - INFO - Animation example:
let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
2024-11-04 14:07:51,052 - INFO - Context:
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
}

@MainActor

2024-11-04 14:07:51,052 - INFO - Animation example:
var ret: AnimationResource? = nil
2024-11-04 14:07:51,052 - INFO - Context:
                        let celeAnim = await self.generateCelebrateAnimationResource(for: plantType)
                        return PlantAnimationResult(growAnim: growAnim, celebrateAnim: celeAnim, plantType: plantType)
                    }
                }
                for await result in taskGroup {
                    growAnimations[result.plantType] = result.growAnim
                    celebrateAnimations[result.plantType] = result.celebrateAnim
                }
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.

2024-11-04 14:07:51,052 - INFO - Animation example:
ret = entity.animationLibraryComponent?.defaultAnimation
2024-11-04 14:07:51,052 - INFO - Context:
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
}

@MainActor
public struct PlantAnimationResult: Sendable {
    var growAnim: AnimationResource
    var celebrateAnim: AnimationResource
    var plantType: PlantComponent.PlantTypeKey
}

2024-11-04 14:07:51,052 - INFO - Animation example:
guard let ret else { fatalError("Animation resource unexpectedly nil.") }
2024-11-04 14:07:51,052 - INFO - Context:
            }
        }
    }
    
    /// Loads the grow animation for the given plant type.
    private func generateGrowAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_grow_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
            rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                if let index = entity.animationLibraryComponent?.animations.startIndex {
                    ret = entity.animationLibraryComponent?.animations[index].value
                }
            }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
    
    /// Loads the celebration animation for the given plant type.
    private func generateCelebrateAnimationResource(for plantType: PlantComponent.PlantTypeKey) async -> AnimationResource {
        let sceneName = "Assets/plants/animations/\(plantType.rawValue)_celebrate_anim"
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }

2024-11-04 14:07:51,052 - INFO - Animation example:
public struct PlantAnimationResult: Sendable {
2024-11-04 14:07:51,052 - INFO - Context:
        var ret: AnimationResource? = nil
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
}

@MainActor
public struct PlantAnimationResult: Sendable {
    var growAnim: AnimationResource
    var celebrateAnim: AnimationResource
    var plantType: PlantComponent.PlantTypeKey
}


2024-11-04 14:07:51,052 - INFO - Animation example:
var growAnim: AnimationResource
2024-11-04 14:07:51,052 - INFO - Context:
        do {
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
}

@MainActor
public struct PlantAnimationResult: Sendable {
    var growAnim: AnimationResource
    var celebrateAnim: AnimationResource
    var plantType: PlantComponent.PlantTypeKey
}


2024-11-04 14:07:51,052 - INFO - Animation example:
var celebrateAnim: AnimationResource
2024-11-04 14:07:51,053 - INFO - Context:
            let rootEntity = try await Entity(named: sceneName, in: BOTanistAssetsBundle)
             rootEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                 ret = entity.animationLibraryComponent?.defaultAnimation
             }
            guard let ret else { fatalError("Animation resource unexpectedly nil.") }
            return ret
        } catch {
            fatalError("Error: \(error.localizedDescription)")
        }
    }
}

@MainActor
public struct PlantAnimationResult: Sendable {
    var growAnim: AnimationResource
    var celebrateAnim: AnimationResource
    var plantType: PlantComponent.PlantTypeKey
}


2024-11-04 14:07:51,053 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 14:07:51,053 - INFO - Found 3 transform/rotation examples
2024-11-04 14:07:51,053 - INFO - Transform example:
robot?.head.transform.rotation = simd_quatf()
2024-11-04 14:07:51,053 - INFO - Context:
    
    /// Exits the exploration phase of the app and return to the creation view.
    public func exitExploration() {
        if let bodies = RobotProvider.shared.robotParts[.body] {
            for body in bodies {
                body.stopAllAnimations()
            }
        }

        robot?.animationState = .idle
        robot?.head.removeFromParent()
        robot?.body.removeFromParent()
        robot?.backpack.removeFromParent()
        
        robot?.head.transform.translation = .zero
        robot?.head.transform.rotation = simd_quatf()
        robot?.body.transform.translation = .zero
        robot?.body.transform.rotation = simd_quatf()
        robot?.backpack.transform.translation = .zero
        robot?.backpack.transform.rotation = simd_quatf()
       
        if let skeleton = robot?.body.findEntity(named: "rig_grp") {
            skeleton.jointPinComponent = nil
        }
        
        let children = explorationRoot.children
        for child in children {
            child.removeFromParent()
        }
        
        explorationEnvironment = nil

2024-11-04 14:07:51,053 - INFO - Transform example:
robot?.body.transform.rotation = simd_quatf()
2024-11-04 14:07:51,053 - INFO - Context:
    public func exitExploration() {
        if let bodies = RobotProvider.shared.robotParts[.body] {
            for body in bodies {
                body.stopAllAnimations()
            }
        }

        robot?.animationState = .idle
        robot?.head.removeFromParent()
        robot?.body.removeFromParent()
        robot?.backpack.removeFromParent()
        
        robot?.head.transform.translation = .zero
        robot?.head.transform.rotation = simd_quatf()
        robot?.body.transform.translation = .zero
        robot?.body.transform.rotation = simd_quatf()
        robot?.backpack.transform.translation = .zero
        robot?.backpack.transform.rotation = simd_quatf()
       
        if let skeleton = robot?.body.findEntity(named: "rig_grp") {
            skeleton.jointPinComponent = nil
        }
        
        let children = explorationRoot.children
        for child in children {
            child.removeFromParent()
        }
        
        explorationEnvironment = nil
    
        restoreRobotInCreator()

2024-11-04 14:07:51,053 - INFO - Transform example:
robot?.backpack.transform.rotation = simd_quatf()
2024-11-04 14:07:51,053 - INFO - Context:
            for body in bodies {
                body.stopAllAnimations()
            }
        }

        robot?.animationState = .idle
        robot?.head.removeFromParent()
        robot?.body.removeFromParent()
        robot?.backpack.removeFromParent()
        
        robot?.head.transform.translation = .zero
        robot?.head.transform.rotation = simd_quatf()
        robot?.body.transform.translation = .zero
        robot?.body.transform.rotation = simd_quatf()
        robot?.backpack.transform.translation = .zero
        robot?.backpack.transform.rotation = simd_quatf()
       
        if let skeleton = robot?.body.findEntity(named: "rig_grp") {
            skeleton.jointPinComponent = nil
        }
        
        let children = explorationRoot.children
        for child in children {
            child.removeFromParent()
        }
        
        explorationEnvironment = nil
    
        restoreRobotInCreator()
        phase = .playing
    }

2024-11-04 14:07:51,053 - INFO - Found 5 animation examples
2024-11-04 14:07:51,053 - INFO - Animation example:
Extensions to global app state with animation-related functions.
2024-11-04 14:07:51,053 - INFO - Context:
/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
Extensions to global app state with animation-related functions.
*/

import Foundation
import RealityKit
import BOTanistAssets
import SwiftUI
import Spatial

extension AppState {
    
    /// Prepares the app to transition from the creation phase to the exploration phase.
    public func prepareForExploration() {
        do {
            
            // Load the environment entity and set the blendshape weight mapping for each entity with a BlendShapeWeightsComponent.

2024-11-04 14:07:51,053 - INFO - Animation example:
robot?.animationState.transition(to: .idle)
2024-11-04 14:07:51,054 - INFO - Context:
        let cameraTilt = -0.5
        let rotationAngle = Angle2D(radians: cameraTilt)
        let rotation = Rotation3D(angle: rotationAngle, axis: RotationAxis3D.x)
        let startOrientation = Rotation3D()
        let newOrientation = startOrientation.rotated(by: rotation)
        explorationCamera.setOrientation(.init(newOrientation), relativeTo: nil)
        
        explorationRoot.addChild(robot.characterParent)
        explorationRoot.addChild(explorationEnvironment)
        explorationRoot.scale = SIMD3<Float>(repeating: 0.7)
    }
    
    /// Resets the environment so that no plants have been collected and the robot is back in the intial position.
    public func resetExploration() {
        robot?.plantsFound = 0
        robot?.animationState.transition(to: .idle)
        celebrating = false
        explorationRoot.forEachDescendant(withComponent: PlantComponent.self) { entity, component in
            var plantComponent = component
            plantComponent.interactedWith = false
            entity.components.set(plantComponent)
            entity.stopAllAnimations(recursive: true)
        }
        explorationEnvironment!.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
            Task { @MainActor [entity] in
                entity.components[BlendShapeWeightsComponent.self]!.weightSet[0].weights = BlendShapeWeights([0, 1, 0, 0, 0, 0, 0])
            }
        }
        robot?.characterParent.teleportCharacter(to: [0, 0.065, 0], relativeTo: explorationEnvironment)
    }
    

2024-11-04 14:07:51,054 - INFO - Animation example:
entity.stopAllAnimations(recursive: true)
2024-11-04 14:07:51,054 - INFO - Context:
        
        explorationRoot.addChild(robot.characterParent)
        explorationRoot.addChild(explorationEnvironment)
        explorationRoot.scale = SIMD3<Float>(repeating: 0.7)
    }
    
    /// Resets the environment so that no plants have been collected and the robot is back in the intial position.
    public func resetExploration() {
        robot?.plantsFound = 0
        robot?.animationState.transition(to: .idle)
        celebrating = false
        explorationRoot.forEachDescendant(withComponent: PlantComponent.self) { entity, component in
            var plantComponent = component
            plantComponent.interactedWith = false
            entity.components.set(plantComponent)
            entity.stopAllAnimations(recursive: true)
        }
        explorationEnvironment!.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
            Task { @MainActor [entity] in
                entity.components[BlendShapeWeightsComponent.self]!.weightSet[0].weights = BlendShapeWeights([0, 1, 0, 0, 0, 0, 0])
            }
        }
        robot?.characterParent.teleportCharacter(to: [0, 0.065, 0], relativeTo: explorationEnvironment)
    }
    
    /// Exits the exploration phase of the app and return to the creation view.
    public func exitExploration() {
        if let bodies = RobotProvider.shared.robotParts[.body] {
            for body in bodies {
                body.stopAllAnimations()
            }

2024-11-04 14:07:51,055 - INFO - Animation example:
body.stopAllAnimations()
2024-11-04 14:07:51,055 - INFO - Context:
            entity.components.set(plantComponent)
            entity.stopAllAnimations(recursive: true)
        }
        explorationEnvironment!.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
            Task { @MainActor [entity] in
                entity.components[BlendShapeWeightsComponent.self]!.weightSet[0].weights = BlendShapeWeights([0, 1, 0, 0, 0, 0, 0])
            }
        }
        robot?.characterParent.teleportCharacter(to: [0, 0.065, 0], relativeTo: explorationEnvironment)
    }
    
    /// Exits the exploration phase of the app and return to the creation view.
    public func exitExploration() {
        if let bodies = RobotProvider.shared.robotParts[.body] {
            for body in bodies {
                body.stopAllAnimations()
            }
        }

        robot?.animationState = .idle
        robot?.head.removeFromParent()
        robot?.body.removeFromParent()
        robot?.backpack.removeFromParent()
        
        robot?.head.transform.translation = .zero
        robot?.head.transform.rotation = simd_quatf()
        robot?.body.transform.translation = .zero
        robot?.body.transform.rotation = simd_quatf()
        robot?.backpack.transform.translation = .zero
        robot?.backpack.transform.rotation = simd_quatf()
       

2024-11-04 14:07:51,059 - INFO - Animation example:
robot?.animationState = .idle
2024-11-04 14:07:51,059 - INFO - Context:
            Task { @MainActor [entity] in
                entity.components[BlendShapeWeightsComponent.self]!.weightSet[0].weights = BlendShapeWeights([0, 1, 0, 0, 0, 0, 0])
            }
        }
        robot?.characterParent.teleportCharacter(to: [0, 0.065, 0], relativeTo: explorationEnvironment)
    }
    
    /// Exits the exploration phase of the app and return to the creation view.
    public func exitExploration() {
        if let bodies = RobotProvider.shared.robotParts[.body] {
            for body in bodies {
                body.stopAllAnimations()
            }
        }

        robot?.animationState = .idle
        robot?.head.removeFromParent()
        robot?.body.removeFromParent()
        robot?.backpack.removeFromParent()
        
        robot?.head.transform.translation = .zero
        robot?.head.transform.rotation = simd_quatf()
        robot?.body.transform.translation = .zero
        robot?.body.transform.rotation = simd_quatf()
        robot?.backpack.transform.translation = .zero
        robot?.backpack.transform.rotation = simd_quatf()
       
        if let skeleton = robot?.body.findEntity(named: "rig_grp") {
            skeleton.jointPinComponent = nil
        }
        

2024-11-04 14:07:51,060 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 14:07:51,060 - INFO - 
Analyzing Package.swift:
2024-11-04 14:07:51,060 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 14:07:51,060 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 14:07:51,060 - INFO - Found 3 animation examples
2024-11-04 14:07:51,060 - INFO - Animation example:
var animationLibraryComponent: AnimationLibraryComponent? {
2024-11-04 14:07:51,060 - INFO - Context:
    /// Recursive search of children looking for any descendants with a specific component and calling a closure with them.
    func forEachDescendant<T: Component>(withComponent componentClass: T.Type, _ closure: (Entity, T) -> Void) {
        for child in children {
            if let component = child.components[componentClass] {
                closure(child, component)
            }
            child.forEachDescendant(withComponent: componentClass, closure)
        }
    }
    
    var modelComponent: ModelComponent? {
        get { components[ModelComponent.self] }
        set { components[ModelComponent.self] = newValue }
    }
    
    var animationLibraryComponent: AnimationLibraryComponent? {
        get { components[AnimationLibraryComponent.self] }
        set { components[AnimationLibraryComponent.self] = newValue }
    }
}


2024-11-04 14:07:51,060 - INFO - Animation example:
get { components[AnimationLibraryComponent.self] }
2024-11-04 14:07:51,060 - INFO - Context:
    func forEachDescendant<T: Component>(withComponent componentClass: T.Type, _ closure: (Entity, T) -> Void) {
        for child in children {
            if let component = child.components[componentClass] {
                closure(child, component)
            }
            child.forEachDescendant(withComponent: componentClass, closure)
        }
    }
    
    var modelComponent: ModelComponent? {
        get { components[ModelComponent.self] }
        set { components[ModelComponent.self] = newValue }
    }
    
    var animationLibraryComponent: AnimationLibraryComponent? {
        get { components[AnimationLibraryComponent.self] }
        set { components[AnimationLibraryComponent.self] = newValue }
    }
}


2024-11-04 14:07:51,060 - INFO - Animation example:
set { components[AnimationLibraryComponent.self] = newValue }
2024-11-04 14:07:51,060 - INFO - Context:
        for child in children {
            if let component = child.components[componentClass] {
                closure(child, component)
            }
            child.forEachDescendant(withComponent: componentClass, closure)
        }
    }
    
    var modelComponent: ModelComponent? {
        get { components[ModelComponent.self] }
        set { components[ModelComponent.self] = newValue }
    }
    
    var animationLibraryComponent: AnimationLibraryComponent? {
        get { components[AnimationLibraryComponent.self] }
        set { components[AnimationLibraryComponent.self] = newValue }
    }
}


2024-11-04 14:07:51,060 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 14:07:51,060 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 14:07:51,060 - INFO - Found 11 animation examples
2024-11-04 14:07:51,060 - INFO - Animation example:
guard ![.celebrate, .wave].contains(animationState) else { return }
2024-11-04 14:07:51,060 - INFO - Context:

Abstract:
A class extension containing movement-related functions.
*/

import BOTanistAssets
import Combine
import Foundation
import RealityKit
import Spatial
import SwiftUI

extension RobotCharacter {
    /// Handles the movement of the robot every time RealityKit updates the scene.
    func handleMovement(deltaTime: Float) {
        guard ![.celebrate, .wave].contains(animationState) else { return }
        if movementVector != .zero {
            handleNonZeroMovement(deltaTime: deltaTime)
        } else {
            handleZeroMovement(deltaTime: deltaTime)
        }
    }
    
    /// Handles the behavior of the robot if its movement vector is non-zero.
    private func handleNonZeroMovement(deltaTime: Float) {
        // If the player is moving the robot, reset the idle timer.
        idleTimer = 0
        
        // Normalizing the movement vector makes sure diagonal movement doesn't have a higher speed
        // than movement in the cardinal directions.
        let normalizedMovement = movementVector / max(100, length(movementVector))

2024-11-04 14:07:51,060 - INFO - Animation example:
if animationState == .walkEnd {
2024-11-04 14:07:51,060 - INFO - Context:
            handleNonZeroMovement(deltaTime: deltaTime)
        } else {
            handleZeroMovement(deltaTime: deltaTime)
        }
    }
    
    /// Handles the behavior of the robot if its movement vector is non-zero.
    private func handleNonZeroMovement(deltaTime: Float) {
        // If the player is moving the robot, reset the idle timer.
        idleTimer = 0
        
        // Normalizing the movement vector makes sure diagonal movement doesn't have a higher speed
        // than movement in the cardinal directions.
        let normalizedMovement = movementVector / max(100, length(movementVector))
        var speed = baseSpeed
        if animationState == .walkEnd {
            speed = 0.001
        }

        // Move the robot in the direction of the movement vector with scaling applied to account for volume size changes.
        // In the event of a collision, check if the collision object is a plant that hasn't been interacted with.
        // If it is a plant, trigger the plant's grow animation.
        characterParent.moveCharacter(by: normalizedMovement * speed * speedScale * deltaTime, deltaTime: deltaTime, relativeTo: nil) { collision in
            if var plantComponent = collision.hitEntity.plantComponent {
                if plantComponent.interactedWith == false {
                    plantComponent.interactedWith = true
                    collision.hitEntity.components.set(plantComponent)
                    self.plantsFound += 1
                    if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
                        collision.hitEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                            let playbackController = entity.playAnimation(growAnimation)

2024-11-04 14:07:51,060 - INFO - Animation example:
if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
2024-11-04 14:07:51,060 - INFO - Context:
        let normalizedMovement = movementVector / max(100, length(movementVector))
        var speed = baseSpeed
        if animationState == .walkEnd {
            speed = 0.001
        }

        // Move the robot in the direction of the movement vector with scaling applied to account for volume size changes.
        // In the event of a collision, check if the collision object is a plant that hasn't been interacted with.
        // If it is a plant, trigger the plant's grow animation.
        characterParent.moveCharacter(by: normalizedMovement * speed * speedScale * deltaTime, deltaTime: deltaTime, relativeTo: nil) { collision in
            if var plantComponent = collision.hitEntity.plantComponent {
                if plantComponent.interactedWith == false {
                    plantComponent.interactedWith = true
                    collision.hitEntity.components.set(plantComponent)
                    self.plantsFound += 1
                    if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
                        collision.hitEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                            let playbackController = entity.playAnimation(growAnimation)
                            PlantAnimationProvider.shared.currentGrowAnimations[plantComponent.plantType] = playbackController
                        }
                    }
                }
            }
            if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
                self.animationState.transition(to: .celebrate)
            }
        }
        // Make sure the robot's facing the direction of the movement.
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }

2024-11-04 14:07:51,060 - INFO - Animation example:
let playbackController = entity.playAnimation(growAnimation)
2024-11-04 14:07:51,060 - INFO - Context:
        if animationState == .walkEnd {
            speed = 0.001
        }

        // Move the robot in the direction of the movement vector with scaling applied to account for volume size changes.
        // In the event of a collision, check if the collision object is a plant that hasn't been interacted with.
        // If it is a plant, trigger the plant's grow animation.
        characterParent.moveCharacter(by: normalizedMovement * speed * speedScale * deltaTime, deltaTime: deltaTime, relativeTo: nil) { collision in
            if var plantComponent = collision.hitEntity.plantComponent {
                if plantComponent.interactedWith == false {
                    plantComponent.interactedWith = true
                    collision.hitEntity.components.set(plantComponent)
                    self.plantsFound += 1
                    if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
                        collision.hitEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                            let playbackController = entity.playAnimation(growAnimation)
                            PlantAnimationProvider.shared.currentGrowAnimations[plantComponent.plantType] = playbackController
                        }
                    }
                }
            }
            if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
                self.animationState.transition(to: .celebrate)
            }
        }
        // Make sure the robot's facing the direction of the movement.
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }
    
    /// Handles the behavior of the robot if its movement vector is zero.

2024-11-04 14:07:51,060 - INFO - Animation example:
PlantAnimationProvider.shared.currentGrowAnimations[plantComponent.plantType] = playbackController
2024-11-04 14:07:51,060 - INFO - Context:
            speed = 0.001
        }

        // Move the robot in the direction of the movement vector with scaling applied to account for volume size changes.
        // In the event of a collision, check if the collision object is a plant that hasn't been interacted with.
        // If it is a plant, trigger the plant's grow animation.
        characterParent.moveCharacter(by: normalizedMovement * speed * speedScale * deltaTime, deltaTime: deltaTime, relativeTo: nil) { collision in
            if var plantComponent = collision.hitEntity.plantComponent {
                if plantComponent.interactedWith == false {
                    plantComponent.interactedWith = true
                    collision.hitEntity.components.set(plantComponent)
                    self.plantsFound += 1
                    if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
                        collision.hitEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                            let playbackController = entity.playAnimation(growAnimation)
                            PlantAnimationProvider.shared.currentGrowAnimations[plantComponent.plantType] = playbackController
                        }
                    }
                }
            }
            if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
                self.animationState.transition(to: .celebrate)
            }
        }
        // Make sure the robot's facing the direction of the movement.
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }
    
    /// Handles the behavior of the robot if its movement vector is zero.
    private func handleZeroMovement (deltaTime: Float) {

2024-11-04 14:07:51,061 - INFO - Animation example:
if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
2024-11-04 14:07:51,061 - INFO - Context:
        // If it is a plant, trigger the plant's grow animation.
        characterParent.moveCharacter(by: normalizedMovement * speed * speedScale * deltaTime, deltaTime: deltaTime, relativeTo: nil) { collision in
            if var plantComponent = collision.hitEntity.plantComponent {
                if plantComponent.interactedWith == false {
                    plantComponent.interactedWith = true
                    collision.hitEntity.components.set(plantComponent)
                    self.plantsFound += 1
                    if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
                        collision.hitEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                            let playbackController = entity.playAnimation(growAnimation)
                            PlantAnimationProvider.shared.currentGrowAnimations[plantComponent.plantType] = playbackController
                        }
                    }
                }
            }
            if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
                self.animationState.transition(to: .celebrate)
            }
        }
        // Make sure the robot's facing the direction of the movement.
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }
    
    /// Handles the behavior of the robot if its movement vector is zero.
    private func handleZeroMovement (deltaTime: Float) {
        idleTimer += deltaTime
        guard idleTimer > idleTimeout && animationState == .idle && !isRotatingToFaceFront else { return }
        
        guard hasChangedOrientationSinceLastWave else {
            return

2024-11-04 14:07:51,061 - INFO - Animation example:
self.animationState.transition(to: .celebrate)
2024-11-04 14:07:51,061 - INFO - Context:
        characterParent.moveCharacter(by: normalizedMovement * speed * speedScale * deltaTime, deltaTime: deltaTime, relativeTo: nil) { collision in
            if var plantComponent = collision.hitEntity.plantComponent {
                if plantComponent.interactedWith == false {
                    plantComponent.interactedWith = true
                    collision.hitEntity.components.set(plantComponent)
                    self.plantsFound += 1
                    if let growAnimation = PlantAnimationProvider.shared.growAnimations[plantComponent.plantType] {
                        collision.hitEntity.forEachDescendant(withComponent: BlendShapeWeightsComponent.self) { entity, component in
                            let playbackController = entity.playAnimation(growAnimation)
                            PlantAnimationProvider.shared.currentGrowAnimations[plantComponent.plantType] = playbackController
                        }
                    }
                }
            }
            if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
                self.animationState.transition(to: .celebrate)
            }
        }
        // Make sure the robot's facing the direction of the movement.
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }
    
    /// Handles the behavior of the robot if its movement vector is zero.
    private func handleZeroMovement (deltaTime: Float) {
        idleTimer += deltaTime
        guard idleTimer > idleTimeout && animationState == .idle && !isRotatingToFaceFront else { return }
        
        guard hasChangedOrientationSinceLastWave else {
            return
        }

2024-11-04 14:07:51,061 - INFO - Animation example:
guard idleTimer > idleTimeout && animationState == .idle && !isRotatingToFaceFront else { return }
2024-11-04 14:07:51,061 - INFO - Context:
                    }
                }
            }
            if self.plantsFound == self.appState.totalPlants && self.animationState != .celebrate {
                self.animationState.transition(to: .celebrate)
            }
        }
        // Make sure the robot's facing the direction of the movement.
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }
    
    /// Handles the behavior of the robot if its movement vector is zero.
    private func handleZeroMovement (deltaTime: Float) {
        idleTimer += deltaTime
        guard idleTimer > idleTimeout && animationState == .idle && !isRotatingToFaceFront else { return }
        
        guard hasChangedOrientationSinceLastWave else {
            return
        }

#if os(visionOS)
        // Generate a rotation animation for the model parent to face the given viewpoint.
        guard let rotateAnimation = characterModel.getRotationAnimation(toFace: self.idleViewpoint,
                                                                        duration: rotationDuration) else { fatalError() }
        hasChangedOrientationSinceLastWave = false
        isRotatingToFaceFront = true
        self.animationState.transition(to: .wave)
        
        Task { @MainActor in
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))

2024-11-04 14:07:51,061 - INFO - Animation example:
guard let rotateAnimation = characterModel.getRotationAnimation(toFace: self.idleViewpoint,
2024-11-04 14:07:51,061 - INFO - Context:
        characterModel.look(at: characterModel.position(relativeTo: characterParent) - normalizedMovement,
                            from: characterModel.position(relativeTo: characterParent), relativeTo: characterParent)
    }
    
    /// Handles the behavior of the robot if its movement vector is zero.
    private func handleZeroMovement (deltaTime: Float) {
        idleTimer += deltaTime
        guard idleTimer > idleTimeout && animationState == .idle && !isRotatingToFaceFront else { return }
        
        guard hasChangedOrientationSinceLastWave else {
            return
        }

#if os(visionOS)
        // Generate a rotation animation for the model parent to face the given viewpoint.
        guard let rotateAnimation = characterModel.getRotationAnimation(toFace: self.idleViewpoint,
                                                                        duration: rotationDuration) else { fatalError() }
        hasChangedOrientationSinceLastWave = false
        isRotatingToFaceFront = true
        self.animationState.transition(to: .wave)
        
        Task { @MainActor in
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))
            characterModel.playAnimation(rotateAnimation)
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))
            let angle = self.idleViewpoint.orientation.angle.radians
            let finalOrientation = simd_quatf(angle: Float(angle), axis: SIMD3<Float>(x: 0, y: 1, z: 0))
            self.characterModel.orientation = finalOrientation
            self.idleTimer = 0
            self.isRotatingToFaceFront = false
        }

2024-11-04 14:07:51,061 - INFO - Animation example:
self.animationState.transition(to: .wave)
2024-11-04 14:07:51,061 - INFO - Context:
    /// Handles the behavior of the robot if its movement vector is zero.
    private func handleZeroMovement (deltaTime: Float) {
        idleTimer += deltaTime
        guard idleTimer > idleTimeout && animationState == .idle && !isRotatingToFaceFront else { return }
        
        guard hasChangedOrientationSinceLastWave else {
            return
        }

#if os(visionOS)
        // Generate a rotation animation for the model parent to face the given viewpoint.
        guard let rotateAnimation = characterModel.getRotationAnimation(toFace: self.idleViewpoint,
                                                                        duration: rotationDuration) else { fatalError() }
        hasChangedOrientationSinceLastWave = false
        isRotatingToFaceFront = true
        self.animationState.transition(to: .wave)
        
        Task { @MainActor in
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))
            characterModel.playAnimation(rotateAnimation)
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))
            let angle = self.idleViewpoint.orientation.angle.radians
            let finalOrientation = simd_quatf(angle: Float(angle), axis: SIMD3<Float>(x: 0, y: 1, z: 0))
            self.characterModel.orientation = finalOrientation
            self.idleTimer = 0
            self.isRotatingToFaceFront = false
        }
#endif
    }
}


2024-11-04 14:07:51,061 - INFO - Animation example:
characterModel.playAnimation(rotateAnimation)
2024-11-04 14:07:51,061 - INFO - Context:
        
        guard hasChangedOrientationSinceLastWave else {
            return
        }

#if os(visionOS)
        // Generate a rotation animation for the model parent to face the given viewpoint.
        guard let rotateAnimation = characterModel.getRotationAnimation(toFace: self.idleViewpoint,
                                                                        duration: rotationDuration) else { fatalError() }
        hasChangedOrientationSinceLastWave = false
        isRotatingToFaceFront = true
        self.animationState.transition(to: .wave)
        
        Task { @MainActor in
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))
            characterModel.playAnimation(rotateAnimation)
            try? await Task.sleep(for: .seconds(rotationDuration / 2.0))
            let angle = self.idleViewpoint.orientation.angle.radians
            let finalOrientation = simd_quatf(angle: Float(angle), axis: SIMD3<Float>(x: 0, y: 1, z: 0))
            self.characterModel.orientation = finalOrientation
            self.idleTimer = 0
            self.isRotatingToFaceFront = false
        }
#endif
    }
}


2024-11-04 14:07:51,061 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 14:07:51,061 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 14:07:51,061 - INFO - Found 7 animation examples
2024-11-04 14:07:51,061 - INFO - Animation example:
var libComponent = AnimationLibraryComponent()
2024-11-04 14:07:51,061 - INFO - Context:
            fatalError("\tEncountered fatal error: \(error.localizedDescription)")
        }
        return materials
    }
    
    /// Loads each robot part asynchronously as a task that this method adds to a provided task group.
    func loadRobotParts(taskGroup: inout TaskGroup<RobotPartLoadResult>) async {
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {

2024-11-04 14:07:51,061 - INFO - Animation example:
let animationDirectory = "Assets/Robot/animations/\(partName)/"
2024-11-04 14:07:51,062 - INFO - Context:
        }
        return materials
    }
    
    /// Loads each robot part asynchronously as a task that this method adds to a provided task group.
    func loadRobotParts(taskGroup: inout TaskGroup<RobotPartLoadResult>) async {
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {
                            fatalError("Error loading robot part \(partName) from scene \(sceneName)")

2024-11-04 14:07:51,062 - INFO - Animation example:
for animationType in AnimationState.allCases {
2024-11-04 14:07:51,062 - INFO - Context:
        return materials
    }
    
    /// Loads each robot part asynchronously as a task that this method adds to a provided task group.
    func loadRobotParts(taskGroup: inout TaskGroup<RobotPartLoadResult>) async {
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {
                            fatalError("Error loading robot part \(partName) from scene \(sceneName)")
                        }

2024-11-04 14:07:51,062 - INFO - Animation example:
if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
2024-11-04 14:07:51,062 - INFO - Context:
    }
    
    /// Loads each robot part asynchronously as a task that this method adds to a provided task group.
    func loadRobotParts(taskGroup: inout TaskGroup<RobotPartLoadResult>) async {
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {
                            fatalError("Error loading robot part \(partName) from scene \(sceneName)")
                        }
                    } catch {

2024-11-04 14:07:51,062 - INFO - Animation example:
if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
2024-11-04 14:07:51,062 - INFO - Context:
    /// Loads each robot part asynchronously as a task that this method adds to a provided task group.
    func loadRobotParts(taskGroup: inout TaskGroup<RobotPartLoadResult>) async {
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {
                            fatalError("Error loading robot part \(partName) from scene \(sceneName)")
                        }
                    } catch {
                        fatalError("Error loading scene \(sceneName) for part \(part.rawValue)")
                    }

2024-11-04 14:07:51,062 - INFO - Animation example:
if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
2024-11-04 14:07:51,062 - INFO - Context:
    func loadRobotParts(taskGroup: inout TaskGroup<RobotPartLoadResult>) async {
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {
                            fatalError("Error loading robot part \(partName) from scene \(sceneName)")
                        }
                    } catch {
                        fatalError("Error loading scene \(sceneName) for part \(part.rawValue)")
                    }
                }

2024-11-04 14:07:51,062 - INFO - Animation example:
libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
2024-11-04 14:07:51,062 - INFO - Context:
        RobotPart.allCases.forEach { part in
            for (index, sceneName) in part.sceneNames.enumerated() {
                taskGroup.addTask {
                    do {
                        let partName = part.partNames[index]
                        logger.info("Loading scene \(sceneName), part: \(partName) for part type \(part.rawValue)")
                        if let entity = try await self.loadEntityFromRCPro(named: partName, fromSceneNamed: sceneName) {
                            if part == .body {
                                var libComponent = AnimationLibraryComponent()
                                let animationDirectory = "Assets/Robot/animations/\(partName)/"
                                for animationType in AnimationState.allCases {
                                    if let rootEntity = try? await Entity(named: "\(animationDirectory)\(partName)\(animationType.fileSuffix())",
                                                                          in: BOTanistAssetsBundle) {
                                        if let animationEntity = await rootEntity.findEntity(named: "rig_grp") {
                                            if let animationLibraryComponent = await animationEntity.animationLibraryComponent {
                                                libComponent.animations[animationType.rawValue] = animationLibraryComponent.defaultAnimation
                                            }
                                        }
                                    }
                                }
                                await entity.components.set(libComponent)
                            }
                            return RobotPartLoadResult(entity: entity, type: part, index: index)
                        } else {
                            fatalError("Error loading robot part \(partName) from scene \(sceneName)")
                        }
                    } catch {
                        fatalError("Error loading scene \(sceneName) for part \(part.rawValue)")
                    }
                }
            }

2024-11-04 14:07:51,063 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 14:07:51,063 - INFO - Found 21 animation examples
2024-11-04 14:07:51,063 - INFO - Animation example:
var animationState: AnimationState = .idle
2024-11-04 14:07:51,063 - INFO - Context:
    
    /// The vector that represents the direction of the robot's movement.
    var movementVector: SIMD3<Float> = .zero
    /// A multiplier you use to calculate the movement speed for the robot.
    var baseSpeed: Float = 0.165
    /// A multiplier you use to calculate the movement speed for the robot.
    ///
    /// When a person resizes the volume, this value updates to keep the robot's speed consistent.
    var speedScale: Float = 1
    /// The number of plants the robot has planted.
    var plantsFound: Int = 0
    var collisionCapsuleRadius: Float = 0.2
    var collisionCapsuleHeight: Float = 2
    
    /// The robot's current animation state.
    var animationState: AnimationState = .idle
    var subscriptions = [any Cancellable]()
    var appState: AppState
    
    #if os(visionOS)
    /// The direction the robot turns to face front after the idle timer expires.
    var idleViewpoint: SquareAzimuth = .front
    #endif
    
    /// The amount of idle time before the robot turns to face the direction in the idle Viewpoint.
    let idleTimeout: Float = 2.0
    /// The amount of time the robot has been idle.
    var idleTimer: Float = 0.0
    
    /// A Boolean value that indicates whether the robot is rotating.
    var isRotatingToFaceFront = false

2024-11-04 14:07:51,063 - INFO - Animation example:
var animationControllers = [AnimationState: AnimationPlaybackController]()
2024-11-04 14:07:51,063 - INFO - Context:
    /// The amount of idle time before the robot turns to face the direction in the idle Viewpoint.
    let idleTimeout: Float = 2.0
    /// The amount of time the robot has been idle.
    var idleTimer: Float = 0.0
    
    /// A Boolean value that indicates whether the robot is rotating.
    var isRotatingToFaceFront = false
    /// A Boolean value that indicates whether the person using the app has changed the orientation they're viewing the volume from.
    var hasChangedOrientationSinceLastWave = false
    
    /// The scale factor of the 3D models that comprise the robot.
    private var modelScale: Float = 0.065

    let rotationDuration = 0.5
    
    var animationControllers = [AnimationState: AnimationPlaybackController]()
    
    init(head: Entity, body: Entity, backpack: Entity, appState: AppState, headOffset: SIMD3<Float>? = nil, backpackOffset: SIMD3<Float>? = nil) {
        self.head = head
        self.body = body
        self.backpack = backpack
        self.appState = appState
        
        self.body.removeFromParent()
        self.head.removeFromParent()
        self.backpack.removeFromParent()
        
        guard let skeleton = body.findEntity(named: "rig_grp") as? ModelEntity else {
            fatalError("Didn't find expected rig_grp entity as descendent of rigged body.")
        }
        

2024-11-04 14:07:51,079 - INFO - Animation example:
animationState.registerHandler { @MainActor state in
2024-11-04 14:07:51,079 - INFO - Context:
                                                            backpackOffset: Transform(translation: backpackOffset).matrix,
                                                            bodyEntity: self.body)
        
        characterParent.components.set(CharacterControllerComponent(radius: collisionCapsuleRadius,
                                                                    height: collisionCapsuleHeight,
                                                                    slopeLimit: 0,
                                                                    stepLimit: 0))
        characterParent.setPosition([0, collisionCapsuleHeight / 2 * modelScale, 0], relativeTo: nil)
        characterModel.addChild(self.head)
        characterModel.addChild(self.body)
        characterModel.addChild(self.backpack)
        characterParent.addChild(characterModel)
        characterModel.setPosition([0, -collisionCapsuleHeight / 2, 0], relativeTo: characterParent)
        
        characterParent.scale = SIMD3<Float>(repeating: modelScale)
        animationState.registerHandler { @MainActor state in
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)

2024-11-04 14:07:51,079 - INFO - Animation example:
self.playAnimation(state)
2024-11-04 14:07:51,079 - INFO - Context:
                                                            bodyEntity: self.body)
        
        characterParent.components.set(CharacterControllerComponent(radius: collisionCapsuleRadius,
                                                                    height: collisionCapsuleHeight,
                                                                    slopeLimit: 0,
                                                                    stepLimit: 0))
        characterParent.setPosition([0, collisionCapsuleHeight / 2 * modelScale, 0], relativeTo: nil)
        characterModel.addChild(self.head)
        characterModel.addChild(self.body)
        characterModel.addChild(self.backpack)
        characterParent.addChild(characterModel)
        characterModel.setPosition([0, -collisionCapsuleHeight / 2, 0], relativeTo: characterParent)
        
        characterParent.scale = SIMD3<Float>(repeating: modelScale)
        animationState.registerHandler { @MainActor state in
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback

2024-11-04 14:07:51,079 - INFO - Animation example:
func playAnimation(_ animState: AnimationState) {
2024-11-04 14:07:51,079 - INFO - Context:
                                                                    stepLimit: 0))
        characterParent.setPosition([0, collisionCapsuleHeight / 2 * modelScale, 0], relativeTo: nil)
        characterModel.addChild(self.head)
        characterModel.addChild(self.body)
        characterModel.addChild(self.backpack)
        characterParent.addChild(characterModel)
        characterModel.setPosition([0, -collisionCapsuleHeight / 2, 0], relativeTo: characterParent)
        
        characterParent.scale = SIMD3<Float>(repeating: modelScale)
        animationState.registerHandler { @MainActor state in
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                

2024-11-04 14:07:51,079 - INFO - Animation example:
guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
2024-11-04 14:07:51,079 - INFO - Context:
        characterParent.setPosition([0, collisionCapsuleHeight / 2 * modelScale, 0], relativeTo: nil)
        characterModel.addChild(self.head)
        characterModel.addChild(self.body)
        characterModel.addChild(self.backpack)
        characterParent.addChild(characterModel)
        characterModel.setPosition([0, -collisionCapsuleHeight / 2, 0], relativeTo: characterParent)
        
        characterParent.scale = SIMD3<Float>(repeating: modelScale)
        animationState.registerHandler { @MainActor state in
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)

2024-11-04 14:07:51,079 - INFO - Animation example:
fatalError("Didn't find requested animation in library.")
2024-11-04 14:07:51,080 - INFO - Context:
        characterModel.addChild(self.head)
        characterModel.addChild(self.body)
        characterModel.addChild(self.backpack)
        characterParent.addChild(characterModel)
        characterModel.setPosition([0, -collisionCapsuleHeight / 2, 0], relativeTo: characterParent)
        
        characterParent.scale = SIMD3<Float>(repeating: modelScale)
        animationState.registerHandler { @MainActor state in
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in

2024-11-04 14:07:51,080 - INFO - Animation example:
let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
2024-11-04 14:07:51,080 - INFO - Context:
        animationState.registerHandler { @MainActor state in
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0

2024-11-04 14:07:51,080 - INFO - Animation example:
animationControllers[animState] = playback
2024-11-04 14:07:51,080 - INFO - Context:
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }

2024-11-04 14:07:51,080 - INFO - Animation example:
let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
2024-11-04 14:07:51,080 - INFO - Context:
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {

2024-11-04 14:07:51,080 - INFO - Animation example:
animationControllers[animState] = playback
2024-11-04 14:07:51,080 - INFO - Context:
            self.playAnimation(state)
        }
    }
    
    /// Plays the robot animation for the given animation state.
    func playAnimation(_ animState: AnimationState) {
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }

2024-11-04 14:07:51,080 - INFO - Animation example:
let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
2024-11-04 14:07:51,080 - INFO - Context:
        guard let anim = body.animationLibraryComponent?.animations[animState.rawValue] else {
            fatalError("Didn't find requested animation in library.")
        }
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }

2024-11-04 14:07:51,080 - INFO - Animation example:
let nextState = self.animationState.nextState
2024-11-04 14:07:51,080 - INFO - Context:
        if let rigGroup = body.findEntity(named: "rig_grp") {
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    

2024-11-04 14:07:51,080 - INFO - Animation example:
if self.animationState != self.animationState.nextState {
2024-11-04 14:07:51,080 - INFO - Context:
            switch animState.loopingBehavior {
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {

2024-11-04 14:07:51,080 - INFO - Animation example:
self.animationState.transition(to: nextState)
2024-11-04 14:07:51,080 - INFO - Context:
            case .infinite:
                // Pause automatic state transitions while rotating to face front.
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {

2024-11-04 14:07:51,080 - INFO - Animation example:
if self.animationState != .idle {
2024-11-04 14:07:51,080 - INFO - Context:
                if !isRotatingToFaceFront {
                    let playback = rigGroup.playAnimation(anim.repeat(), separateAnimatedValue: true, startsPaused: false)
                    animationControllers[animState] = playback
                }
            case .finite(let times):
                let playback = rigGroup.playAnimation(anim.repeat(count: times), separateAnimatedValue: true, startsPaused: false)
                animationControllers[animState] = playback
                
                let entitySubscription = rigGroup.scene?.publisher(for: AnimationEvents.PlaybackCompleted.self, on: rigGroup)
                    .sink { [weak self] _ in
                        guard let self = self else { fatalError("Could not get reference to 'self' in closure.") }
                        let nextState = self.animationState.nextState
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {
            let controller = animationControllers[animState]
            controller?.stop()

2024-11-04 14:07:51,080 - INFO - Animation example:
func stopAllAnimations() {
2024-11-04 14:07:51,080 - INFO - Context:
                        if self.animationState != self.animationState.nextState {
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {
            let controller = animationControllers[animState]
            controller?.stop()
            animationControllers[animState] = nil
        }
        body.stopAllAnimations(recursive: true)
    }
    
    private func getJointHierarchy(_ skeleton: ModelEntity, for jointName: String) -> [Int] {
        guard let jointIndex = skeleton.getJointIndex(suffix: jointName) else { fatalError("Unable to retrieve joint named \(jointName).") }
        let jointNames = skeleton.jointNames
        let jointPath = jointNames[jointIndex]
        var components = jointPath.components(separatedBy: "/")
        var indices: [Int] = []
        while !components.isEmpty {

2024-11-04 14:07:51,080 - INFO - Animation example:
for animState in AnimationState.allCases {
2024-11-04 14:07:51,080 - INFO - Context:
                            self.animationState.transition(to: nextState)
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {
            let controller = animationControllers[animState]
            controller?.stop()
            animationControllers[animState] = nil
        }
        body.stopAllAnimations(recursive: true)
    }
    
    private func getJointHierarchy(_ skeleton: ModelEntity, for jointName: String) -> [Int] {
        guard let jointIndex = skeleton.getJointIndex(suffix: jointName) else { fatalError("Unable to retrieve joint named \(jointName).") }
        let jointNames = skeleton.jointNames
        let jointPath = jointNames[jointIndex]
        var components = jointPath.components(separatedBy: "/")
        var indices: [Int] = []
        while !components.isEmpty {
            let path = components.joined(separator: "/")

2024-11-04 14:07:51,080 - INFO - Animation example:
let controller = animationControllers[animState]
2024-11-04 14:07:51,080 - INFO - Context:
                        } else {
                            if self.animationState != .idle {
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {
            let controller = animationControllers[animState]
            controller?.stop()
            animationControllers[animState] = nil
        }
        body.stopAllAnimations(recursive: true)
    }
    
    private func getJointHierarchy(_ skeleton: ModelEntity, for jointName: String) -> [Int] {
        guard let jointIndex = skeleton.getJointIndex(suffix: jointName) else { fatalError("Unable to retrieve joint named \(jointName).") }
        let jointNames = skeleton.jointNames
        let jointPath = jointNames[jointIndex]
        var components = jointPath.components(separatedBy: "/")
        var indices: [Int] = []
        while !components.isEmpty {
            let path = components.joined(separator: "/")
            indices.append(jointNames.firstIndex(of: path)!)

2024-11-04 14:07:51,080 - INFO - Animation example:
animationControllers[animState] = nil
2024-11-04 14:07:51,080 - INFO - Context:
                                self.idleTimer = 0
                            }
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {
            let controller = animationControllers[animState]
            controller?.stop()
            animationControllers[animState] = nil
        }
        body.stopAllAnimations(recursive: true)
    }
    
    private func getJointHierarchy(_ skeleton: ModelEntity, for jointName: String) -> [Int] {
        guard let jointIndex = skeleton.getJointIndex(suffix: jointName) else { fatalError("Unable to retrieve joint named \(jointName).") }
        let jointNames = skeleton.jointNames
        let jointPath = jointNames[jointIndex]
        var components = jointPath.components(separatedBy: "/")
        var indices: [Int] = []
        while !components.isEmpty {
            let path = components.joined(separator: "/")
            indices.append(jointNames.firstIndex(of: path)!)
            components.removeLast()
        }

2024-11-04 14:07:51,081 - INFO - Animation example:
body.stopAllAnimations(recursive: true)
2024-11-04 14:07:51,081 - INFO - Context:
                        }
                    }
                if let subscription = entitySubscription {
                    subscriptions.append(subscription)
                }
            }
        }
    }
    
    func stopAllAnimations() {
        for animState in AnimationState.allCases {
            let controller = animationControllers[animState]
            controller?.stop()
            animationControllers[animState] = nil
        }
        body.stopAllAnimations(recursive: true)
    }
    
    private func getJointHierarchy(_ skeleton: ModelEntity, for jointName: String) -> [Int] {
        guard let jointIndex = skeleton.getJointIndex(suffix: jointName) else { fatalError("Unable to retrieve joint named \(jointName).") }
        let jointNames = skeleton.jointNames
        let jointPath = jointNames[jointIndex]
        var components = jointPath.components(separatedBy: "/")
        var indices: [Int] = []
        while !components.isEmpty {
            let path = components.joined(separator: "/")
            indices.append(jointNames.firstIndex(of: path)!)
            components.removeLast()
        }
        
        var boneList = [String]()

2024-11-04 14:07:51,081 - INFO - 
Analyzing RobotData.swift:
2024-11-04 14:07:51,081 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 14:07:51,081 - INFO - Found 14 animation examples
2024-11-04 14:07:51,081 - INFO - Animation example:
A state machine that tracks the robot's animations.
2024-11-04 14:07:51,081 - INFO - Context:
/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
A state machine that tracks the robot's animations.
*/

import Foundation
import RealityKit

typealias AnimationStateMachineHandler = (AnimationState) -> Void

/// An enumeration that represents a state machine that tracks the current animation state of the robot.
public enum AnimationState: String, Codable, Sendable, Equatable, CaseIterable {
    case idle
    case walkLoop
    case walkEnd
    case plant
    case celebrate
    case wave

2024-11-04 14:07:51,081 - INFO - Animation example:
typealias AnimationStateMachineHandler = (AnimationState) -> Void
2024-11-04 14:07:51,081 - INFO - Context:
/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
A state machine that tracks the robot's animations.
*/

import Foundation
import RealityKit

typealias AnimationStateMachineHandler = (AnimationState) -> Void

/// An enumeration that represents a state machine that tracks the current animation state of the robot.
public enum AnimationState: String, Codable, Sendable, Equatable, CaseIterable {
    case idle
    case walkLoop
    case walkEnd
    case plant
    case celebrate
    case wave
    
    public enum AnimationLoopingBehavior {
        case infinite
        case finite (times: Int)
    }
    

2024-11-04 14:07:51,081 - INFO - Animation example:
public enum AnimationState: String, Codable, Sendable, Equatable, CaseIterable {
2024-11-04 14:07:51,081 - INFO - Context:
/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
A state machine that tracks the robot's animations.
*/

import Foundation
import RealityKit

typealias AnimationStateMachineHandler = (AnimationState) -> Void

/// An enumeration that represents a state machine that tracks the current animation state of the robot.
public enum AnimationState: String, Codable, Sendable, Equatable, CaseIterable {
    case idle
    case walkLoop
    case walkEnd
    case plant
    case celebrate
    case wave
    
    public enum AnimationLoopingBehavior {
        case infinite
        case finite (times: Int)
    }
    
    @MainActor static var handlers = [AnimationStateMachineHandler]()
    
    /// Returns an array containing all valid state transitions from the current state.

2024-11-04 14:07:51,081 - INFO - Animation example:
public enum AnimationLoopingBehavior {
2024-11-04 14:07:51,081 - INFO - Context:

import Foundation
import RealityKit

typealias AnimationStateMachineHandler = (AnimationState) -> Void

/// An enumeration that represents a state machine that tracks the current animation state of the robot.
public enum AnimationState: String, Codable, Sendable, Equatable, CaseIterable {
    case idle
    case walkLoop
    case walkEnd
    case plant
    case celebrate
    case wave
    
    public enum AnimationLoopingBehavior {
        case infinite
        case finite (times: Int)
    }
    
    @MainActor static var handlers = [AnimationStateMachineHandler]()
    
    /// Returns an array containing all valid state transitions from the current state.
    var validNextStates: [AnimationState] {
        switch self {
            case .idle:
                return [.walkLoop, .plant, .celebrate, .wave]
            case .walkLoop:
                return [.walkEnd, .celebrate]
            case .walkEnd, .plant:
                return [.idle, .celebrate, .wave, .walkLoop]

2024-11-04 14:07:51,081 - INFO - Animation example:
@MainActor static var handlers = [AnimationStateMachineHandler]()
2024-11-04 14:07:51,081 - INFO - Context:

/// An enumeration that represents a state machine that tracks the current animation state of the robot.
public enum AnimationState: String, Codable, Sendable, Equatable, CaseIterable {
    case idle
    case walkLoop
    case walkEnd
    case plant
    case celebrate
    case wave
    
    public enum AnimationLoopingBehavior {
        case infinite
        case finite (times: Int)
    }
    
    @MainActor static var handlers = [AnimationStateMachineHandler]()
    
    /// Returns an array containing all valid state transitions from the current state.
    var validNextStates: [AnimationState] {
        switch self {
            case .idle:
                return [.walkLoop, .plant, .celebrate, .wave]
            case .walkLoop:
                return [.walkEnd, .celebrate]
            case .walkEnd, .plant:
                return [.idle, .celebrate, .wave, .walkLoop]
            case .celebrate, .wave:
                return [.idle]
        }
    }
    

2024-11-04 14:07:51,081 - INFO - Animation example:
var validNextStates: [AnimationState] {
2024-11-04 14:07:51,081 - INFO - Context:
    case idle
    case walkLoop
    case walkEnd
    case plant
    case celebrate
    case wave
    
    public enum AnimationLoopingBehavior {
        case infinite
        case finite (times: Int)
    }
    
    @MainActor static var handlers = [AnimationStateMachineHandler]()
    
    /// Returns an array containing all valid state transitions from the current state.
    var validNextStates: [AnimationState] {
        switch self {
            case .idle:
                return [.walkLoop, .plant, .celebrate, .wave]
            case .walkLoop:
                return [.walkEnd, .celebrate]
            case .walkEnd, .plant:
                return [.idle, .celebrate, .wave, .walkLoop]
            case .celebrate, .wave:
                return [.idle]
        }
    }
    
    @MainActor
    func registerHandler(_ handler: @escaping AnimationStateMachineHandler) {
        AnimationState.handlers.append(handler)

2024-11-04 14:07:51,081 - INFO - Animation example:
func registerHandler(_ handler: @escaping AnimationStateMachineHandler) {
2024-11-04 14:07:51,081 - INFO - Context:
    /// Returns an array containing all valid state transitions from the current state.
    var validNextStates: [AnimationState] {
        switch self {
            case .idle:
                return [.walkLoop, .plant, .celebrate, .wave]
            case .walkLoop:
                return [.walkEnd, .celebrate]
            case .walkEnd, .plant:
                return [.idle, .celebrate, .wave, .walkLoop]
            case .celebrate, .wave:
                return [.idle]
        }
    }
    
    @MainActor
    func registerHandler(_ handler: @escaping AnimationStateMachineHandler) {
        AnimationState.handlers.append(handler)
        // Call the handler for the current state, since it doesn't exist during the transition.
        handler(self)
    }
   
    /// The looping behavior of the animation state.
    var loopingBehavior: AnimationLoopingBehavior {
        if [.idle, .walkLoop, .celebrate].contains(self) {
            return .infinite
        } else {
            return .finite(times: 1)
        }
    }
    
    var nextState: AnimationState {

2024-11-04 14:07:51,081 - INFO - Animation example:
AnimationState.handlers.append(handler)
2024-11-04 14:07:51,081 - INFO - Context:
    var validNextStates: [AnimationState] {
        switch self {
            case .idle:
                return [.walkLoop, .plant, .celebrate, .wave]
            case .walkLoop:
                return [.walkEnd, .celebrate]
            case .walkEnd, .plant:
                return [.idle, .celebrate, .wave, .walkLoop]
            case .celebrate, .wave:
                return [.idle]
        }
    }
    
    @MainActor
    func registerHandler(_ handler: @escaping AnimationStateMachineHandler) {
        AnimationState.handlers.append(handler)
        // Call the handler for the current state, since it doesn't exist during the transition.
        handler(self)
    }
   
    /// The looping behavior of the animation state.
    var loopingBehavior: AnimationLoopingBehavior {
        if [.idle, .walkLoop, .celebrate].contains(self) {
            return .infinite
        } else {
            return .finite(times: 1)
        }
    }
    
    var nextState: AnimationState {
        switch self {

2024-11-04 14:07:51,081 - INFO - Animation example:
var loopingBehavior: AnimationLoopingBehavior {
2024-11-04 14:07:51,081 - INFO - Context:
            case .walkEnd, .plant:
                return [.idle, .celebrate, .wave, .walkLoop]
            case .celebrate, .wave:
                return [.idle]
        }
    }
    
    @MainActor
    func registerHandler(_ handler: @escaping AnimationStateMachineHandler) {
        AnimationState.handlers.append(handler)
        // Call the handler for the current state, since it doesn't exist during the transition.
        handler(self)
    }
   
    /// The looping behavior of the animation state.
    var loopingBehavior: AnimationLoopingBehavior {
        if [.idle, .walkLoop, .celebrate].contains(self) {
            return .infinite
        } else {
            return .finite(times: 1)
        }
    }
    
    var nextState: AnimationState {
        switch self {
        case .walkEnd, .celebrate, .plant, .wave:
                return .idle
            default:
                return self
        }
    }

2024-11-04 14:07:51,081 - INFO - Animation example:
var nextState: AnimationState {
2024-11-04 14:07:51,081 - INFO - Context:
    func registerHandler(_ handler: @escaping AnimationStateMachineHandler) {
        AnimationState.handlers.append(handler)
        // Call the handler for the current state, since it doesn't exist during the transition.
        handler(self)
    }
   
    /// The looping behavior of the animation state.
    var loopingBehavior: AnimationLoopingBehavior {
        if [.idle, .walkLoop, .celebrate].contains(self) {
            return .infinite
        } else {
            return .finite(times: 1)
        }
    }
    
    var nextState: AnimationState {
        switch self {
        case .walkEnd, .celebrate, .plant, .wave:
                return .idle
            default:
                return self
        }
    }
    
    func fileSuffix() -> String {
        return "_\(self.rawValue)_anim"
    }
    
    @MainActor
    mutating func reset() {
        self = .idle

2024-11-04 14:07:51,081 - INFO - Animation example:
for handler in AnimationState.handlers {
2024-11-04 14:07:51,082 - INFO - Context:
        switch self {
        case .walkEnd, .celebrate, .plant, .wave:
                return .idle
            default:
                return self
        }
    }
    
    func fileSuffix() -> String {
        return "_\(self.rawValue)_anim"
    }
    
    @MainActor
    mutating func reset() {
        self = .idle
        for handler in AnimationState.handlers {
            handler(self)
        }
    }
    
    func isValidNextState(_ state: AnimationState) -> Bool {
        return validNextStates.contains(state)
    }
    
    /// Requests a state transition.
    @MainActor
    @discardableResult
    mutating public func transition(to newState: AnimationState) -> Bool {
        let oldValue = self.rawValue
        logger.info("Attempting to change state from \(oldValue) to \(newState.rawValue)")
        guard self != newState else {

2024-11-04 14:07:51,082 - INFO - Animation example:
func isValidNextState(_ state: AnimationState) -> Bool {
2024-11-04 14:07:51,082 - INFO - Context:
        }
    }
    
    func fileSuffix() -> String {
        return "_\(self.rawValue)_anim"
    }
    
    @MainActor
    mutating func reset() {
        self = .idle
        for handler in AnimationState.handlers {
            handler(self)
        }
    }
    
    func isValidNextState(_ state: AnimationState) -> Bool {
        return validNextStates.contains(state)
    }
    
    /// Requests a state transition.
    @MainActor
    @discardableResult
    mutating public func transition(to newState: AnimationState) -> Bool {
        let oldValue = self.rawValue
        logger.info("Attempting to change state from \(oldValue) to \(newState.rawValue)")
        guard self != newState else {
            logger.debug("Attempting to change phase to \(newState.rawValue) but already in that state. Treating as a no-op.")
            return false
        }
        guard isValidNextState(newState) else {
            logger.error("Requested transition from \(oldValue) to \(newState.rawValue), but that's not a valid transition.")

2024-11-04 14:07:51,082 - INFO - Animation example:
mutating public func transition(to newState: AnimationState) -> Bool {
2024-11-04 14:07:51,082 - INFO - Context:
    @MainActor
    mutating func reset() {
        self = .idle
        for handler in AnimationState.handlers {
            handler(self)
        }
    }
    
    func isValidNextState(_ state: AnimationState) -> Bool {
        return validNextStates.contains(state)
    }
    
    /// Requests a state transition.
    @MainActor
    @discardableResult
    mutating public func transition(to newState: AnimationState) -> Bool {
        let oldValue = self.rawValue
        logger.info("Attempting to change state from \(oldValue) to \(newState.rawValue)")
        guard self != newState else {
            logger.debug("Attempting to change phase to \(newState.rawValue) but already in that state. Treating as a no-op.")
            return false
        }
        guard isValidNextState(newState) else {
            logger.error("Requested transition from \(oldValue) to \(newState.rawValue), but that's not a valid transition.")
            return false
        }
        self = newState
        for handler in AnimationState.handlers {
            handler(self)
        }
        return true

2024-11-04 14:07:51,082 - INFO - Animation example:
for handler in AnimationState.handlers {
2024-11-04 14:07:51,082 - INFO - Context:
        switch self {
        case .walkEnd, .celebrate, .plant, .wave:
                return .idle
            default:
                return self
        }
    }
    
    func fileSuffix() -> String {
        return "_\(self.rawValue)_anim"
    }
    
    @MainActor
    mutating func reset() {
        self = .idle
        for handler in AnimationState.handlers {
            handler(self)
        }
    }
    
    func isValidNextState(_ state: AnimationState) -> Bool {
        return validNextStates.contains(state)
    }
    
    /// Requests a state transition.
    @MainActor
    @discardableResult
    mutating public func transition(to newState: AnimationState) -> Bool {
        let oldValue = self.rawValue
        logger.info("Attempting to change state from \(oldValue) to \(newState.rawValue)")
        guard self != newState else {

2024-11-04 14:07:51,082 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 14:07:51,082 - INFO - Found 6 animation examples
2024-11-04 14:07:51,082 - INFO - Animation example:
if movementVector != .zero && appState.robot?.animationState == .idle {
2024-11-04 14:07:51,082 - INFO - Context:

import Foundation
import RealityKit
import SwiftUI

public extension View {
    
    func platformTouchControls(appState: AppState) -> some View {
#if !os(visionOS)
        return simultaneousGesture(DragGesture()
            .onChanged { value in
                let translation = value.translation
                let movementVector = SIMD3<Float>(x: Float(translation.width), y: 0, z: Float(translation.height))
                appState.robot?.movementVector = movementVector
                
                if movementVector != .zero && appState.robot?.animationState == .idle {
                    appState.robot?.animationState.transition(to: .walkLoop)
                }
            }
            .onEnded { value in
                appState.robot?.animationState.transition(to: .walkEnd)
                appState.robot?.movementVector = .zero
            }
        )
#else
        return simultaneousGesture(DragGesture()
            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.
            .onChanged { @MainActor value in
                guard let robot = appState.robot else { fatalError("No robot.") }
                let translation = value.translation3D
                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))

2024-11-04 14:07:51,082 - INFO - Animation example:
appState.robot?.animationState.transition(to: .walkLoop)
2024-11-04 14:07:51,082 - INFO - Context:
import Foundation
import RealityKit
import SwiftUI

public extension View {
    
    func platformTouchControls(appState: AppState) -> some View {
#if !os(visionOS)
        return simultaneousGesture(DragGesture()
            .onChanged { value in
                let translation = value.translation
                let movementVector = SIMD3<Float>(x: Float(translation.width), y: 0, z: Float(translation.height))
                appState.robot?.movementVector = movementVector
                
                if movementVector != .zero && appState.robot?.animationState == .idle {
                    appState.robot?.animationState.transition(to: .walkLoop)
                }
            }
            .onEnded { value in
                appState.robot?.animationState.transition(to: .walkEnd)
                appState.robot?.movementVector = .zero
            }
        )
#else
        return simultaneousGesture(DragGesture()
            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.
            .onChanged { @MainActor value in
                guard let robot = appState.robot else { fatalError("No robot.") }
                let translation = value.translation3D
                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))
                

2024-11-04 14:07:51,082 - INFO - Animation example:
appState.robot?.animationState.transition(to: .walkEnd)
2024-11-04 14:07:51,082 - INFO - Context:
public extension View {
    
    func platformTouchControls(appState: AppState) -> some View {
#if !os(visionOS)
        return simultaneousGesture(DragGesture()
            .onChanged { value in
                let translation = value.translation
                let movementVector = SIMD3<Float>(x: Float(translation.width), y: 0, z: Float(translation.height))
                appState.robot?.movementVector = movementVector
                
                if movementVector != .zero && appState.robot?.animationState == .idle {
                    appState.robot?.animationState.transition(to: .walkLoop)
                }
            }
            .onEnded { value in
                appState.robot?.animationState.transition(to: .walkEnd)
                appState.robot?.movementVector = .zero
            }
        )
#else
        return simultaneousGesture(DragGesture()
            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.
            .onChanged { @MainActor value in
                guard let robot = appState.robot else { fatalError("No robot.") }
                let translation = value.translation3D
                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))
                
                // Starting movement while idle
                if robot.movementVector == .zero && movementVector != .zero {
                    robot.animationState.transition(to: .walkLoop)
                }

2024-11-04 14:07:51,082 - INFO - Animation example:
robot.animationState.transition(to: .walkLoop)
2024-11-04 14:07:51,082 - INFO - Context:
            .onEnded { value in
                appState.robot?.animationState.transition(to: .walkEnd)
                appState.robot?.movementVector = .zero
            }
        )
#else
        return simultaneousGesture(DragGesture()
            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.
            .onChanged { @MainActor value in
                guard let robot = appState.robot else { fatalError("No robot.") }
                let translation = value.translation3D
                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))
                
                // Starting movement while idle
                if robot.movementVector == .zero && movementVector != .zero {
                    robot.animationState.transition(to: .walkLoop)
                }
                
                // Ending movement while walking
                if robot.movementVector != .zero && movementVector == .zero {
                    robot.animationState.transition(to: .walkEnd)
                }
                robot.movementVector = movementVector
                
            } .onEnded { value in
                appState.robot?.movementVector = SIMD3<Float>(x: 0, y: 0, z: 0)
                appState.robot?.animationState.transition(to: .walkEnd)
            }
        )
#endif
    }

2024-11-04 14:07:51,082 - INFO - Animation example:
robot.animationState.transition(to: .walkEnd)
2024-11-04 14:07:51,082 - INFO - Context:
#else
        return simultaneousGesture(DragGesture()
            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.
            .onChanged { @MainActor value in
                guard let robot = appState.robot else { fatalError("No robot.") }
                let translation = value.translation3D
                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))
                
                // Starting movement while idle
                if robot.movementVector == .zero && movementVector != .zero {
                    robot.animationState.transition(to: .walkLoop)
                }
                
                // Ending movement while walking
                if robot.movementVector != .zero && movementVector == .zero {
                    robot.animationState.transition(to: .walkEnd)
                }
                robot.movementVector = movementVector
                
            } .onEnded { value in
                appState.robot?.movementVector = SIMD3<Float>(x: 0, y: 0, z: 0)
                appState.robot?.animationState.transition(to: .walkEnd)
            }
        )
#endif
    }
}


2024-11-04 14:07:51,082 - INFO - Animation example:
appState.robot?.animationState.transition(to: .walkEnd)
2024-11-04 14:07:51,082 - INFO - Context:
public extension View {
    
    func platformTouchControls(appState: AppState) -> some View {
#if !os(visionOS)
        return simultaneousGesture(DragGesture()
            .onChanged { value in
                let translation = value.translation
                let movementVector = SIMD3<Float>(x: Float(translation.width), y: 0, z: Float(translation.height))
                appState.robot?.movementVector = movementVector
                
                if movementVector != .zero && appState.robot?.animationState == .idle {
                    appState.robot?.animationState.transition(to: .walkLoop)
                }
            }
            .onEnded { value in
                appState.robot?.animationState.transition(to: .walkEnd)
                appState.robot?.movementVector = .zero
            }
        )
#else
        return simultaneousGesture(DragGesture()
            .targetedToEntity(appState.robot?.characterParent ?? Entity()) // This could be nil during app state restore.
            .onChanged { @MainActor value in
                guard let robot = appState.robot else { fatalError("No robot.") }
                let translation = value.translation3D
                let movementVector = SIMD3<Float>(x: Float(translation.x), y: 0, z: Float(translation.z))
                
                // Starting movement while idle
                if robot.movementVector == .zero && movementVector != .zero {
                    robot.animationState.transition(to: .walkLoop)
                }

2024-11-04 14:07:51,082 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 14:07:51,082 - INFO - Found 2 transform/rotation examples
2024-11-04 14:07:51,082 - INFO - Transform example:
let toTransform = Transform(scale: transform.scale, rotation: quat, translation: transform.translation)
2024-11-04 14:07:51,082 - INFO - Context:
import RealityKit
import Foundation
import SwiftUI

public extension Entity {
    var jointPinComponent: JointPinComponent? {
        get { components[JointPinComponent.self] }
        set { components[JointPinComponent.self] = newValue }
    }

    #if os(visionOS)
    /// Generates a rotation animation for the entity from its current orientation to face the person playing.
    func getRotationAnimation(toFace: SquareAzimuth, duration: TimeInterval) -> AnimationResource? {
        let quat = simd_quatf(toFace.orientation)
        let fromTransform = transform
        let toTransform = Transform(scale: transform.scale, rotation: quat, translation: transform.translation)
        let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
        return try? AnimationResource.generate(with: rotateAnim)
    }
    #endif
}

extension ModelEntity {
    func getJointIndex(suffix: String) -> Int? {
        return jointNames
            .enumerated()
            .first(where: { $0.element.hasSuffix(suffix) })?
            .offset
    }
}


2024-11-04 14:07:51,082 - INFO - Transform example:
let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
2024-11-04 14:07:51,082 - INFO - Context:
import Foundation
import SwiftUI

public extension Entity {
    var jointPinComponent: JointPinComponent? {
        get { components[JointPinComponent.self] }
        set { components[JointPinComponent.self] = newValue }
    }

    #if os(visionOS)
    /// Generates a rotation animation for the entity from its current orientation to face the person playing.
    func getRotationAnimation(toFace: SquareAzimuth, duration: TimeInterval) -> AnimationResource? {
        let quat = simd_quatf(toFace.orientation)
        let fromTransform = transform
        let toTransform = Transform(scale: transform.scale, rotation: quat, translation: transform.translation)
        let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
        return try? AnimationResource.generate(with: rotateAnim)
    }
    #endif
}

extension ModelEntity {
    func getJointIndex(suffix: String) -> Int? {
        return jointNames
            .enumerated()
            .first(where: { $0.element.hasSuffix(suffix) })?
            .offset
    }
}


2024-11-04 14:07:51,083 - INFO - Found 3 animation examples
2024-11-04 14:07:51,083 - INFO - Animation example:
func getRotationAnimation(toFace: SquareAzimuth, duration: TimeInterval) -> AnimationResource? {
2024-11-04 14:07:51,083 - INFO - Context:
Extensions on Entity and ModelEntity that add commonly used custom variables and functions.
*/

import RealityKit
import Foundation
import SwiftUI

public extension Entity {
    var jointPinComponent: JointPinComponent? {
        get { components[JointPinComponent.self] }
        set { components[JointPinComponent.self] = newValue }
    }

    #if os(visionOS)
    /// Generates a rotation animation for the entity from its current orientation to face the person playing.
    func getRotationAnimation(toFace: SquareAzimuth, duration: TimeInterval) -> AnimationResource? {
        let quat = simd_quatf(toFace.orientation)
        let fromTransform = transform
        let toTransform = Transform(scale: transform.scale, rotation: quat, translation: transform.translation)
        let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
        return try? AnimationResource.generate(with: rotateAnim)
    }
    #endif
}

extension ModelEntity {
    func getJointIndex(suffix: String) -> Int? {
        return jointNames
            .enumerated()
            .first(where: { $0.element.hasSuffix(suffix) })?
            .offset

2024-11-04 14:07:51,083 - INFO - Animation example:
let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
2024-11-04 14:07:51,083 - INFO - Context:
import Foundation
import SwiftUI

public extension Entity {
    var jointPinComponent: JointPinComponent? {
        get { components[JointPinComponent.self] }
        set { components[JointPinComponent.self] = newValue }
    }

    #if os(visionOS)
    /// Generates a rotation animation for the entity from its current orientation to face the person playing.
    func getRotationAnimation(toFace: SquareAzimuth, duration: TimeInterval) -> AnimationResource? {
        let quat = simd_quatf(toFace.orientation)
        let fromTransform = transform
        let toTransform = Transform(scale: transform.scale, rotation: quat, translation: transform.translation)
        let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
        return try? AnimationResource.generate(with: rotateAnim)
    }
    #endif
}

extension ModelEntity {
    func getJointIndex(suffix: String) -> Int? {
        return jointNames
            .enumerated()
            .first(where: { $0.element.hasSuffix(suffix) })?
            .offset
    }
}


2024-11-04 14:07:51,083 - INFO - Animation example:
return try? AnimationResource.generate(with: rotateAnim)
2024-11-04 14:07:51,083 - INFO - Context:
import SwiftUI

public extension Entity {
    var jointPinComponent: JointPinComponent? {
        get { components[JointPinComponent.self] }
        set { components[JointPinComponent.self] = newValue }
    }

    #if os(visionOS)
    /// Generates a rotation animation for the entity from its current orientation to face the person playing.
    func getRotationAnimation(toFace: SquareAzimuth, duration: TimeInterval) -> AnimationResource? {
        let quat = simd_quatf(toFace.orientation)
        let fromTransform = transform
        let toTransform = Transform(scale: transform.scale, rotation: quat, translation: transform.translation)
        let rotateAnim = FromToByAnimation(name: "rotation", from: fromTransform, to: toTransform, duration: duration, bindTarget: .transform )
        return try? AnimationResource.generate(with: rotateAnim)
    }
    #endif
}

extension ModelEntity {
    func getJointIndex(suffix: String) -> Int? {
        return jointNames
            .enumerated()
            .first(where: { $0.element.hasSuffix(suffix) })?
            .offset
    }
}


2024-11-04 14:07:51,083 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 14:07:51,083 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 14:07:51,083 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 14:07:51,083 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 14:07:51,083 - INFO - Found 2 animation examples
2024-11-04 14:07:51,083 - INFO - Animation example:
appState.robot?.animationState.transition(to: .walkLoop)
2024-11-04 14:07:51,083 - INFO - Context:
        var ret = Set<KeyEquivalent>()
        for (key, _) in keyBindings {
            ret.insert(key)
        }
        return ret
    }
    
    fileprivate func forEachValidKeyPress(_ press: KeyPress, _ handler: @escaping (SIMD3<Float>) -> Void) {
        if let vector = keyBindings[press.key] {
            handler(vector)
        }
    }
     
    func installTouchControls(appState: AppState) -> some View {
        return onKeyPress(keys: boundKeys, phases: .down) { press in
            appState.robot?.animationState.transition(to: .walkLoop)
            forEachValidKeyPress(press) { vector in
                appState.robot?.movementVector += vector
            }
            
            return .handled
        }
        .onKeyPress(keys: boundKeys, phases: .up) { press in
            Task { @MainActor in
                try? await Task.sleep(for: .seconds(0.1))
                if appState.robot?.movementVector == .zero {
                    appState.robot?.animationState.transition(to: .walkEnd)
                }
            }
            forEachValidKeyPress(press) { vector in
                appState.robot?.movementVector -= vector

2024-11-04 14:07:51,083 - INFO - Animation example:
appState.robot?.animationState.transition(to: .walkEnd)
2024-11-04 14:07:51,083 - INFO - Context:
    }
     
    func installTouchControls(appState: AppState) -> some View {
        return onKeyPress(keys: boundKeys, phases: .down) { press in
            appState.robot?.animationState.transition(to: .walkLoop)
            forEachValidKeyPress(press) { vector in
                appState.robot?.movementVector += vector
            }
            
            return .handled
        }
        .onKeyPress(keys: boundKeys, phases: .up) { press in
            Task { @MainActor in
                try? await Task.sleep(for: .seconds(0.1))
                if appState.robot?.movementVector == .zero {
                    appState.robot?.animationState.transition(to: .walkEnd)
                }
            }
            forEachValidKeyPress(press) { vector in
                appState.robot?.movementVector -= vector
            }
            return .handled
        }
        .onKeyPress(keys: boundKeys, phases: .repeat) { press in
            return .handled
        }
    }
}


2024-11-04 14:07:51,083 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 14:07:51,083 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 14:07:51,083 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 14:07:51,083 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 14:07:51,084 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 14:07:51,084 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 14:07:51,084 - INFO - 
Analyzing RobotView.swift:
2024-11-04 14:07:51,084 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 14:07:51,084 - INFO - Found 1 animation examples
2024-11-04 14:07:51,084 - INFO - Animation example:
withAnimation {
2024-11-04 14:07:51,084 - INFO - Context:
                        FaceSelectorView(currentFace: $currentFace)
                    }
                    MaterialSelectView(currentPart: $currentRobotPart,
                                       materialSelection: $partMaterials,
                                       colorSelection: $partColors)
                    
                    MaterialColorSelectView(currentPart: $currentRobotPart,
                                            materialSelection: $partMaterials,
                                            colorSelection: $partColors)
                    
                    LightColorSelectView(currentPart: $currentRobotPart,
                                         lightColorSelection: $partLights)
                }
                .padding(.horizontal)
                .onChange(of: currentRobotPart) {
                    withAnimation {
                        value.scrollTo("topView", anchor: .top)
                    }
                }
            }
        }
        .padding([.top, .leading, .trailing])
    }
}

#Preview(traits: .sampleAppState) {
    RobotCustomizationView()
}


2024-11-04 14:07:51,086 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 14:07:51,086 - INFO - Found 4 animation examples
2024-11-04 14:07:51,086 - INFO - Animation example:
let updateEvent = content.subscribe(to: SceneEvents.Update.self, { event in
2024-11-04 14:07:51,086 - INFO - Context:
struct ExplorationView: View {
    @Environment(AppState.self) private var appState
    @Environment(\.scenePhase) private var scenePhase
    @Environment(\.openWindow) var openWindow
    
    @State private var cancellables = [EventSubscription]()
    @FocusState var focusable: Bool
    
    #if os(visionOS)
    /// The current viewpoint from which a person using the app is viewing the volume.
    @State private var currentViewpoint: Viewpoint3D = .standard
    #endif
    var body: some View {
        ZStack {
            RealityView { content in
                let updateEvent = content.subscribe(to: SceneEvents.Update.self, { event in
                    let deltaTime = Float(event.deltaTime)
                    appState.robot?.handleMovement(deltaTime: deltaTime)
                })
                let animationStopEvent = content.subscribe(to: AnimationEvents.PlaybackTerminated.self, { event in
                    guard let robot = appState.robot else { return }
                    
                    if robot.plantsFound == appState.totalPlants && !appState.celebrating {
                        for anim in PlantAnimationProvider.shared.currentGrowAnimations.values where anim.isPlaying {
                                return
                        }
                        appState.startCelebration()
                    }
                })
                #if !os(visionOS)
                    if let environment = try? EnvironmentResource(equirectangular: skyImage) {

2024-11-04 14:07:51,087 - INFO - Animation example:
let animationStopEvent = content.subscribe(to: AnimationEvents.PlaybackTerminated.self, { event in
2024-11-04 14:07:51,087 - INFO - Context:
    
    @State private var cancellables = [EventSubscription]()
    @FocusState var focusable: Bool
    
    #if os(visionOS)
    /// The current viewpoint from which a person using the app is viewing the volume.
    @State private var currentViewpoint: Viewpoint3D = .standard
    #endif
    var body: some View {
        ZStack {
            RealityView { content in
                let updateEvent = content.subscribe(to: SceneEvents.Update.self, { event in
                    let deltaTime = Float(event.deltaTime)
                    appState.robot?.handleMovement(deltaTime: deltaTime)
                })
                let animationStopEvent = content.subscribe(to: AnimationEvents.PlaybackTerminated.self, { event in
                    guard let robot = appState.robot else { return }
                    
                    if robot.plantsFound == appState.totalPlants && !appState.celebrating {
                        for anim in PlantAnimationProvider.shared.currentGrowAnimations.values where anim.isPlaying {
                                return
                        }
                        appState.startCelebration()
                    }
                })
                #if !os(visionOS)
                    if let environment = try? EnvironmentResource(equirectangular: skyImage) {
                        content.environment = .skybox(environment)
                    }
                #endif
                cancellables.append(updateEvent)

2024-11-04 14:07:51,087 - INFO - Animation example:
for anim in PlantAnimationProvider.shared.currentGrowAnimations.values where anim.isPlaying {
2024-11-04 14:07:51,087 - INFO - Context:
    #if os(visionOS)
    /// The current viewpoint from which a person using the app is viewing the volume.
    @State private var currentViewpoint: Viewpoint3D = .standard
    #endif
    var body: some View {
        ZStack {
            RealityView { content in
                let updateEvent = content.subscribe(to: SceneEvents.Update.self, { event in
                    let deltaTime = Float(event.deltaTime)
                    appState.robot?.handleMovement(deltaTime: deltaTime)
                })
                let animationStopEvent = content.subscribe(to: AnimationEvents.PlaybackTerminated.self, { event in
                    guard let robot = appState.robot else { return }
                    
                    if robot.plantsFound == appState.totalPlants && !appState.celebrating {
                        for anim in PlantAnimationProvider.shared.currentGrowAnimations.values where anim.isPlaying {
                                return
                        }
                        appState.startCelebration()
                    }
                })
                #if !os(visionOS)
                    if let environment = try? EnvironmentResource(equirectangular: skyImage) {
                        content.environment = .skybox(environment)
                    }
                #endif
                cancellables.append(updateEvent)
                cancellables.append(animationStopEvent)
                if appState.phase == .exploration {
                    content.add(appState.explorationRoot)
                    content.add(appState.explorationCamera)

2024-11-04 14:07:51,087 - INFO - Animation example:
cancellables.append(animationStopEvent)
2024-11-04 14:07:51,087 - INFO - Context:
                    guard let robot = appState.robot else { return }
                    
                    if robot.plantsFound == appState.totalPlants && !appState.celebrating {
                        for anim in PlantAnimationProvider.shared.currentGrowAnimations.values where anim.isPlaying {
                                return
                        }
                        appState.startCelebration()
                    }
                })
                #if !os(visionOS)
                    if let environment = try? EnvironmentResource(equirectangular: skyImage) {
                        content.environment = .skybox(environment)
                    }
                #endif
                cancellables.append(updateEvent)
                cancellables.append(animationStopEvent)
                if appState.phase == .exploration {
                    content.add(appState.explorationRoot)
                    content.add(appState.explorationCamera)
                }
            } update: { updateContent in
                // Reset the idle timer when the robot moves.
                appState.robot?.idleTimer = 0
                #if os(visionOS)
                if appState.robot?.idleViewpoint != currentViewpoint.squareAzimuth {
                    appState.robot?.idleViewpoint = currentViewpoint.squareAzimuth
                    appState.robot?.hasChangedOrientationSinceLastWave = true
                }
                #endif
            }
            .platformTouchControls(appState: appState)

2024-11-04 14:07:51,088 - INFO - 
Analyzing ContentView.swift:
2024-11-04 14:07:51,088 - INFO - 
Found 0 3d_content examples:
2024-11-04 14:07:51,088 - INFO - 
Found 13 animation examples:
2024-11-04 14:07:51,088 - INFO - 
File: AppState.swift
2024-11-04 14:07:51,088 - INFO - 
File: PlantAnimationProvider.swift
2024-11-04 14:07:51,088 - INFO - 
File: AppState+Exploration.swift
2024-11-04 14:07:51,088 - INFO - 
File: EntityExtensions.swift
2024-11-04 14:07:51,088 - INFO - 
File: RobotCharacter+Movement.swift
2024-11-04 14:07:51,088 - INFO - 
File: RobotProvider+Loading.swift
2024-11-04 14:07:51,088 - INFO - 
File: RobotCharacter.swift
2024-11-04 14:07:51,088 - INFO - 
File: AnimationStateMachine.swift
2024-11-04 14:07:51,088 - INFO - 
File: RealityView+TouchControls.swift
2024-11-04 14:07:51,088 - INFO - 
File: EntityExtensions.swift
2024-11-04 14:07:51,088 - INFO - 
File: RealityView+KeyboardControls.swift
2024-11-04 14:07:51,088 - INFO - 
File: RobotCustomizationView.swift
2024-11-04 14:07:51,088 - INFO - 
File: ExplorationView.swift
2024-11-04 14:07:51,088 - INFO - 
Found 2 transforms examples:
2024-11-04 14:07:51,088 - INFO - 
File: AppState+Exploration.swift
2024-11-04 14:07:51,088 - INFO - 
File: EntityExtensions.swift
2024-11-04 14:07:51,088 - INFO - 
Found 0 ui_components examples:
2024-11-04 15:08:54,201 - INFO - Starting subset test with 5 documentation pages...
2024-11-04 15:08:54,201 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-04 15:08:57,528 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 15:08:57,563 - INFO - Found project: BOT-anist
2024-11-04 15:09:03,463 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 15:09:03,471 - INFO - Downloaded to: data/projects/bot-anist
2024-11-04 15:09:03,472 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/creating-3d-shapes-in-visionos-with-realitykit
2024-11-04 15:09:05,260 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 15:09:05,287 - INFO - Found project: Creating 3D entities with RealityKit
2024-11-04 15:09:05,738 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 15:09:05,739 - INFO - Downloaded to: data/projects/creating-3d-entities-with-realitykit
2024-11-04 15:09:05,739 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/creating-an-interactable-3d-model-in-visionos
2024-11-04 15:09:07,467 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/7b5bc90de8c3/CreatingA3DModelWithGesturesInVisionOS.zip
2024-11-04 15:09:07,495 - INFO - Found project: Creating an interactive 3D model in visionOS
2024-11-04 15:09:09,315 - INFO - Downloaded project to data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 15:09:09,315 - INFO - Downloaded to: data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 15:09:09,315 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-04 15:09:11,980 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c615c66bc630/SwiftSplash.zip
2024-11-04 15:09:12,008 - INFO - Found project: Swift Splash
2024-11-04 15:09:21,990 - INFO - Downloaded project to data/projects/swift-splash
2024-11-04 15:09:21,995 - INFO - Downloaded to: data/projects/swift-splash
2024-11-04 15:09:21,995 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/diorama
2024-11-04 15:09:24,614 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/f60567d1cc7d/Diorama.zip
2024-11-04 15:09:24,640 - INFO - Found project: Diorama
2024-11-04 15:09:38,419 - INFO - Downloaded project to data/projects/diorama
2024-11-04 15:09:38,425 - INFO - Downloaded to: data/projects/diorama
2024-11-04 15:09:38,426 - INFO - 
Subset test complete!
2024-11-04 15:11:34,309 - INFO - Starting subset test with 5 documentation pages...
2024-11-04 15:11:34,309 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-04 15:11:37,165 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 15:11:37,192 - INFO - Found project: BOT-anist
2024-11-04 15:11:45,463 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 15:11:45,475 - INFO - Downloaded to: data/projects/bot-anist
2024-11-04 15:11:45,475 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/creating-3d-shapes-in-visionos-with-realitykit
2024-11-04 15:11:49,643 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 15:11:49,688 - INFO - Found project: Creating 3D entities with RealityKit
2024-11-04 15:11:49,821 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 15:11:49,821 - INFO - Downloaded to: data/projects/creating-3d-entities-with-realitykit
2024-11-04 15:11:49,821 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/creating-an-interactable-3d-model-in-visionos
2024-11-04 15:11:52,472 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/7b5bc90de8c3/CreatingA3DModelWithGesturesInVisionOS.zip
2024-11-04 15:11:52,500 - INFO - Found project: Creating an interactive 3D model in visionOS
2024-11-04 15:11:54,432 - INFO - Downloaded project to data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 15:11:54,432 - INFO - Downloaded to: data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 15:11:54,432 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-04 15:11:59,221 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c615c66bc630/SwiftSplash.zip
2024-11-04 15:11:59,253 - INFO - Found project: Swift Splash
2024-11-04 15:12:08,483 - INFO - Downloaded project to data/projects/swift-splash
2024-11-04 15:12:08,489 - INFO - Downloaded to: data/projects/swift-splash
2024-11-04 15:12:08,489 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/diorama
2024-11-04 15:12:10,798 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/f60567d1cc7d/Diorama.zip
2024-11-04 15:12:10,825 - INFO - Found project: Diorama
2024-11-04 15:12:21,691 - INFO - Downloaded project to data/projects/diorama
2024-11-04 15:12:21,697 - INFO - Downloaded to: data/projects/diorama
2024-11-04 15:12:21,697 - INFO - 
Analyzing downloaded projects:
2024-11-04 15:12:21,698 - INFO - 
Analyzing BOT-anist:
2024-11-04 15:12:21,703 - INFO - Found 30 Swift files
2024-11-04 15:12:21,704 - INFO - 
Analyzing AppState.swift:
2024-11-04 15:12:21,704 - ERROR - Error analyzing project: 'ProjectAnalyzer' object has no attribute '_analyze_patterns'
2024-11-04 15:12:21,704 - INFO - Found patterns:
2024-11-04 15:12:21,704 - ERROR - Error in subset test: 'patterns'
Traceback (most recent call last):
  File "/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/documentation_builder/run_scraper.py", line 60, in main
    for category, patterns in analysis['patterns'].items():
                              ~~~~~~~~^^^^^^^^^^^^
KeyError: 'patterns'
2024-11-04 15:32:25,379 - INFO - Starting subset test with 5 documentation pages...
2024-11-04 15:32:25,379 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-04 15:32:29,083 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 15:32:29,117 - INFO - Found project: BOT-anist
2024-11-04 15:32:38,918 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 15:32:38,924 - INFO - Downloaded to: data/projects/bot-anist
2024-11-04 15:32:38,924 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/creating-3d-shapes-in-visionos-with-realitykit
2024-11-04 15:32:41,803 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 15:32:41,839 - INFO - Found project: Creating 3D entities with RealityKit
2024-11-04 15:32:42,176 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 15:32:42,176 - INFO - Downloaded to: data/projects/creating-3d-entities-with-realitykit
2024-11-04 15:32:42,176 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/creating-an-interactable-3d-model-in-visionos
2024-11-04 15:32:44,635 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/7b5bc90de8c3/CreatingA3DModelWithGesturesInVisionOS.zip
2024-11-04 15:32:44,673 - INFO - Found project: Creating an interactive 3D model in visionOS
2024-11-04 15:32:46,243 - INFO - Downloaded project to data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 15:32:46,244 - INFO - Downloaded to: data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 15:32:46,244 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-04 15:32:49,694 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c615c66bc630/SwiftSplash.zip
2024-11-04 15:32:49,721 - INFO - Found project: Swift Splash
2024-11-04 15:32:58,432 - INFO - Downloaded project to data/projects/swift-splash
2024-11-04 15:32:58,438 - INFO - Downloaded to: data/projects/swift-splash
2024-11-04 15:32:58,438 - INFO - 
Processing: https://developer.apple.com/documentation/visionos/diorama
2024-11-04 15:33:02,133 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/f60567d1cc7d/Diorama.zip
2024-11-04 15:33:02,177 - INFO - Found project: Diorama
2024-11-04 15:33:11,309 - INFO - Downloaded project to data/projects/diorama
2024-11-04 15:33:11,316 - INFO - Downloaded to: data/projects/diorama
2024-11-04 15:33:11,317 - INFO - 
Analyzing downloaded projects:
2024-11-04 15:33:11,317 - INFO - 
Analyzing BOT-anist:
2024-11-04 15:33:11,322 - INFO - Found 30 Swift files
2024-11-04 15:33:11,322 - INFO - 
Analyzing AppState.swift:
2024-11-04 15:33:11,322 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 15:33:11,322 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 15:33:11,322 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 15:33:11,322 - INFO - 
Analyzing Package.swift:
2024-11-04 15:33:11,322 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing RobotData.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 15:33:11,323 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 15:33:11,324 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 15:33:11,324 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 15:33:11,324 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 15:33:11,324 - INFO - 
Analyzing RobotView.swift:
2024-11-04 15:33:11,324 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 15:33:11,324 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 15:33:11,324 - INFO - 
Analyzing ContentView.swift:
2024-11-04 15:33:11,324 - INFO - Found patterns:
2024-11-04 15:33:11,324 - INFO - - animation: 3 patterns
2024-11-04 15:33:11,324 - INFO -   â€¢ state_machine in RobotProvider+Loading.swift
2024-11-04 15:33:11,324 - INFO -   â€¢ state_machine in RobotCharacter.swift
2024-11-04 15:33:11,324 - INFO -   â€¢ state_machine in AnimationStateMachine.swift
2024-11-04 15:33:11,324 - INFO - - transforms: 2 patterns
2024-11-04 15:33:11,324 - INFO -   â€¢ rotation in AppState+Exploration.swift
2024-11-04 15:33:11,324 - INFO -   â€¢ rotation in EntityExtensions.swift
2024-11-04 15:33:11,324 - INFO - - ui_components: 1 patterns
2024-11-04 15:33:11,324 - INFO -   â€¢ subscription in ExplorationView.swift
2024-11-04 15:33:11,324 - INFO - 
Pattern usage frequency:
2024-11-04 15:33:11,324 - INFO - - transform_rotation: used 2 times
2024-11-04 15:33:11,324 - INFO - - animation_state_machine: used 3 times
2024-11-04 15:33:11,324 - INFO - - event_subscription: used 1 times
2024-11-04 15:33:11,324 - INFO - 
Analyzing Creating 3D entities with RealityKit:
2024-11-04 15:33:11,325 - INFO - Found 3 Swift files
2024-11-04 15:33:11,325 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 15:33:11,325 - INFO - 
Analyzing ShapesView.swift:
2024-11-04 15:33:11,325 - INFO - 
Analyzing ShapesView+Entities.swift:
2024-11-04 15:33:11,325 - INFO - Found patterns:
2024-11-04 15:33:11,325 - INFO - 
Pattern usage frequency:
2024-11-04 15:33:11,325 - INFO - 
Analyzing Creating an interactive 3D model in visionOS:
2024-11-04 15:33:11,326 - INFO - Found 4 Swift files
2024-11-04 15:33:11,326 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 15:33:11,326 - INFO - 
Analyzing SIMD3.swift:
2024-11-04 15:33:11,326 - INFO - 
Analyzing CarView.swift:
2024-11-04 15:33:11,326 - INFO - 
Analyzing MainView.swift:
2024-11-04 15:33:11,326 - INFO - Found patterns:
2024-11-04 15:33:11,326 - INFO - 
Pattern usage frequency:
2024-11-04 15:33:11,326 - INFO - 
Analyzing Swift Splash:
2024-11-04 15:33:11,330 - INFO - Found 36 Swift files
2024-11-04 15:33:11,330 - INFO - 
Analyzing SwiftSplashApp.swift:
2024-11-04 15:33:11,330 - INFO - 
Analyzing AppState.swift:
2024-11-04 15:33:11,330 - INFO - 
Analyzing AppState+Phases.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing Piece.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing AppState+PieceSelection.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing SoundEffects.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing AppPhase.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing AppState+RideRunning.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing AppState+TrackUpdates.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing AppState+PieceManagement.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing AppState+Transparency.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing AppState+PieceLoading.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing AppConfig.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing Date+Logging.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing Entity+SwiftSplash.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing ContentToolbar.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing SplashScreenView.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing TrackBuildingView+Rotation.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing PieceShelfTrackButtonsView.swift:
2024-11-04 15:33:11,331 - INFO - 
Analyzing TrackBuildingView.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing RideControlView.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing TrackBuildingView+Snapping.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing PieceShelfView.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing ImageButton.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing PlaceStartPieceView.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing TrackBuildingView+Drag.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing EditTrackPieceView.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing ContentView.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing Package.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing SwiftSplashTrackPieces.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing Float+Utilities.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing Entity+Utilities.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing SIMD+Utilities.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing ConnectableStateComponent.swift:
2024-11-04 15:33:11,332 - INFO - 
Analyzing Connectable.swift:
2024-11-04 15:33:11,333 - INFO - 
Analyzing MarkerComponents.swift:
2024-11-04 15:33:11,333 - INFO - Found patterns:
2024-11-04 15:33:11,333 - INFO - 
Pattern usage frequency:
2024-11-04 15:33:11,333 - INFO - 
Analyzing Diorama:
2024-11-04 15:33:11,335 - INFO - Found 19 Swift files
2024-11-04 15:33:11,335 - INFO - 
Analyzing DioramaView.swift:
2024-11-04 15:33:11,335 - INFO - 
Analyzing ViewModel.swift:
2024-11-04 15:33:11,335 - INFO - 
Analyzing DioramaApp.swift:
2024-11-04 15:33:11,335 - INFO - 
Analyzing FlockingComponent.swift:
2024-11-04 15:33:11,335 - INFO - 
Analyzing LearnMoreView.swift:
2024-11-04 15:33:11,335 - INFO - 
Analyzing ContentView.swift:
2024-11-04 15:33:11,335 - INFO - 
Analyzing Components.swift:
2024-11-04 15:33:11,335 - INFO - 
Analyzing FlockingSystem.swift:
2024-11-04 15:33:11,335 - INFO - 
Analyzing AttachmentsProvider.swift:
2024-11-04 15:33:11,335 - INFO - 
Analyzing Package.swift:
2024-11-04 15:33:11,335 - INFO - 
Analyzing PointOfInterestComponent.swift:
2024-11-04 15:33:11,335 - INFO - 
Analyzing BillboardSystem.swift:
2024-11-04 15:33:11,335 - INFO - 
Analyzing ShaderGraphMaterials.swift:
2024-11-04 15:33:11,336 - INFO - 
Analyzing RegionSpecificComponent.swift:
2024-11-04 15:33:11,336 - INFO - 
Analyzing TrailAnimationSystem.swift:
2024-11-04 15:33:11,336 - INFO - 
Analyzing BillboardComponent.swift:
2024-11-04 15:33:11,336 - INFO - 
Analyzing TrailComponent.swift:
2024-11-04 15:33:11,336 - INFO - 
Analyzing Style.swift:
2024-11-04 15:33:11,336 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 15:33:11,336 - INFO - Found patterns:
2024-11-04 15:33:11,336 - INFO - - ui_components: 1 patterns
2024-11-04 15:33:11,336 - INFO -   â€¢ subscription in DioramaView.swift
2024-11-04 15:33:11,336 - INFO - 
Pattern usage frequency:
2024-11-04 15:33:11,336 - INFO - - event_subscription: used 1 times
2024-11-04 15:33:11,336 - INFO - 
Subset test complete!
2024-11-04 16:25:08,293 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 16:25:19,471 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 16:25:22,958 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 16:25:23,382 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 16:25:25,786 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/7b5bc90de8c3/CreatingA3DModelWithGesturesInVisionOS.zip
2024-11-04 16:25:27,391 - INFO - Downloaded project to data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 16:25:32,543 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c615c66bc630/SwiftSplash.zip
2024-11-04 16:25:46,590 - INFO - Downloaded project to data/projects/swift-splash
2024-11-04 16:25:48,826 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/f60567d1cc7d/Diorama.zip
2024-11-04 16:26:01,775 - INFO - Downloaded project to data/projects/diorama
2024-11-04 16:26:01,800 - INFO - Found 30 Swift files
2024-11-04 16:26:01,800 - INFO - 
Analyzing AppState.swift:
2024-11-04 16:26:01,801 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 16:26:01,801 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 16:26:01,801 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 16:26:01,801 - INFO - 
Analyzing Package.swift:
2024-11-04 16:26:01,801 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 16:26:01,802 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 16:26:01,802 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 16:26:01,802 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 16:26:01,802 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 16:26:01,802 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 16:26:01,803 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 16:26:01,803 - INFO - 
Analyzing RobotData.swift:
2024-11-04 16:26:01,804 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 16:26:01,804 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 16:26:01,805 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 16:26:01,805 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 16:26:01,805 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 16:26:01,805 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 16:26:01,805 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 16:26:01,805 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 16:26:01,805 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 16:26:01,806 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 16:26:01,806 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 16:26:01,806 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 16:26:01,806 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 16:26:01,810 - INFO - 
Analyzing RobotView.swift:
2024-11-04 16:26:01,810 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 16:26:01,810 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 16:26:01,810 - INFO - 
Analyzing ContentView.swift:
2024-11-04 16:26:01,835 - INFO - Found 3 Swift files
2024-11-04 16:26:01,835 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 16:26:01,836 - INFO - 
Analyzing ShapesView.swift:
2024-11-04 16:26:01,836 - INFO - 
Analyzing ShapesView+Entities.swift:
2024-11-04 16:26:01,839 - INFO - Found 4 Swift files
2024-11-04 16:26:01,839 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 16:26:01,840 - INFO - 
Analyzing SIMD3.swift:
2024-11-04 16:26:01,840 - INFO - 
Analyzing CarView.swift:
2024-11-04 16:26:01,840 - INFO - 
Analyzing MainView.swift:
2024-11-04 16:26:01,846 - INFO - Found 36 Swift files
2024-11-04 16:26:01,846 - INFO - 
Analyzing SwiftSplashApp.swift:
2024-11-04 16:26:01,846 - INFO - 
Analyzing AppState.swift:
2024-11-04 16:26:01,850 - INFO - 
Analyzing AppState+Phases.swift:
2024-11-04 16:26:01,850 - INFO - 
Analyzing Piece.swift:
2024-11-04 16:26:01,850 - INFO - 
Analyzing AppState+PieceSelection.swift:
2024-11-04 16:26:01,850 - INFO - 
Analyzing SoundEffects.swift:
2024-11-04 16:26:01,851 - INFO - 
Analyzing AppPhase.swift:
2024-11-04 16:26:01,851 - INFO - 
Analyzing AppState+RideRunning.swift:
2024-11-04 16:26:01,851 - INFO - 
Analyzing AppState+TrackUpdates.swift:
2024-11-04 16:26:01,851 - INFO - 
Analyzing AppState+PieceManagement.swift:
2024-11-04 16:26:01,852 - INFO - 
Analyzing AppState+Transparency.swift:
2024-11-04 16:26:01,852 - INFO - 
Analyzing AppState+PieceLoading.swift:
2024-11-04 16:26:01,852 - INFO - 
Analyzing AppConfig.swift:
2024-11-04 16:26:01,852 - INFO - 
Analyzing Date+Logging.swift:
2024-11-04 16:26:01,853 - INFO - 
Analyzing Entity+SwiftSplash.swift:
2024-11-04 16:26:01,853 - INFO - 
Analyzing ContentToolbar.swift:
2024-11-04 16:26:01,853 - INFO - 
Analyzing SplashScreenView.swift:
2024-11-04 16:26:01,853 - INFO - 
Analyzing TrackBuildingView+Rotation.swift:
2024-11-04 16:26:01,854 - INFO - 
Analyzing PieceShelfTrackButtonsView.swift:
2024-11-04 16:26:01,854 - INFO - 
Analyzing TrackBuildingView.swift:
2024-11-04 16:26:01,854 - INFO - 
Analyzing RideControlView.swift:
2024-11-04 16:26:01,854 - INFO - 
Analyzing TrackBuildingView+Snapping.swift:
2024-11-04 16:26:01,855 - INFO - 
Analyzing PieceShelfView.swift:
2024-11-04 16:26:01,855 - INFO - 
Analyzing ImageButton.swift:
2024-11-04 16:26:01,855 - INFO - 
Analyzing PlaceStartPieceView.swift:
2024-11-04 16:26:01,855 - INFO - 
Analyzing TrackBuildingView+Drag.swift:
2024-11-04 16:26:01,856 - INFO - 
Analyzing EditTrackPieceView.swift:
2024-11-04 16:26:01,856 - INFO - 
Analyzing ContentView.swift:
2024-11-04 16:26:01,856 - INFO - 
Analyzing Package.swift:
2024-11-04 16:26:01,856 - INFO - 
Analyzing SwiftSplashTrackPieces.swift:
2024-11-04 16:26:01,856 - INFO - 
Analyzing Float+Utilities.swift:
2024-11-04 16:26:01,856 - INFO - 
Analyzing Entity+Utilities.swift:
2024-11-04 16:26:01,856 - INFO - 
Analyzing SIMD+Utilities.swift:
2024-11-04 16:26:01,856 - INFO - 
Analyzing ConnectableStateComponent.swift:
2024-11-04 16:26:01,857 - INFO - 
Analyzing Connectable.swift:
2024-11-04 16:26:01,857 - INFO - 
Analyzing MarkerComponents.swift:
2024-11-04 16:26:01,860 - INFO - Found 19 Swift files
2024-11-04 16:26:01,860 - INFO - 
Analyzing DioramaView.swift:
2024-11-04 16:26:01,861 - INFO - 
Analyzing ViewModel.swift:
2024-11-04 16:26:01,865 - INFO - 
Analyzing DioramaApp.swift:
2024-11-04 16:26:01,865 - INFO - 
Analyzing FlockingComponent.swift:
2024-11-04 16:26:01,865 - INFO - 
Analyzing LearnMoreView.swift:
2024-11-04 16:26:01,865 - INFO - 
Analyzing ContentView.swift:
2024-11-04 16:26:01,865 - INFO - 
Analyzing Components.swift:
2024-11-04 16:26:01,865 - INFO - 
Analyzing FlockingSystem.swift:
2024-11-04 16:26:01,865 - INFO - 
Analyzing AttachmentsProvider.swift:
2024-11-04 16:26:01,865 - INFO - 
Analyzing Package.swift:
2024-11-04 16:26:01,865 - INFO - 
Analyzing PointOfInterestComponent.swift:
2024-11-04 16:26:01,866 - INFO - 
Analyzing BillboardSystem.swift:
2024-11-04 16:26:01,866 - INFO - 
Analyzing ShaderGraphMaterials.swift:
2024-11-04 16:26:01,866 - INFO - 
Analyzing RegionSpecificComponent.swift:
2024-11-04 16:26:01,866 - INFO - 
Analyzing TrailAnimationSystem.swift:
2024-11-04 16:26:01,866 - INFO - 
Analyzing BillboardComponent.swift:
2024-11-04 16:26:01,866 - INFO - 
Analyzing TrailComponent.swift:
2024-11-04 16:26:01,866 - INFO - 
Analyzing Style.swift:
2024-11-04 16:26:01,866 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 16:38:32,174 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 16:38:42,764 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 16:38:44,967 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 16:38:45,176 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 16:38:47,193 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/7b5bc90de8c3/CreatingA3DModelWithGesturesInVisionOS.zip
2024-11-04 16:38:48,097 - INFO - Downloaded project to data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 16:38:50,174 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c52a77b613db/ObjectPlacementExample.zip
2024-11-04 16:38:50,706 - INFO - Downloaded project to data/projects/placing-content-on-detected-planes
2024-11-04 16:38:53,691 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c615c66bc630/SwiftSplash.zip
2024-11-04 16:39:02,035 - INFO - Downloaded project to data/projects/swift-splash
2024-11-04 16:39:04,678 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/f60567d1cc7d/Diorama.zip
2024-11-04 16:39:13,579 - INFO - Downloaded project to data/projects/diorama
2024-11-04 16:39:13,593 - INFO - Found 30 Swift files
2024-11-04 16:39:13,593 - INFO - 
Analyzing AppState.swift:
2024-11-04 16:39:13,593 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 16:39:13,594 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 16:39:13,598 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 16:39:13,598 - INFO - 
Analyzing Package.swift:
2024-11-04 16:39:13,599 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 16:39:13,599 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 16:39:13,599 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 16:39:13,599 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 16:39:13,600 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 16:39:13,600 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 16:39:13,600 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 16:39:13,601 - INFO - 
Analyzing RobotData.swift:
2024-11-04 16:39:13,601 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 16:39:13,601 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 16:39:13,601 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 16:39:13,602 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 16:39:13,602 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 16:39:13,602 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 16:39:13,602 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 16:39:13,602 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 16:39:13,602 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 16:39:13,602 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 16:39:13,602 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 16:39:13,603 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 16:39:13,603 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 16:39:13,603 - INFO - 
Analyzing RobotView.swift:
2024-11-04 16:39:13,603 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 16:39:13,603 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 16:39:13,604 - INFO - 
Analyzing ContentView.swift:
2024-11-04 16:39:13,622 - INFO - Found 3 Swift files
2024-11-04 16:39:13,622 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 16:39:13,622 - INFO - 
Analyzing ShapesView.swift:
2024-11-04 16:39:13,623 - INFO - 
Analyzing ShapesView+Entities.swift:
2024-11-04 16:39:13,624 - INFO - Found 4 Swift files
2024-11-04 16:39:13,624 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 16:39:13,625 - INFO - 
Analyzing SIMD3.swift:
2024-11-04 16:39:13,625 - INFO - 
Analyzing CarView.swift:
2024-11-04 16:39:13,625 - INFO - 
Analyzing MainView.swift:
2024-11-04 16:39:13,626 - INFO - Found 19 Swift files
2024-11-04 16:39:13,626 - INFO - 
Analyzing ObjectPlacementApp.swift:
2024-11-04 16:39:13,627 - INFO - 
Analyzing AppState.swift:
2024-11-04 16:39:13,627 - INFO - 
Analyzing PlacementManager.swift:
2024-11-04 16:39:13,628 - INFO - 
Analyzing PlacementState.swift:
2024-11-04 16:39:13,628 - INFO - 
Analyzing PlaceableObject.swift:
2024-11-04 16:39:13,628 - INFO - 
Analyzing DragState.swift:
2024-11-04 16:39:13,628 - INFO - 
Analyzing PlaneProjector.swift:
2024-11-04 16:39:13,629 - INFO - 
Analyzing GeometryUtilities.swift:
2024-11-04 16:39:13,629 - INFO - 
Analyzing PersistenceManager.swift:
2024-11-04 16:39:13,629 - INFO - 
Analyzing PlaneAnchorHandler.swift:
2024-11-04 16:39:13,629 - INFO - 
Analyzing ModelLoader.swift:
2024-11-04 16:39:13,630 - INFO - 
Analyzing PlacementTooltip.swift:
2024-11-04 16:39:13,630 - INFO - 
Analyzing ObjectSelectionView.swift:
2024-11-04 16:39:13,630 - INFO - 
Analyzing HomeView.swift:
2024-11-04 16:39:13,630 - INFO - 
Analyzing InfoLabel.swift:
2024-11-04 16:39:13,630 - INFO - 
Analyzing DeleteButton.swift:
2024-11-04 16:39:13,630 - INFO - 
Analyzing ObjectPlacementMenuView.swift:
2024-11-04 16:39:13,631 - INFO - 
Analyzing TooltipView.swift:
2024-11-04 16:39:13,631 - INFO - 
Analyzing ObjectPlacementRealityView.swift:
2024-11-04 16:39:13,637 - INFO - Found 36 Swift files
2024-11-04 16:39:13,637 - INFO - 
Analyzing SwiftSplashApp.swift:
2024-11-04 16:39:13,638 - INFO - 
Analyzing AppState.swift:
2024-11-04 16:39:13,638 - INFO - 
Analyzing AppState+Phases.swift:
2024-11-04 16:39:13,638 - INFO - 
Analyzing Piece.swift:
2024-11-04 16:39:13,639 - INFO - 
Analyzing AppState+PieceSelection.swift:
2024-11-04 16:39:13,639 - INFO - 
Analyzing SoundEffects.swift:
2024-11-04 16:39:13,639 - INFO - 
Analyzing AppPhase.swift:
2024-11-04 16:39:13,639 - INFO - 
Analyzing AppState+RideRunning.swift:
2024-11-04 16:39:13,640 - INFO - 
Analyzing AppState+TrackUpdates.swift:
2024-11-04 16:39:13,640 - INFO - 
Analyzing AppState+PieceManagement.swift:
2024-11-04 16:39:13,640 - INFO - 
Analyzing AppState+Transparency.swift:
2024-11-04 16:39:13,640 - INFO - 
Analyzing AppState+PieceLoading.swift:
2024-11-04 16:39:13,641 - INFO - 
Analyzing AppConfig.swift:
2024-11-04 16:39:13,641 - INFO - 
Analyzing Date+Logging.swift:
2024-11-04 16:39:13,641 - INFO - 
Analyzing Entity+SwiftSplash.swift:
2024-11-04 16:39:13,641 - INFO - 
Analyzing ContentToolbar.swift:
2024-11-04 16:39:13,641 - INFO - 
Analyzing SplashScreenView.swift:
2024-11-04 16:39:13,641 - INFO - 
Analyzing TrackBuildingView+Rotation.swift:
2024-11-04 16:39:13,641 - INFO - 
Analyzing PieceShelfTrackButtonsView.swift:
2024-11-04 16:39:13,641 - INFO - 
Analyzing TrackBuildingView.swift:
2024-11-04 16:39:13,642 - INFO - 
Analyzing RideControlView.swift:
2024-11-04 16:39:13,642 - INFO - 
Analyzing TrackBuildingView+Snapping.swift:
2024-11-04 16:39:13,642 - INFO - 
Analyzing PieceShelfView.swift:
2024-11-04 16:39:13,642 - INFO - 
Analyzing ImageButton.swift:
2024-11-04 16:39:13,642 - INFO - 
Analyzing PlaceStartPieceView.swift:
2024-11-04 16:39:13,642 - INFO - 
Analyzing TrackBuildingView+Drag.swift:
2024-11-04 16:39:13,643 - INFO - 
Analyzing EditTrackPieceView.swift:
2024-11-04 16:39:13,643 - INFO - 
Analyzing ContentView.swift:
2024-11-04 16:39:13,643 - INFO - 
Analyzing Package.swift:
2024-11-04 16:39:13,643 - INFO - 
Analyzing SwiftSplashTrackPieces.swift:
2024-11-04 16:39:13,643 - INFO - 
Analyzing Float+Utilities.swift:
2024-11-04 16:39:13,643 - INFO - 
Analyzing Entity+Utilities.swift:
2024-11-04 16:39:13,643 - INFO - 
Analyzing SIMD+Utilities.swift:
2024-11-04 16:39:13,643 - INFO - 
Analyzing ConnectableStateComponent.swift:
2024-11-04 16:39:13,644 - INFO - 
Analyzing Connectable.swift:
2024-11-04 16:39:13,644 - INFO - 
Analyzing MarkerComponents.swift:
2024-11-04 16:39:13,647 - INFO - Found 19 Swift files
2024-11-04 16:39:13,647 - INFO - 
Analyzing DioramaView.swift:
2024-11-04 16:39:13,647 - INFO - 
Analyzing ViewModel.swift:
2024-11-04 16:39:13,648 - INFO - 
Analyzing DioramaApp.swift:
2024-11-04 16:39:13,648 - INFO - 
Analyzing FlockingComponent.swift:
2024-11-04 16:39:13,648 - INFO - 
Analyzing LearnMoreView.swift:
2024-11-04 16:39:13,648 - INFO - 
Analyzing ContentView.swift:
2024-11-04 16:39:13,648 - INFO - 
Analyzing Components.swift:
2024-11-04 16:39:13,648 - INFO - 
Analyzing FlockingSystem.swift:
2024-11-04 16:39:13,648 - INFO - 
Analyzing AttachmentsProvider.swift:
2024-11-04 16:39:13,648 - INFO - 
Analyzing Package.swift:
2024-11-04 16:39:13,648 - INFO - 
Analyzing PointOfInterestComponent.swift:
2024-11-04 16:39:13,649 - INFO - 
Analyzing BillboardSystem.swift:
2024-11-04 16:39:13,649 - INFO - 
Analyzing ShaderGraphMaterials.swift:
2024-11-04 16:39:13,649 - INFO - 
Analyzing RegionSpecificComponent.swift:
2024-11-04 16:39:13,649 - INFO - 
Analyzing TrailAnimationSystem.swift:
2024-11-04 16:39:13,649 - INFO - 
Analyzing BillboardComponent.swift:
2024-11-04 16:39:13,649 - INFO - 
Analyzing TrailComponent.swift:
2024-11-04 16:39:13,649 - INFO - 
Analyzing Style.swift:
2024-11-04 16:39:13,649 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 17:05:28,947 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 17:05:36,096 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 17:05:38,396 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 17:05:38,593 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 17:05:40,748 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/7b5bc90de8c3/CreatingA3DModelWithGesturesInVisionOS.zip
2024-11-04 17:05:41,728 - INFO - Downloaded project to data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 17:05:43,668 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c52a77b613db/ObjectPlacementExample.zip
2024-11-04 17:05:44,243 - INFO - Downloaded project to data/projects/placing-content-on-detected-planes
2024-11-04 17:05:46,447 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/a5cc9fac626e/Combining2DAnd3DViewsInAnImmersiveApp.zip
2024-11-04 17:05:46,929 - INFO - Downloaded project to data/projects/combining-2d-and-3d-views-in-an-immersive-app
2024-11-04 17:05:51,859 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c615c66bc630/SwiftSplash.zip
2024-11-04 17:06:01,871 - INFO - Downloaded project to data/projects/swift-splash
2024-11-04 17:06:04,060 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/f60567d1cc7d/Diorama.zip
2024-11-04 17:06:14,500 - INFO - Downloaded project to data/projects/diorama
2024-11-04 17:06:14,512 - INFO - Found 30 Swift files
2024-11-04 17:06:14,513 - INFO - 
Analyzing AppState.swift:
2024-11-04 17:06:14,513 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 17:06:14,514 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 17:06:14,514 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 17:06:14,514 - INFO - 
Analyzing Package.swift:
2024-11-04 17:06:14,514 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 17:06:14,515 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 17:06:14,515 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 17:06:14,515 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 17:06:14,515 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 17:06:14,516 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 17:06:14,516 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 17:06:14,516 - INFO - 
Analyzing RobotData.swift:
2024-11-04 17:06:14,516 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 17:06:14,517 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 17:06:14,517 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 17:06:14,517 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 17:06:14,517 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 17:06:14,517 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 17:06:14,517 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 17:06:14,517 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 17:06:14,518 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 17:06:14,518 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 17:06:14,518 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 17:06:14,518 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 17:06:14,518 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 17:06:14,518 - INFO - 
Analyzing RobotView.swift:
2024-11-04 17:06:14,518 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 17:06:14,518 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 17:06:14,519 - INFO - 
Analyzing ContentView.swift:
2024-11-04 17:06:14,536 - INFO - Found 3 Swift files
2024-11-04 17:06:14,536 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 17:06:14,537 - INFO - 
Analyzing ShapesView.swift:
2024-11-04 17:06:14,538 - INFO - 
Analyzing ShapesView+Entities.swift:
2024-11-04 17:06:14,540 - INFO - Found 4 Swift files
2024-11-04 17:06:14,540 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 17:06:14,540 - INFO - 
Analyzing SIMD3.swift:
2024-11-04 17:06:14,540 - INFO - 
Analyzing CarView.swift:
2024-11-04 17:06:14,540 - INFO - 
Analyzing MainView.swift:
2024-11-04 17:06:14,542 - INFO - Found 19 Swift files
2024-11-04 17:06:14,542 - INFO - 
Analyzing ObjectPlacementApp.swift:
2024-11-04 17:06:14,542 - INFO - 
Analyzing AppState.swift:
2024-11-04 17:06:14,543 - INFO - 
Analyzing PlacementManager.swift:
2024-11-04 17:06:14,543 - INFO - 
Analyzing PlacementState.swift:
2024-11-04 17:06:14,543 - INFO - 
Analyzing PlaceableObject.swift:
2024-11-04 17:06:14,544 - INFO - 
Analyzing DragState.swift:
2024-11-04 17:06:14,544 - INFO - 
Analyzing PlaneProjector.swift:
2024-11-04 17:06:14,544 - INFO - 
Analyzing GeometryUtilities.swift:
2024-11-04 17:06:14,545 - INFO - 
Analyzing PersistenceManager.swift:
2024-11-04 17:06:14,545 - INFO - 
Analyzing PlaneAnchorHandler.swift:
2024-11-04 17:06:14,549 - INFO - 
Analyzing ModelLoader.swift:
2024-11-04 17:06:14,549 - INFO - 
Analyzing PlacementTooltip.swift:
2024-11-04 17:06:14,550 - INFO - 
Analyzing ObjectSelectionView.swift:
2024-11-04 17:06:14,550 - INFO - 
Analyzing HomeView.swift:
2024-11-04 17:06:14,550 - INFO - 
Analyzing InfoLabel.swift:
2024-11-04 17:06:14,550 - INFO - 
Analyzing DeleteButton.swift:
2024-11-04 17:06:14,551 - INFO - 
Analyzing ObjectPlacementMenuView.swift:
2024-11-04 17:06:14,551 - INFO - 
Analyzing TooltipView.swift:
2024-11-04 17:06:14,551 - INFO - 
Analyzing ObjectPlacementRealityView.swift:
2024-11-04 17:06:14,557 - INFO - Found 11 Swift files
2024-11-04 17:06:14,557 - INFO - 
Analyzing RainbowView.swift:
2024-11-04 17:06:14,558 - INFO - 
Analyzing MultiDimensionalImmersiveContentApp.swift:
2024-11-04 17:06:14,558 - INFO - 
Analyzing RainbowModel.swift:
2024-11-04 17:06:14,558 - INFO - 
Analyzing Extensions.swift:
2024-11-04 17:06:14,558 - INFO - 
Analyzing UIViewArcRepresentable.swift:
2024-11-04 17:06:14,559 - INFO - 
Analyzing UIViewArcView.swift:
2024-11-04 17:06:14,559 - INFO - 
Analyzing SwiftUIArcView.swift:
2024-11-04 17:06:14,559 - INFO - 
Analyzing CALayerArcRepresentable.swift:
2024-11-04 17:06:14,559 - INFO - 
Analyzing CALayerArcView.swift:
2024-11-04 17:06:14,559 - INFO - 
Analyzing Package.swift:
2024-11-04 17:06:14,559 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 17:06:14,564 - INFO - Found 36 Swift files
2024-11-04 17:06:14,565 - INFO - 
Analyzing SwiftSplashApp.swift:
2024-11-04 17:06:14,565 - INFO - 
Analyzing AppState.swift:
2024-11-04 17:06:14,565 - INFO - 
Analyzing AppState+Phases.swift:
2024-11-04 17:06:14,565 - INFO - 
Analyzing Piece.swift:
2024-11-04 17:06:14,565 - INFO - 
Analyzing AppState+PieceSelection.swift:
2024-11-04 17:06:14,565 - INFO - 
Analyzing SoundEffects.swift:
2024-11-04 17:06:14,565 - INFO - 
Analyzing AppPhase.swift:
2024-11-04 17:06:14,565 - INFO - 
Analyzing AppState+RideRunning.swift:
2024-11-04 17:06:14,565 - INFO - 
Analyzing AppState+TrackUpdates.swift:
2024-11-04 17:06:14,565 - INFO - 
Analyzing AppState+PieceManagement.swift:
2024-11-04 17:06:14,566 - INFO - 
Analyzing AppState+Transparency.swift:
2024-11-04 17:06:14,566 - INFO - 
Analyzing AppState+PieceLoading.swift:
2024-11-04 17:06:14,566 - INFO - 
Analyzing AppConfig.swift:
2024-11-04 17:06:14,566 - INFO - 
Analyzing Date+Logging.swift:
2024-11-04 17:06:14,566 - INFO - 
Analyzing Entity+SwiftSplash.swift:
2024-11-04 17:06:14,566 - INFO - 
Analyzing ContentToolbar.swift:
2024-11-04 17:06:14,566 - INFO - 
Analyzing SplashScreenView.swift:
2024-11-04 17:06:14,566 - INFO - 
Analyzing TrackBuildingView+Rotation.swift:
2024-11-04 17:06:14,566 - INFO - 
Analyzing PieceShelfTrackButtonsView.swift:
2024-11-04 17:06:14,566 - INFO - 
Analyzing TrackBuildingView.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing RideControlView.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing TrackBuildingView+Snapping.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing PieceShelfView.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing ImageButton.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing PlaceStartPieceView.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing TrackBuildingView+Drag.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing EditTrackPieceView.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing ContentView.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing Package.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing SwiftSplashTrackPieces.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing Float+Utilities.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing Entity+Utilities.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing SIMD+Utilities.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing ConnectableStateComponent.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing Connectable.swift:
2024-11-04 17:06:14,567 - INFO - 
Analyzing MarkerComponents.swift:
2024-11-04 17:06:14,572 - INFO - Found 19 Swift files
2024-11-04 17:06:14,572 - INFO - 
Analyzing DioramaView.swift:
2024-11-04 17:06:14,572 - INFO - 
Analyzing ViewModel.swift:
2024-11-04 17:06:14,572 - INFO - 
Analyzing DioramaApp.swift:
2024-11-04 17:06:14,572 - INFO - 
Analyzing FlockingComponent.swift:
2024-11-04 17:06:14,572 - INFO - 
Analyzing LearnMoreView.swift:
2024-11-04 17:06:14,572 - INFO - 
Analyzing ContentView.swift:
2024-11-04 17:06:14,572 - INFO - 
Analyzing Components.swift:
2024-11-04 17:06:14,572 - INFO - 
Analyzing FlockingSystem.swift:
2024-11-04 17:06:14,572 - INFO - 
Analyzing AttachmentsProvider.swift:
2024-11-04 17:06:14,572 - INFO - 
Analyzing Package.swift:
2024-11-04 17:06:14,572 - INFO - 
Analyzing PointOfInterestComponent.swift:
2024-11-04 17:06:14,572 - INFO - 
Analyzing BillboardSystem.swift:
2024-11-04 17:06:14,573 - INFO - 
Analyzing ShaderGraphMaterials.swift:
2024-11-04 17:06:14,573 - INFO - 
Analyzing RegionSpecificComponent.swift:
2024-11-04 17:06:14,573 - INFO - 
Analyzing TrailAnimationSystem.swift:
2024-11-04 17:06:14,573 - INFO - 
Analyzing BillboardComponent.swift:
2024-11-04 17:06:14,573 - INFO - 
Analyzing TrailComponent.swift:
2024-11-04 17:06:14,573 - INFO - 
Analyzing Style.swift:
2024-11-04 17:06:14,573 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 17:13:43,609 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 17:13:55,332 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 17:13:58,007 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 17:13:58,201 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 17:14:00,704 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/7b5bc90de8c3/CreatingA3DModelWithGesturesInVisionOS.zip
2024-11-04 17:14:02,129 - INFO - Downloaded project to data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 17:14:04,075 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c52a77b613db/ObjectPlacementExample.zip
2024-11-04 17:14:04,302 - INFO - Downloaded project to data/projects/placing-content-on-detected-planes
2024-11-04 17:14:06,385 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/a5cc9fac626e/Combining2DAnd3DViewsInAnImmersiveApp.zip
2024-11-04 17:14:06,597 - INFO - Downloaded project to data/projects/combining-2d-and-3d-views-in-an-immersive-app
2024-11-04 17:14:09,613 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c615c66bc630/SwiftSplash.zip
2024-11-04 17:14:16,975 - INFO - Downloaded project to data/projects/swift-splash
2024-11-04 17:14:19,542 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/f60567d1cc7d/Diorama.zip
2024-11-04 17:14:29,749 - INFO - Downloaded project to data/projects/diorama
2024-11-04 17:14:29,762 - INFO - Found 30 Swift files
2024-11-04 17:14:29,763 - INFO - 
Analyzing AppState.swift:
2024-11-04 17:14:29,763 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 17:14:29,763 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 17:14:29,764 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 17:14:29,764 - INFO - 
Analyzing Package.swift:
2024-11-04 17:14:29,764 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 17:14:29,764 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 17:14:29,764 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 17:14:29,765 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 17:14:29,765 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 17:14:29,765 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 17:14:29,765 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 17:14:29,766 - INFO - 
Analyzing RobotData.swift:
2024-11-04 17:14:29,766 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 17:14:29,766 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 17:14:29,767 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 17:14:29,767 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 17:14:29,767 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 17:14:29,767 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 17:14:29,767 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 17:14:29,767 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 17:14:29,767 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 17:14:29,768 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 17:14:29,768 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 17:14:29,768 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 17:14:29,768 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 17:14:29,768 - INFO - 
Analyzing RobotView.swift:
2024-11-04 17:14:29,768 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 17:14:29,768 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 17:14:29,769 - INFO - 
Analyzing ContentView.swift:
2024-11-04 17:14:29,786 - INFO - Found 3 Swift files
2024-11-04 17:14:29,788 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 17:14:29,788 - INFO - 
Analyzing ShapesView.swift:
2024-11-04 17:14:29,789 - INFO - 
Analyzing ShapesView+Entities.swift:
2024-11-04 17:14:29,790 - INFO - Found 4 Swift files
2024-11-04 17:14:29,791 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 17:14:29,791 - INFO - 
Analyzing SIMD3.swift:
2024-11-04 17:14:29,791 - INFO - 
Analyzing CarView.swift:
2024-11-04 17:14:29,791 - INFO - 
Analyzing MainView.swift:
2024-11-04 17:14:29,793 - INFO - Found 19 Swift files
2024-11-04 17:14:29,793 - INFO - 
Analyzing ObjectPlacementApp.swift:
2024-11-04 17:14:29,793 - INFO - 
Analyzing AppState.swift:
2024-11-04 17:14:29,793 - INFO - 
Analyzing PlacementManager.swift:
2024-11-04 17:14:29,794 - INFO - 
Analyzing PlacementState.swift:
2024-11-04 17:14:29,794 - INFO - 
Analyzing PlaceableObject.swift:
2024-11-04 17:14:29,794 - INFO - 
Analyzing DragState.swift:
2024-11-04 17:14:29,795 - INFO - 
Analyzing PlaneProjector.swift:
2024-11-04 17:14:29,795 - INFO - 
Analyzing GeometryUtilities.swift:
2024-11-04 17:14:29,795 - INFO - 
Analyzing PersistenceManager.swift:
2024-11-04 17:14:29,795 - INFO - 
Analyzing PlaneAnchorHandler.swift:
2024-11-04 17:14:29,795 - INFO - 
Analyzing ModelLoader.swift:
2024-11-04 17:14:29,796 - INFO - 
Analyzing PlacementTooltip.swift:
2024-11-04 17:14:29,796 - INFO - 
Analyzing ObjectSelectionView.swift:
2024-11-04 17:14:29,796 - INFO - 
Analyzing HomeView.swift:
2024-11-04 17:14:29,796 - INFO - 
Analyzing InfoLabel.swift:
2024-11-04 17:14:29,796 - INFO - 
Analyzing DeleteButton.swift:
2024-11-04 17:14:29,796 - INFO - 
Analyzing ObjectPlacementMenuView.swift:
2024-11-04 17:14:29,797 - INFO - 
Analyzing TooltipView.swift:
2024-11-04 17:14:29,797 - INFO - 
Analyzing ObjectPlacementRealityView.swift:
2024-11-04 17:14:29,802 - INFO - Found 11 Swift files
2024-11-04 17:14:29,802 - INFO - 
Analyzing RainbowView.swift:
2024-11-04 17:14:29,803 - INFO - 
Analyzing MultiDimensionalImmersiveContentApp.swift:
2024-11-04 17:14:29,803 - INFO - 
Analyzing RainbowModel.swift:
2024-11-04 17:14:29,803 - INFO - 
Analyzing Extensions.swift:
2024-11-04 17:14:29,803 - INFO - 
Analyzing UIViewArcRepresentable.swift:
2024-11-04 17:14:29,803 - INFO - 
Analyzing UIViewArcView.swift:
2024-11-04 17:14:29,803 - INFO - 
Analyzing SwiftUIArcView.swift:
2024-11-04 17:14:29,804 - INFO - 
Analyzing CALayerArcRepresentable.swift:
2024-11-04 17:14:29,804 - INFO - 
Analyzing CALayerArcView.swift:
2024-11-04 17:14:29,804 - INFO - 
Analyzing Package.swift:
2024-11-04 17:14:29,804 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 17:14:29,809 - INFO - Found 36 Swift files
2024-11-04 17:14:29,810 - INFO - 
Analyzing SwiftSplashApp.swift:
2024-11-04 17:14:29,810 - INFO - 
Analyzing AppState.swift:
2024-11-04 17:14:29,810 - INFO - 
Analyzing AppState+Phases.swift:
2024-11-04 17:14:29,810 - INFO - 
Analyzing Piece.swift:
2024-11-04 17:14:29,810 - INFO - 
Analyzing AppState+PieceSelection.swift:
2024-11-04 17:14:29,810 - INFO - 
Analyzing SoundEffects.swift:
2024-11-04 17:14:29,810 - INFO - 
Analyzing AppPhase.swift:
2024-11-04 17:14:29,810 - INFO - 
Analyzing AppState+RideRunning.swift:
2024-11-04 17:14:29,811 - INFO - 
Analyzing AppState+TrackUpdates.swift:
2024-11-04 17:14:29,811 - INFO - 
Analyzing AppState+PieceManagement.swift:
2024-11-04 17:14:29,811 - INFO - 
Analyzing AppState+Transparency.swift:
2024-11-04 17:14:29,811 - INFO - 
Analyzing AppState+PieceLoading.swift:
2024-11-04 17:14:29,811 - INFO - 
Analyzing AppConfig.swift:
2024-11-04 17:14:29,811 - INFO - 
Analyzing Date+Logging.swift:
2024-11-04 17:14:29,811 - INFO - 
Analyzing Entity+SwiftSplash.swift:
2024-11-04 17:14:29,811 - INFO - 
Analyzing ContentToolbar.swift:
2024-11-04 17:14:29,811 - INFO - 
Analyzing SplashScreenView.swift:
2024-11-04 17:14:29,811 - INFO - 
Analyzing TrackBuildingView+Rotation.swift:
2024-11-04 17:14:29,812 - INFO - 
Analyzing PieceShelfTrackButtonsView.swift:
2024-11-04 17:14:29,812 - INFO - 
Analyzing TrackBuildingView.swift:
2024-11-04 17:14:29,812 - INFO - 
Analyzing RideControlView.swift:
2024-11-04 17:14:29,812 - INFO - 
Analyzing TrackBuildingView+Snapping.swift:
2024-11-04 17:14:29,812 - INFO - 
Analyzing PieceShelfView.swift:
2024-11-04 17:14:29,812 - INFO - 
Analyzing ImageButton.swift:
2024-11-04 17:14:29,812 - INFO - 
Analyzing PlaceStartPieceView.swift:
2024-11-04 17:14:29,812 - INFO - 
Analyzing TrackBuildingView+Drag.swift:
2024-11-04 17:14:29,812 - INFO - 
Analyzing EditTrackPieceView.swift:
2024-11-04 17:14:29,812 - INFO - 
Analyzing ContentView.swift:
2024-11-04 17:14:29,813 - INFO - 
Analyzing Package.swift:
2024-11-04 17:14:29,813 - INFO - 
Analyzing SwiftSplashTrackPieces.swift:
2024-11-04 17:14:29,813 - INFO - 
Analyzing Float+Utilities.swift:
2024-11-04 17:14:29,813 - INFO - 
Analyzing Entity+Utilities.swift:
2024-11-04 17:14:29,813 - INFO - 
Analyzing SIMD+Utilities.swift:
2024-11-04 17:14:29,813 - INFO - 
Analyzing ConnectableStateComponent.swift:
2024-11-04 17:14:29,813 - INFO - 
Analyzing Connectable.swift:
2024-11-04 17:14:29,813 - INFO - 
Analyzing MarkerComponents.swift:
2024-11-04 17:14:29,819 - INFO - Found 19 Swift files
2024-11-04 17:14:29,819 - INFO - 
Analyzing DioramaView.swift:
2024-11-04 17:14:29,819 - INFO - 
Analyzing ViewModel.swift:
2024-11-04 17:14:29,819 - INFO - 
Analyzing DioramaApp.swift:
2024-11-04 17:14:29,819 - INFO - 
Analyzing FlockingComponent.swift:
2024-11-04 17:14:29,819 - INFO - 
Analyzing LearnMoreView.swift:
2024-11-04 17:14:29,819 - INFO - 
Analyzing ContentView.swift:
2024-11-04 17:14:29,819 - INFO - 
Analyzing Components.swift:
2024-11-04 17:14:29,819 - INFO - 
Analyzing FlockingSystem.swift:
2024-11-04 17:14:29,819 - INFO - 
Analyzing AttachmentsProvider.swift:
2024-11-04 17:14:29,819 - INFO - 
Analyzing Package.swift:
2024-11-04 17:14:29,820 - INFO - 
Analyzing PointOfInterestComponent.swift:
2024-11-04 17:14:29,820 - INFO - 
Analyzing BillboardSystem.swift:
2024-11-04 17:14:29,820 - INFO - 
Analyzing ShaderGraphMaterials.swift:
2024-11-04 17:14:29,820 - INFO - 
Analyzing RegionSpecificComponent.swift:
2024-11-04 17:14:29,820 - INFO - 
Analyzing TrailAnimationSystem.swift:
2024-11-04 17:14:29,820 - INFO - 
Analyzing BillboardComponent.swift:
2024-11-04 17:14:29,820 - INFO - 
Analyzing TrailComponent.swift:
2024-11-04 17:14:29,820 - INFO - 
Analyzing Style.swift:
2024-11-04 17:14:29,820 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 17:16:18,090 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 17:16:23,713 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 17:16:26,104 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 17:16:26,306 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 17:16:28,416 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/7b5bc90de8c3/CreatingA3DModelWithGesturesInVisionOS.zip
2024-11-04 17:16:29,460 - INFO - Downloaded project to data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 17:16:31,355 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c52a77b613db/ObjectPlacementExample.zip
2024-11-04 17:16:31,636 - INFO - Downloaded project to data/projects/placing-content-on-detected-planes
2024-11-04 17:16:34,279 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/a5cc9fac626e/Combining2DAnd3DViewsInAnImmersiveApp.zip
2024-11-04 17:16:34,735 - INFO - Downloaded project to data/projects/combining-2d-and-3d-views-in-an-immersive-app
2024-11-04 17:16:37,706 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c615c66bc630/SwiftSplash.zip
2024-11-04 17:16:43,046 - INFO - Downloaded project to data/projects/swift-splash
2024-11-04 17:16:45,403 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/f60567d1cc7d/Diorama.zip
2024-11-04 17:16:53,518 - INFO - Downloaded project to data/projects/diorama
2024-11-04 17:16:53,531 - INFO - Found 30 Swift files
2024-11-04 17:16:53,532 - INFO - 
Analyzing AppState.swift:
2024-11-04 17:16:53,532 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 17:16:53,532 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 17:16:53,533 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 17:16:53,533 - INFO - 
Analyzing Package.swift:
2024-11-04 17:16:53,533 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 17:16:53,533 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 17:16:53,534 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 17:16:53,534 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 17:16:53,534 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 17:16:53,538 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 17:16:53,539 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 17:16:53,539 - INFO - 
Analyzing RobotData.swift:
2024-11-04 17:16:53,539 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 17:16:53,539 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 17:16:53,540 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 17:16:53,540 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 17:16:53,540 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 17:16:53,541 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 17:16:53,541 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 17:16:53,541 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 17:16:53,541 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 17:16:53,541 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 17:16:53,541 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 17:16:53,541 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 17:16:53,541 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 17:16:53,542 - INFO - 
Analyzing RobotView.swift:
2024-11-04 17:16:53,542 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 17:16:53,542 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 17:16:53,542 - INFO - 
Analyzing ContentView.swift:
2024-11-04 17:16:53,561 - INFO - Found 3 Swift files
2024-11-04 17:16:53,562 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 17:16:53,562 - INFO - 
Analyzing ShapesView.swift:
2024-11-04 17:16:53,563 - INFO - 
Analyzing ShapesView+Entities.swift:
2024-11-04 17:16:53,565 - INFO - Found 4 Swift files
2024-11-04 17:16:53,565 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 17:16:53,565 - INFO - 
Analyzing SIMD3.swift:
2024-11-04 17:16:53,565 - INFO - 
Analyzing CarView.swift:
2024-11-04 17:16:53,565 - INFO - 
Analyzing MainView.swift:
2024-11-04 17:16:53,567 - INFO - Found 19 Swift files
2024-11-04 17:16:53,567 - INFO - 
Analyzing ObjectPlacementApp.swift:
2024-11-04 17:16:53,567 - INFO - 
Analyzing AppState.swift:
2024-11-04 17:16:53,568 - INFO - 
Analyzing PlacementManager.swift:
2024-11-04 17:16:53,568 - INFO - 
Analyzing PlacementState.swift:
2024-11-04 17:16:53,568 - INFO - 
Analyzing PlaceableObject.swift:
2024-11-04 17:16:53,569 - INFO - 
Analyzing DragState.swift:
2024-11-04 17:16:53,569 - INFO - 
Analyzing PlaneProjector.swift:
2024-11-04 17:16:53,569 - INFO - 
Analyzing GeometryUtilities.swift:
2024-11-04 17:16:53,569 - INFO - 
Analyzing PersistenceManager.swift:
2024-11-04 17:16:53,570 - INFO - 
Analyzing PlaneAnchorHandler.swift:
2024-11-04 17:16:53,570 - INFO - 
Analyzing ModelLoader.swift:
2024-11-04 17:16:53,570 - INFO - 
Analyzing PlacementTooltip.swift:
2024-11-04 17:16:53,570 - INFO - 
Analyzing ObjectSelectionView.swift:
2024-11-04 17:16:53,570 - INFO - 
Analyzing HomeView.swift:
2024-11-04 17:16:53,571 - INFO - 
Analyzing InfoLabel.swift:
2024-11-04 17:16:53,571 - INFO - 
Analyzing DeleteButton.swift:
2024-11-04 17:16:53,575 - INFO - 
Analyzing ObjectPlacementMenuView.swift:
2024-11-04 17:16:53,575 - INFO - 
Analyzing TooltipView.swift:
2024-11-04 17:16:53,575 - INFO - 
Analyzing ObjectPlacementRealityView.swift:
2024-11-04 17:16:53,581 - INFO - Found 11 Swift files
2024-11-04 17:16:53,581 - INFO - 
Analyzing RainbowView.swift:
2024-11-04 17:16:53,582 - INFO - 
Analyzing MultiDimensionalImmersiveContentApp.swift:
2024-11-04 17:16:53,582 - INFO - 
Analyzing RainbowModel.swift:
2024-11-04 17:16:53,582 - INFO - 
Analyzing Extensions.swift:
2024-11-04 17:16:53,583 - INFO - 
Analyzing UIViewArcRepresentable.swift:
2024-11-04 17:16:53,583 - INFO - 
Analyzing UIViewArcView.swift:
2024-11-04 17:16:53,583 - INFO - 
Analyzing SwiftUIArcView.swift:
2024-11-04 17:16:53,583 - INFO - 
Analyzing CALayerArcRepresentable.swift:
2024-11-04 17:16:53,583 - INFO - 
Analyzing CALayerArcView.swift:
2024-11-04 17:16:53,583 - INFO - 
Analyzing Package.swift:
2024-11-04 17:16:53,583 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 17:16:53,588 - INFO - Found 36 Swift files
2024-11-04 17:16:53,590 - INFO - 
Analyzing SwiftSplashApp.swift:
2024-11-04 17:16:53,590 - INFO - 
Analyzing AppState.swift:
2024-11-04 17:16:53,590 - INFO - 
Analyzing AppState+Phases.swift:
2024-11-04 17:16:53,590 - INFO - 
Analyzing Piece.swift:
2024-11-04 17:16:53,591 - INFO - 
Analyzing AppState+PieceSelection.swift:
2024-11-04 17:16:53,591 - INFO - 
Analyzing SoundEffects.swift:
2024-11-04 17:16:53,591 - INFO - 
Analyzing AppPhase.swift:
2024-11-04 17:16:53,591 - INFO - 
Analyzing AppState+RideRunning.swift:
2024-11-04 17:16:53,591 - INFO - 
Analyzing AppState+TrackUpdates.swift:
2024-11-04 17:16:53,591 - INFO - 
Analyzing AppState+PieceManagement.swift:
2024-11-04 17:16:53,591 - INFO - 
Analyzing AppState+Transparency.swift:
2024-11-04 17:16:53,591 - INFO - 
Analyzing AppState+PieceLoading.swift:
2024-11-04 17:16:53,591 - INFO - 
Analyzing AppConfig.swift:
2024-11-04 17:16:53,592 - INFO - 
Analyzing Date+Logging.swift:
2024-11-04 17:16:53,592 - INFO - 
Analyzing Entity+SwiftSplash.swift:
2024-11-04 17:16:53,592 - INFO - 
Analyzing ContentToolbar.swift:
2024-11-04 17:16:53,592 - INFO - 
Analyzing SplashScreenView.swift:
2024-11-04 17:16:53,592 - INFO - 
Analyzing TrackBuildingView+Rotation.swift:
2024-11-04 17:16:53,593 - INFO - 
Analyzing PieceShelfTrackButtonsView.swift:
2024-11-04 17:16:53,593 - INFO - 
Analyzing TrackBuildingView.swift:
2024-11-04 17:16:53,593 - INFO - 
Analyzing RideControlView.swift:
2024-11-04 17:16:53,593 - INFO - 
Analyzing TrackBuildingView+Snapping.swift:
2024-11-04 17:16:53,593 - INFO - 
Analyzing PieceShelfView.swift:
2024-11-04 17:16:53,593 - INFO - 
Analyzing ImageButton.swift:
2024-11-04 17:16:53,593 - INFO - 
Analyzing PlaceStartPieceView.swift:
2024-11-04 17:16:53,593 - INFO - 
Analyzing TrackBuildingView+Drag.swift:
2024-11-04 17:16:53,593 - INFO - 
Analyzing EditTrackPieceView.swift:
2024-11-04 17:16:53,593 - INFO - 
Analyzing ContentView.swift:
2024-11-04 17:16:53,593 - INFO - 
Analyzing Package.swift:
2024-11-04 17:16:53,594 - INFO - 
Analyzing SwiftSplashTrackPieces.swift:
2024-11-04 17:16:53,594 - INFO - 
Analyzing Float+Utilities.swift:
2024-11-04 17:16:53,594 - INFO - 
Analyzing Entity+Utilities.swift:
2024-11-04 17:16:53,594 - INFO - 
Analyzing SIMD+Utilities.swift:
2024-11-04 17:16:53,594 - INFO - 
Analyzing ConnectableStateComponent.swift:
2024-11-04 17:16:53,594 - INFO - 
Analyzing Connectable.swift:
2024-11-04 17:16:53,594 - INFO - 
Analyzing MarkerComponents.swift:
2024-11-04 17:16:53,597 - INFO - Found 19 Swift files
2024-11-04 17:16:53,597 - INFO - 
Analyzing DioramaView.swift:
2024-11-04 17:16:53,597 - INFO - 
Analyzing ViewModel.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing DioramaApp.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing FlockingComponent.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing LearnMoreView.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing ContentView.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing Components.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing FlockingSystem.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing AttachmentsProvider.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing Package.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing PointOfInterestComponent.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing BillboardSystem.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing ShaderGraphMaterials.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing RegionSpecificComponent.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing TrailAnimationSystem.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing BillboardComponent.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing TrailComponent.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing Style.swift:
2024-11-04 17:16:53,598 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 17:29:36,243 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 17:29:44,071 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 17:29:46,599 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 17:29:46,774 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 17:29:49,062 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/7b5bc90de8c3/CreatingA3DModelWithGesturesInVisionOS.zip
2024-11-04 17:29:49,990 - INFO - Downloaded project to data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 17:29:51,938 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c52a77b613db/ObjectPlacementExample.zip
2024-11-04 17:29:52,151 - INFO - Downloaded project to data/projects/placing-content-on-detected-planes
2024-11-04 17:29:54,356 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/a5cc9fac626e/Combining2DAnd3DViewsInAnImmersiveApp.zip
2024-11-04 17:29:54,624 - INFO - Downloaded project to data/projects/combining-2d-and-3d-views-in-an-immersive-app
2024-11-04 17:29:58,080 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c615c66bc630/SwiftSplash.zip
2024-11-04 17:30:07,919 - INFO - Downloaded project to data/projects/swift-splash
2024-11-04 17:30:10,091 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/f60567d1cc7d/Diorama.zip
2024-11-04 17:30:16,078 - INFO - Downloaded project to data/projects/diorama
2024-11-04 17:30:16,091 - INFO - Found 30 Swift files
2024-11-04 17:30:16,093 - INFO - 
Analyzing AppState.swift:
2024-11-04 17:30:16,093 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 17:30:16,093 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 17:30:16,093 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 17:30:16,093 - INFO - 
Analyzing Package.swift:
2024-11-04 17:30:16,094 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 17:30:16,094 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 17:30:16,094 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 17:30:16,094 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 17:30:16,094 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 17:30:16,094 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 17:30:16,094 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 17:30:16,094 - INFO - 
Analyzing RobotData.swift:
2024-11-04 17:30:16,094 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 17:30:16,094 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing RobotView.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 17:30:16,095 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 17:30:16,096 - INFO - 
Analyzing ContentView.swift:
2024-11-04 17:30:16,113 - INFO - Found 3 Swift files
2024-11-04 17:30:16,114 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 17:30:16,114 - INFO - 
Analyzing ShapesView.swift:
2024-11-04 17:30:16,114 - INFO - 
Analyzing ShapesView+Entities.swift:
2024-11-04 17:30:16,116 - INFO - Found 4 Swift files
2024-11-04 17:30:16,116 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 17:30:16,116 - INFO - 
Analyzing SIMD3.swift:
2024-11-04 17:30:16,116 - INFO - 
Analyzing CarView.swift:
2024-11-04 17:30:16,116 - INFO - 
Analyzing MainView.swift:
2024-11-04 17:30:16,117 - INFO - Found 19 Swift files
2024-11-04 17:30:16,117 - INFO - 
Analyzing ObjectPlacementApp.swift:
2024-11-04 17:30:16,117 - INFO - 
Analyzing AppState.swift:
2024-11-04 17:30:16,117 - INFO - 
Analyzing PlacementManager.swift:
2024-11-04 17:30:16,118 - INFO - 
Analyzing PlacementState.swift:
2024-11-04 17:30:16,118 - INFO - 
Analyzing PlaceableObject.swift:
2024-11-04 17:30:16,118 - INFO - 
Analyzing DragState.swift:
2024-11-04 17:30:16,118 - INFO - 
Analyzing PlaneProjector.swift:
2024-11-04 17:30:16,118 - INFO - 
Analyzing GeometryUtilities.swift:
2024-11-04 17:30:16,118 - INFO - 
Analyzing PersistenceManager.swift:
2024-11-04 17:30:16,119 - INFO - 
Analyzing PlaneAnchorHandler.swift:
2024-11-04 17:30:16,119 - INFO - 
Analyzing ModelLoader.swift:
2024-11-04 17:30:16,119 - INFO - 
Analyzing PlacementTooltip.swift:
2024-11-04 17:30:16,119 - INFO - 
Analyzing ObjectSelectionView.swift:
2024-11-04 17:30:16,119 - INFO - 
Analyzing HomeView.swift:
2024-11-04 17:30:16,119 - INFO - 
Analyzing InfoLabel.swift:
2024-11-04 17:30:16,119 - INFO - 
Analyzing DeleteButton.swift:
2024-11-04 17:30:16,119 - INFO - 
Analyzing ObjectPlacementMenuView.swift:
2024-11-04 17:30:16,119 - INFO - 
Analyzing TooltipView.swift:
2024-11-04 17:30:16,119 - INFO - 
Analyzing ObjectPlacementRealityView.swift:
2024-11-04 17:30:16,125 - INFO - Found 11 Swift files
2024-11-04 17:30:16,125 - INFO - 
Analyzing RainbowView.swift:
2024-11-04 17:30:16,125 - INFO - 
Analyzing MultiDimensionalImmersiveContentApp.swift:
2024-11-04 17:30:16,125 - INFO - 
Analyzing RainbowModel.swift:
2024-11-04 17:30:16,125 - INFO - 
Analyzing Extensions.swift:
2024-11-04 17:30:16,125 - INFO - 
Analyzing UIViewArcRepresentable.swift:
2024-11-04 17:30:16,125 - INFO - 
Analyzing UIViewArcView.swift:
2024-11-04 17:30:16,125 - INFO - 
Analyzing SwiftUIArcView.swift:
2024-11-04 17:30:16,125 - INFO - 
Analyzing CALayerArcRepresentable.swift:
2024-11-04 17:30:16,125 - INFO - 
Analyzing CALayerArcView.swift:
2024-11-04 17:30:16,125 - INFO - 
Analyzing Package.swift:
2024-11-04 17:30:16,126 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 17:30:16,130 - INFO - Found 36 Swift files
2024-11-04 17:30:16,132 - INFO - 
Analyzing SwiftSplashApp.swift:
2024-11-04 17:30:16,132 - INFO - 
Analyzing AppState.swift:
2024-11-04 17:30:16,132 - INFO - 
Analyzing AppState+Phases.swift:
2024-11-04 17:30:16,132 - INFO - 
Analyzing Piece.swift:
2024-11-04 17:30:16,132 - INFO - 
Analyzing AppState+PieceSelection.swift:
2024-11-04 17:30:16,132 - INFO - 
Analyzing SoundEffects.swift:
2024-11-04 17:30:16,132 - INFO - 
Analyzing AppPhase.swift:
2024-11-04 17:30:16,132 - INFO - 
Analyzing AppState+RideRunning.swift:
2024-11-04 17:30:16,133 - INFO - 
Analyzing AppState+TrackUpdates.swift:
2024-11-04 17:30:16,133 - INFO - 
Analyzing AppState+PieceManagement.swift:
2024-11-04 17:30:16,133 - INFO - 
Analyzing AppState+Transparency.swift:
2024-11-04 17:30:16,133 - INFO - 
Analyzing AppState+PieceLoading.swift:
2024-11-04 17:30:16,133 - INFO - 
Analyzing AppConfig.swift:
2024-11-04 17:30:16,133 - INFO - 
Analyzing Date+Logging.swift:
2024-11-04 17:30:16,133 - INFO - 
Analyzing Entity+SwiftSplash.swift:
2024-11-04 17:30:16,133 - INFO - 
Analyzing ContentToolbar.swift:
2024-11-04 17:30:16,133 - INFO - 
Analyzing SplashScreenView.swift:
2024-11-04 17:30:16,133 - INFO - 
Analyzing TrackBuildingView+Rotation.swift:
2024-11-04 17:30:16,134 - INFO - 
Analyzing PieceShelfTrackButtonsView.swift:
2024-11-04 17:30:16,134 - INFO - 
Analyzing TrackBuildingView.swift:
2024-11-04 17:30:16,134 - INFO - 
Analyzing RideControlView.swift:
2024-11-04 17:30:16,134 - INFO - 
Analyzing TrackBuildingView+Snapping.swift:
2024-11-04 17:30:16,134 - INFO - 
Analyzing PieceShelfView.swift:
2024-11-04 17:30:16,134 - INFO - 
Analyzing ImageButton.swift:
2024-11-04 17:30:16,134 - INFO - 
Analyzing PlaceStartPieceView.swift:
2024-11-04 17:30:16,134 - INFO - 
Analyzing TrackBuildingView+Drag.swift:
2024-11-04 17:30:16,134 - INFO - 
Analyzing EditTrackPieceView.swift:
2024-11-04 17:30:16,134 - INFO - 
Analyzing ContentView.swift:
2024-11-04 17:30:16,134 - INFO - 
Analyzing Package.swift:
2024-11-04 17:30:16,135 - INFO - 
Analyzing SwiftSplashTrackPieces.swift:
2024-11-04 17:30:16,135 - INFO - 
Analyzing Float+Utilities.swift:
2024-11-04 17:30:16,135 - INFO - 
Analyzing Entity+Utilities.swift:
2024-11-04 17:30:16,135 - INFO - 
Analyzing SIMD+Utilities.swift:
2024-11-04 17:30:16,135 - INFO - 
Analyzing ConnectableStateComponent.swift:
2024-11-04 17:30:16,135 - INFO - 
Analyzing Connectable.swift:
2024-11-04 17:30:16,135 - INFO - 
Analyzing MarkerComponents.swift:
2024-11-04 17:30:16,139 - INFO - Found 19 Swift files
2024-11-04 17:30:16,139 - INFO - 
Analyzing DioramaView.swift:
2024-11-04 17:30:16,139 - INFO - 
Analyzing ViewModel.swift:
2024-11-04 17:30:16,139 - INFO - 
Analyzing DioramaApp.swift:
2024-11-04 17:30:16,139 - INFO - 
Analyzing FlockingComponent.swift:
2024-11-04 17:30:16,139 - INFO - 
Analyzing LearnMoreView.swift:
2024-11-04 17:30:16,139 - INFO - 
Analyzing ContentView.swift:
2024-11-04 17:30:16,139 - INFO - 
Analyzing Components.swift:
2024-11-04 17:30:16,139 - INFO - 
Analyzing FlockingSystem.swift:
2024-11-04 17:30:16,140 - INFO - 
Analyzing AttachmentsProvider.swift:
2024-11-04 17:30:16,140 - INFO - 
Analyzing Package.swift:
2024-11-04 17:30:16,140 - INFO - 
Analyzing PointOfInterestComponent.swift:
2024-11-04 17:30:16,140 - INFO - 
Analyzing BillboardSystem.swift:
2024-11-04 17:30:16,140 - INFO - 
Analyzing ShaderGraphMaterials.swift:
2024-11-04 17:30:16,140 - INFO - 
Analyzing RegionSpecificComponent.swift:
2024-11-04 17:30:16,140 - INFO - 
Analyzing TrailAnimationSystem.swift:
2024-11-04 17:30:16,140 - INFO - 
Analyzing BillboardComponent.swift:
2024-11-04 17:30:16,140 - INFO - 
Analyzing TrailComponent.swift:
2024-11-04 17:30:16,140 - INFO - 
Analyzing Style.swift:
2024-11-04 17:30:16,140 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 18:01:01,885 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 18:01:09,691 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 18:01:13,842 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 18:01:14,056 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 18:01:16,013 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/7b5bc90de8c3/CreatingA3DModelWithGesturesInVisionOS.zip
2024-11-04 18:01:16,871 - INFO - Downloaded project to data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 18:01:18,762 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c52a77b613db/ObjectPlacementExample.zip
2024-11-04 18:01:18,991 - INFO - Downloaded project to data/projects/placing-content-on-detected-planes
2024-11-04 18:01:21,130 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/a5cc9fac626e/Combining2DAnd3DViewsInAnImmersiveApp.zip
2024-11-04 18:01:21,329 - INFO - Downloaded project to data/projects/combining-2d-and-3d-views-in-an-immersive-app
2024-11-04 18:01:24,261 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c615c66bc630/SwiftSplash.zip
2024-11-04 18:01:29,331 - INFO - Downloaded project to data/projects/swift-splash
2024-11-04 18:01:31,619 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/f60567d1cc7d/Diorama.zip
2024-11-04 18:01:42,016 - INFO - Downloaded project to data/projects/diorama
2024-11-04 18:01:42,029 - INFO - Found 30 Swift files
2024-11-04 18:01:42,029 - INFO - 
Analyzing AppState.swift:
2024-11-04 18:01:42,029 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 18:01:42,030 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 18:01:42,030 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 18:01:42,030 - INFO - 
Analyzing Package.swift:
2024-11-04 18:01:42,030 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 18:01:42,031 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 18:01:42,031 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 18:01:42,031 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 18:01:42,032 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 18:01:42,032 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 18:01:42,032 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 18:01:42,032 - INFO - 
Analyzing RobotData.swift:
2024-11-04 18:01:42,033 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 18:01:42,033 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 18:01:42,033 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 18:01:42,034 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 18:01:42,034 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 18:01:42,034 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 18:01:42,034 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 18:01:42,034 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 18:01:42,038 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 18:01:42,039 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 18:01:42,039 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 18:01:42,039 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 18:01:42,040 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 18:01:42,040 - INFO - 
Analyzing RobotView.swift:
2024-11-04 18:01:42,041 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 18:01:42,041 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 18:01:42,041 - INFO - 
Analyzing ContentView.swift:
2024-11-04 18:01:42,058 - INFO - Found 3 Swift files
2024-11-04 18:01:42,061 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 18:01:42,061 - INFO - 
Analyzing ShapesView.swift:
2024-11-04 18:01:42,061 - INFO - 
Analyzing ShapesView+Entities.swift:
2024-11-04 18:01:42,063 - INFO - Found 4 Swift files
2024-11-04 18:01:42,063 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 18:01:42,063 - INFO - 
Analyzing SIMD3.swift:
2024-11-04 18:01:42,063 - INFO - 
Analyzing CarView.swift:
2024-11-04 18:01:42,064 - INFO - 
Analyzing MainView.swift:
2024-11-04 18:01:42,065 - INFO - Found 19 Swift files
2024-11-04 18:01:42,065 - INFO - 
Analyzing ObjectPlacementApp.swift:
2024-11-04 18:01:42,066 - INFO - 
Analyzing AppState.swift:
2024-11-04 18:01:42,066 - INFO - 
Analyzing PlacementManager.swift:
2024-11-04 18:01:42,067 - INFO - 
Analyzing PlacementState.swift:
2024-11-04 18:01:42,067 - INFO - 
Analyzing PlaceableObject.swift:
2024-11-04 18:01:42,067 - INFO - 
Analyzing DragState.swift:
2024-11-04 18:01:42,067 - INFO - 
Analyzing PlaneProjector.swift:
2024-11-04 18:01:42,068 - INFO - 
Analyzing GeometryUtilities.swift:
2024-11-04 18:01:42,068 - INFO - 
Analyzing PersistenceManager.swift:
2024-11-04 18:01:42,068 - INFO - 
Analyzing PlaneAnchorHandler.swift:
2024-11-04 18:01:42,068 - INFO - 
Analyzing ModelLoader.swift:
2024-11-04 18:01:42,069 - INFO - 
Analyzing PlacementTooltip.swift:
2024-11-04 18:01:42,069 - INFO - 
Analyzing ObjectSelectionView.swift:
2024-11-04 18:01:42,069 - INFO - 
Analyzing HomeView.swift:
2024-11-04 18:01:42,069 - INFO - 
Analyzing InfoLabel.swift:
2024-11-04 18:01:42,069 - INFO - 
Analyzing DeleteButton.swift:
2024-11-04 18:01:42,069 - INFO - 
Analyzing ObjectPlacementMenuView.swift:
2024-11-04 18:01:42,069 - INFO - 
Analyzing TooltipView.swift:
2024-11-04 18:01:42,069 - INFO - 
Analyzing ObjectPlacementRealityView.swift:
2024-11-04 18:01:42,075 - INFO - Found 11 Swift files
2024-11-04 18:01:42,075 - INFO - 
Analyzing RainbowView.swift:
2024-11-04 18:01:42,075 - INFO - 
Analyzing MultiDimensionalImmersiveContentApp.swift:
2024-11-04 18:01:42,075 - INFO - 
Analyzing RainbowModel.swift:
2024-11-04 18:01:42,076 - INFO - 
Analyzing Extensions.swift:
2024-11-04 18:01:42,076 - INFO - 
Analyzing UIViewArcRepresentable.swift:
2024-11-04 18:01:42,076 - INFO - 
Analyzing UIViewArcView.swift:
2024-11-04 18:01:42,076 - INFO - 
Analyzing SwiftUIArcView.swift:
2024-11-04 18:01:42,080 - INFO - 
Analyzing CALayerArcRepresentable.swift:
2024-11-04 18:01:42,080 - INFO - 
Analyzing CALayerArcView.swift:
2024-11-04 18:01:42,081 - INFO - 
Analyzing Package.swift:
2024-11-04 18:01:42,081 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 18:01:42,086 - INFO - Found 36 Swift files
2024-11-04 18:01:42,086 - INFO - 
Analyzing SwiftSplashApp.swift:
2024-11-04 18:01:42,086 - INFO - 
Analyzing AppState.swift:
2024-11-04 18:01:42,087 - INFO - 
Analyzing AppState+Phases.swift:
2024-11-04 18:01:42,087 - INFO - 
Analyzing Piece.swift:
2024-11-04 18:01:42,087 - INFO - 
Analyzing AppState+PieceSelection.swift:
2024-11-04 18:01:42,087 - INFO - 
Analyzing SoundEffects.swift:
2024-11-04 18:01:42,087 - INFO - 
Analyzing AppPhase.swift:
2024-11-04 18:01:42,088 - INFO - 
Analyzing AppState+RideRunning.swift:
2024-11-04 18:01:42,088 - INFO - 
Analyzing AppState+TrackUpdates.swift:
2024-11-04 18:01:42,088 - INFO - 
Analyzing AppState+PieceManagement.swift:
2024-11-04 18:01:42,089 - INFO - 
Analyzing AppState+Transparency.swift:
2024-11-04 18:01:42,089 - INFO - 
Analyzing AppState+PieceLoading.swift:
2024-11-04 18:01:42,089 - INFO - 
Analyzing AppConfig.swift:
2024-11-04 18:01:42,089 - INFO - 
Analyzing Date+Logging.swift:
2024-11-04 18:01:42,089 - INFO - 
Analyzing Entity+SwiftSplash.swift:
2024-11-04 18:01:42,089 - INFO - 
Analyzing ContentToolbar.swift:
2024-11-04 18:01:42,090 - INFO - 
Analyzing SplashScreenView.swift:
2024-11-04 18:01:42,090 - INFO - 
Analyzing TrackBuildingView+Rotation.swift:
2024-11-04 18:01:42,090 - INFO - 
Analyzing PieceShelfTrackButtonsView.swift:
2024-11-04 18:01:42,090 - INFO - 
Analyzing TrackBuildingView.swift:
2024-11-04 18:01:42,090 - INFO - 
Analyzing RideControlView.swift:
2024-11-04 18:01:42,090 - INFO - 
Analyzing TrackBuildingView+Snapping.swift:
2024-11-04 18:01:42,090 - INFO - 
Analyzing PieceShelfView.swift:
2024-11-04 18:01:42,090 - INFO - 
Analyzing ImageButton.swift:
2024-11-04 18:01:42,091 - INFO - 
Analyzing PlaceStartPieceView.swift:
2024-11-04 18:01:42,091 - INFO - 
Analyzing TrackBuildingView+Drag.swift:
2024-11-04 18:01:42,091 - INFO - 
Analyzing EditTrackPieceView.swift:
2024-11-04 18:01:42,092 - INFO - 
Analyzing ContentView.swift:
2024-11-04 18:01:42,092 - INFO - 
Analyzing Package.swift:
2024-11-04 18:01:42,092 - INFO - 
Analyzing SwiftSplashTrackPieces.swift:
2024-11-04 18:01:42,092 - INFO - 
Analyzing Float+Utilities.swift:
2024-11-04 18:01:42,092 - INFO - 
Analyzing Entity+Utilities.swift:
2024-11-04 18:01:42,092 - INFO - 
Analyzing SIMD+Utilities.swift:
2024-11-04 18:01:42,093 - INFO - 
Analyzing ConnectableStateComponent.swift:
2024-11-04 18:01:42,093 - INFO - 
Analyzing Connectable.swift:
2024-11-04 18:01:42,093 - INFO - 
Analyzing MarkerComponents.swift:
2024-11-04 18:01:42,096 - INFO - Found 19 Swift files
2024-11-04 18:01:42,097 - INFO - 
Analyzing DioramaView.swift:
2024-11-04 18:01:42,097 - INFO - 
Analyzing ViewModel.swift:
2024-11-04 18:01:42,097 - INFO - 
Analyzing DioramaApp.swift:
2024-11-04 18:01:42,097 - INFO - 
Analyzing FlockingComponent.swift:
2024-11-04 18:01:42,097 - INFO - 
Analyzing LearnMoreView.swift:
2024-11-04 18:01:42,100 - INFO - 
Analyzing ContentView.swift:
2024-11-04 18:01:42,100 - INFO - 
Analyzing Components.swift:
2024-11-04 18:01:42,101 - INFO - 
Analyzing FlockingSystem.swift:
2024-11-04 18:01:42,101 - INFO - 
Analyzing AttachmentsProvider.swift:
2024-11-04 18:01:42,101 - INFO - 
Analyzing Package.swift:
2024-11-04 18:01:42,101 - INFO - 
Analyzing PointOfInterestComponent.swift:
2024-11-04 18:01:42,101 - INFO - 
Analyzing BillboardSystem.swift:
2024-11-04 18:01:42,101 - INFO - 
Analyzing ShaderGraphMaterials.swift:
2024-11-04 18:01:42,101 - INFO - 
Analyzing RegionSpecificComponent.swift:
2024-11-04 18:01:42,101 - INFO - 
Analyzing TrailAnimationSystem.swift:
2024-11-04 18:01:42,101 - INFO - 
Analyzing BillboardComponent.swift:
2024-11-04 18:01:42,101 - INFO - 
Analyzing TrailComponent.swift:
2024-11-04 18:01:42,101 - INFO - 
Analyzing Style.swift:
2024-11-04 18:01:42,101 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 18:05:22,743 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 18:05:29,127 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 18:05:31,214 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 18:05:31,436 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 18:05:34,071 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/7b5bc90de8c3/CreatingA3DModelWithGesturesInVisionOS.zip
2024-11-04 18:05:35,836 - INFO - Downloaded project to data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 18:05:37,904 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c52a77b613db/ObjectPlacementExample.zip
2024-11-04 18:05:38,202 - INFO - Downloaded project to data/projects/placing-content-on-detected-planes
2024-11-04 18:05:41,061 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/a5cc9fac626e/Combining2DAnd3DViewsInAnImmersiveApp.zip
2024-11-04 18:05:41,271 - INFO - Downloaded project to data/projects/combining-2d-and-3d-views-in-an-immersive-app
2024-11-04 18:05:44,381 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c615c66bc630/SwiftSplash.zip
2024-11-04 18:05:49,407 - INFO - Downloaded project to data/projects/swift-splash
2024-11-04 18:05:51,729 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/f60567d1cc7d/Diorama.zip
2024-11-04 18:05:58,366 - INFO - Downloaded project to data/projects/diorama
2024-11-04 18:05:58,380 - INFO - Found 30 Swift files
2024-11-04 18:05:58,380 - INFO - 
Analyzing AppState.swift:
2024-11-04 18:05:58,380 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 18:05:58,381 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 18:05:58,381 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 18:05:58,381 - INFO - 
Analyzing Package.swift:
2024-11-04 18:05:58,382 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 18:05:58,382 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 18:05:58,385 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 18:05:58,385 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 18:05:58,385 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 18:05:58,386 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 18:05:58,386 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 18:05:58,386 - INFO - 
Analyzing RobotData.swift:
2024-11-04 18:05:58,386 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 18:05:58,387 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 18:05:58,387 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 18:05:58,387 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 18:05:58,387 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 18:05:58,387 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 18:05:58,388 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 18:05:58,388 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 18:05:58,388 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 18:05:58,388 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 18:05:58,388 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 18:05:58,389 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 18:05:58,389 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 18:05:58,389 - INFO - 
Analyzing RobotView.swift:
2024-11-04 18:05:58,389 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 18:05:58,390 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 18:05:58,390 - INFO - 
Analyzing ContentView.swift:
2024-11-04 18:05:58,407 - INFO - Found 3 Swift files
2024-11-04 18:05:58,409 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 18:05:58,409 - INFO - 
Analyzing ShapesView.swift:
2024-11-04 18:05:58,409 - INFO - 
Analyzing ShapesView+Entities.swift:
2024-11-04 18:05:58,411 - INFO - Found 4 Swift files
2024-11-04 18:05:58,411 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 18:05:58,411 - INFO - 
Analyzing SIMD3.swift:
2024-11-04 18:05:58,412 - INFO - 
Analyzing CarView.swift:
2024-11-04 18:05:58,412 - INFO - 
Analyzing MainView.swift:
2024-11-04 18:05:58,413 - INFO - Found 19 Swift files
2024-11-04 18:05:58,414 - INFO - 
Analyzing ObjectPlacementApp.swift:
2024-11-04 18:05:58,414 - INFO - 
Analyzing AppState.swift:
2024-11-04 18:05:58,414 - INFO - 
Analyzing PlacementManager.swift:
2024-11-04 18:05:58,415 - INFO - 
Analyzing PlacementState.swift:
2024-11-04 18:05:58,415 - INFO - 
Analyzing PlaceableObject.swift:
2024-11-04 18:05:58,415 - INFO - 
Analyzing DragState.swift:
2024-11-04 18:05:58,416 - INFO - 
Analyzing PlaneProjector.swift:
2024-11-04 18:05:58,416 - INFO - 
Analyzing GeometryUtilities.swift:
2024-11-04 18:05:58,416 - INFO - 
Analyzing PersistenceManager.swift:
2024-11-04 18:05:58,416 - INFO - 
Analyzing PlaneAnchorHandler.swift:
2024-11-04 18:05:58,417 - INFO - 
Analyzing ModelLoader.swift:
2024-11-04 18:05:58,417 - INFO - 
Analyzing PlacementTooltip.swift:
2024-11-04 18:05:58,417 - INFO - 
Analyzing ObjectSelectionView.swift:
2024-11-04 18:05:58,417 - INFO - 
Analyzing HomeView.swift:
2024-11-04 18:05:58,418 - INFO - 
Analyzing InfoLabel.swift:
2024-11-04 18:05:58,418 - INFO - 
Analyzing DeleteButton.swift:
2024-11-04 18:05:58,418 - INFO - 
Analyzing ObjectPlacementMenuView.swift:
2024-11-04 18:05:58,418 - INFO - 
Analyzing TooltipView.swift:
2024-11-04 18:05:58,418 - INFO - 
Analyzing ObjectPlacementRealityView.swift:
2024-11-04 18:05:58,423 - INFO - Found 11 Swift files
2024-11-04 18:05:58,423 - INFO - 
Analyzing RainbowView.swift:
2024-11-04 18:05:58,424 - INFO - 
Analyzing MultiDimensionalImmersiveContentApp.swift:
2024-11-04 18:05:58,424 - INFO - 
Analyzing RainbowModel.swift:
2024-11-04 18:05:58,424 - INFO - 
Analyzing Extensions.swift:
2024-11-04 18:05:58,424 - INFO - 
Analyzing UIViewArcRepresentable.swift:
2024-11-04 18:05:58,424 - INFO - 
Analyzing UIViewArcView.swift:
2024-11-04 18:05:58,424 - INFO - 
Analyzing SwiftUIArcView.swift:
2024-11-04 18:05:58,425 - INFO - 
Analyzing CALayerArcRepresentable.swift:
2024-11-04 18:05:58,425 - INFO - 
Analyzing CALayerArcView.swift:
2024-11-04 18:05:58,425 - INFO - 
Analyzing Package.swift:
2024-11-04 18:05:58,425 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 18:05:58,429 - INFO - Found 36 Swift files
2024-11-04 18:05:58,430 - INFO - 
Analyzing SwiftSplashApp.swift:
2024-11-04 18:05:58,430 - INFO - 
Analyzing AppState.swift:
2024-11-04 18:05:58,430 - INFO - 
Analyzing AppState+Phases.swift:
2024-11-04 18:05:58,430 - INFO - 
Analyzing Piece.swift:
2024-11-04 18:05:58,430 - INFO - 
Analyzing AppState+PieceSelection.swift:
2024-11-04 18:05:58,430 - INFO - 
Analyzing SoundEffects.swift:
2024-11-04 18:05:58,430 - INFO - 
Analyzing AppPhase.swift:
2024-11-04 18:05:58,430 - INFO - 
Analyzing AppState+RideRunning.swift:
2024-11-04 18:05:58,430 - INFO - 
Analyzing AppState+TrackUpdates.swift:
2024-11-04 18:05:58,431 - INFO - 
Analyzing AppState+PieceManagement.swift:
2024-11-04 18:05:58,431 - INFO - 
Analyzing AppState+Transparency.swift:
2024-11-04 18:05:58,431 - INFO - 
Analyzing AppState+PieceLoading.swift:
2024-11-04 18:05:58,431 - INFO - 
Analyzing AppConfig.swift:
2024-11-04 18:05:58,431 - INFO - 
Analyzing Date+Logging.swift:
2024-11-04 18:05:58,431 - INFO - 
Analyzing Entity+SwiftSplash.swift:
2024-11-04 18:05:58,431 - INFO - 
Analyzing ContentToolbar.swift:
2024-11-04 18:05:58,431 - INFO - 
Analyzing SplashScreenView.swift:
2024-11-04 18:05:58,431 - INFO - 
Analyzing TrackBuildingView+Rotation.swift:
2024-11-04 18:05:58,431 - INFO - 
Analyzing PieceShelfTrackButtonsView.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing TrackBuildingView.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing RideControlView.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing TrackBuildingView+Snapping.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing PieceShelfView.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing ImageButton.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing PlaceStartPieceView.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing TrackBuildingView+Drag.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing EditTrackPieceView.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing ContentView.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing Package.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing SwiftSplashTrackPieces.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing Float+Utilities.swift:
2024-11-04 18:05:58,432 - INFO - 
Analyzing Entity+Utilities.swift:
2024-11-04 18:05:58,433 - INFO - 
Analyzing SIMD+Utilities.swift:
2024-11-04 18:05:58,433 - INFO - 
Analyzing ConnectableStateComponent.swift:
2024-11-04 18:05:58,433 - INFO - 
Analyzing Connectable.swift:
2024-11-04 18:05:58,433 - INFO - 
Analyzing MarkerComponents.swift:
2024-11-04 18:05:58,436 - INFO - Found 19 Swift files
2024-11-04 18:05:58,437 - INFO - 
Analyzing DioramaView.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing ViewModel.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing DioramaApp.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing FlockingComponent.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing LearnMoreView.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing ContentView.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing Components.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing FlockingSystem.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing AttachmentsProvider.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing Package.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing PointOfInterestComponent.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing BillboardSystem.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing ShaderGraphMaterials.swift:
2024-11-04 18:05:58,437 - INFO - 
Analyzing RegionSpecificComponent.swift:
2024-11-04 18:05:58,438 - INFO - 
Analyzing TrailAnimationSystem.swift:
2024-11-04 18:05:58,438 - INFO - 
Analyzing BillboardComponent.swift:
2024-11-04 18:05:58,438 - INFO - 
Analyzing TrailComponent.swift:
2024-11-04 18:05:58,438 - INFO - 
Analyzing Style.swift:
2024-11-04 18:05:58,438 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 18:07:47,056 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-04 18:07:53,138 - INFO - Downloaded project to data/projects/bot-anist
2024-11-04 18:07:55,240 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/eca86063e133/Creating3DEntitiesInVisionOSWithRealityKit.zip
2024-11-04 18:07:55,504 - INFO - Downloaded project to data/projects/creating-3d-entities-with-realitykit
2024-11-04 18:07:57,357 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/7b5bc90de8c3/CreatingA3DModelWithGesturesInVisionOS.zip
2024-11-04 18:07:58,218 - INFO - Downloaded project to data/projects/creating-an-interactive-3d-model-in-visionos
2024-11-04 18:08:00,171 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c52a77b613db/ObjectPlacementExample.zip
2024-11-04 18:08:00,388 - INFO - Downloaded project to data/projects/placing-content-on-detected-planes
2024-11-04 18:08:02,806 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/a5cc9fac626e/Combining2DAnd3DViewsInAnImmersiveApp.zip
2024-11-04 18:08:03,016 - INFO - Downloaded project to data/projects/combining-2d-and-3d-views-in-an-immersive-app
2024-11-04 18:08:06,072 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/c615c66bc630/SwiftSplash.zip
2024-11-04 18:08:12,970 - INFO - Downloaded project to data/projects/swift-splash
2024-11-04 18:08:15,099 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/f60567d1cc7d/Diorama.zip
2024-11-04 18:08:24,263 - INFO - Downloaded project to data/projects/diorama
2024-11-04 18:08:24,276 - INFO - Found 30 Swift files
2024-11-04 18:08:24,277 - INFO - 
Analyzing AppState.swift:
2024-11-04 18:08:24,277 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-04 18:08:24,278 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-04 18:08:24,278 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-04 18:08:24,278 - INFO - 
Analyzing Package.swift:
2024-11-04 18:08:24,279 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-04 18:08:24,279 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 18:08:24,279 - INFO - 
Analyzing PlantComponent.swift:
2024-11-04 18:08:24,279 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-04 18:08:24,280 - INFO - 
Analyzing RobotProvider.swift:
2024-11-04 18:08:24,280 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-04 18:08:24,280 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-04 18:08:24,280 - INFO - 
Analyzing RobotData.swift:
2024-11-04 18:08:24,280 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-04 18:08:24,281 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-04 18:08:24,281 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-04 18:08:24,281 - INFO - 
Analyzing StringExtensions.swift:
2024-11-04 18:08:24,281 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-04 18:08:24,282 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-04 18:08:24,282 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-04 18:08:24,282 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-04 18:08:24,282 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-04 18:08:24,282 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-04 18:08:24,282 - INFO - 
Analyzing StartScreenView.swift:
2024-11-04 18:08:24,282 - INFO - 
Analyzing OrnamentView.swift:
2024-11-04 18:08:24,282 - INFO - 
Analyzing SelectorViews.swift:
2024-11-04 18:08:24,283 - INFO - 
Analyzing RobotView.swift:
2024-11-04 18:08:24,283 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-04 18:08:24,283 - INFO - 
Analyzing ExplorationView.swift:
2024-11-04 18:08:24,283 - INFO - 
Analyzing ContentView.swift:
2024-11-04 18:08:24,300 - INFO - Found 3 Swift files
2024-11-04 18:08:24,302 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 18:08:24,302 - INFO - 
Analyzing ShapesView.swift:
2024-11-04 18:08:24,302 - INFO - 
Analyzing ShapesView+Entities.swift:
2024-11-04 18:08:24,304 - INFO - Found 4 Swift files
2024-11-04 18:08:24,304 - INFO - 
Analyzing EntryPoint.swift:
2024-11-04 18:08:24,304 - INFO - 
Analyzing SIMD3.swift:
2024-11-04 18:08:24,304 - INFO - 
Analyzing CarView.swift:
2024-11-04 18:08:24,304 - INFO - 
Analyzing MainView.swift:
2024-11-04 18:08:24,305 - INFO - Found 19 Swift files
2024-11-04 18:08:24,306 - INFO - 
Analyzing ObjectPlacementApp.swift:
2024-11-04 18:08:24,306 - INFO - 
Analyzing AppState.swift:
2024-11-04 18:08:24,306 - INFO - 
Analyzing PlacementManager.swift:
2024-11-04 18:08:24,306 - INFO - 
Analyzing PlacementState.swift:
2024-11-04 18:08:24,306 - INFO - 
Analyzing PlaceableObject.swift:
2024-11-04 18:08:24,306 - INFO - 
Analyzing DragState.swift:
2024-11-04 18:08:24,306 - INFO - 
Analyzing PlaneProjector.swift:
2024-11-04 18:08:24,306 - INFO - 
Analyzing GeometryUtilities.swift:
2024-11-04 18:08:24,306 - INFO - 
Analyzing PersistenceManager.swift:
2024-11-04 18:08:24,306 - INFO - 
Analyzing PlaneAnchorHandler.swift:
2024-11-04 18:08:24,306 - INFO - 
Analyzing ModelLoader.swift:
2024-11-04 18:08:24,307 - INFO - 
Analyzing PlacementTooltip.swift:
2024-11-04 18:08:24,307 - INFO - 
Analyzing ObjectSelectionView.swift:
2024-11-04 18:08:24,307 - INFO - 
Analyzing HomeView.swift:
2024-11-04 18:08:24,307 - INFO - 
Analyzing InfoLabel.swift:
2024-11-04 18:08:24,307 - INFO - 
Analyzing DeleteButton.swift:
2024-11-04 18:08:24,307 - INFO - 
Analyzing ObjectPlacementMenuView.swift:
2024-11-04 18:08:24,307 - INFO - 
Analyzing TooltipView.swift:
2024-11-04 18:08:24,307 - INFO - 
Analyzing ObjectPlacementRealityView.swift:
2024-11-04 18:08:24,312 - INFO - Found 11 Swift files
2024-11-04 18:08:24,312 - INFO - 
Analyzing RainbowView.swift:
2024-11-04 18:08:24,313 - INFO - 
Analyzing MultiDimensionalImmersiveContentApp.swift:
2024-11-04 18:08:24,313 - INFO - 
Analyzing RainbowModel.swift:
2024-11-04 18:08:24,313 - INFO - 
Analyzing Extensions.swift:
2024-11-04 18:08:24,313 - INFO - 
Analyzing UIViewArcRepresentable.swift:
2024-11-04 18:08:24,313 - INFO - 
Analyzing UIViewArcView.swift:
2024-11-04 18:08:24,313 - INFO - 
Analyzing SwiftUIArcView.swift:
2024-11-04 18:08:24,313 - INFO - 
Analyzing CALayerArcRepresentable.swift:
2024-11-04 18:08:24,313 - INFO - 
Analyzing CALayerArcView.swift:
2024-11-04 18:08:24,313 - INFO - 
Analyzing Package.swift:
2024-11-04 18:08:24,313 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-04 18:08:24,320 - INFO - Found 36 Swift files
2024-11-04 18:08:24,321 - INFO - 
Analyzing SwiftSplashApp.swift:
2024-11-04 18:08:24,321 - INFO - 
Analyzing AppState.swift:
2024-11-04 18:08:24,321 - INFO - 
Analyzing AppState+Phases.swift:
2024-11-04 18:08:24,321 - INFO - 
Analyzing Piece.swift:
2024-11-04 18:08:24,321 - INFO - 
Analyzing AppState+PieceSelection.swift:
2024-11-04 18:08:24,322 - INFO - 
Analyzing SoundEffects.swift:
2024-11-04 18:08:24,322 - INFO - 
Analyzing AppPhase.swift:
2024-11-04 18:08:24,322 - INFO - 
Analyzing AppState+RideRunning.swift:
2024-11-04 18:08:24,322 - INFO - 
Analyzing AppState+TrackUpdates.swift:
2024-11-04 18:08:24,322 - INFO - 
Analyzing AppState+PieceManagement.swift:
2024-11-04 18:08:24,322 - INFO - 
Analyzing AppState+Transparency.swift:
2024-11-04 18:08:24,322 - INFO - 
Analyzing AppState+PieceLoading.swift:
2024-11-04 18:08:24,322 - INFO - 
Analyzing AppConfig.swift:
2024-11-04 18:08:24,322 - INFO - 
Analyzing Date+Logging.swift:
2024-11-04 18:08:24,322 - INFO - 
Analyzing Entity+SwiftSplash.swift:
2024-11-04 18:08:24,323 - INFO - 
Analyzing ContentToolbar.swift:
2024-11-04 18:08:24,323 - INFO - 
Analyzing SplashScreenView.swift:
2024-11-04 18:08:24,323 - INFO - 
Analyzing TrackBuildingView+Rotation.swift:
2024-11-04 18:08:24,323 - INFO - 
Analyzing PieceShelfTrackButtonsView.swift:
2024-11-04 18:08:24,323 - INFO - 
Analyzing TrackBuildingView.swift:
2024-11-04 18:08:24,323 - INFO - 
Analyzing RideControlView.swift:
2024-11-04 18:08:24,323 - INFO - 
Analyzing TrackBuildingView+Snapping.swift:
2024-11-04 18:08:24,323 - INFO - 
Analyzing PieceShelfView.swift:
2024-11-04 18:08:24,323 - INFO - 
Analyzing ImageButton.swift:
2024-11-04 18:08:24,323 - INFO - 
Analyzing PlaceStartPieceView.swift:
2024-11-04 18:08:24,323 - INFO - 
Analyzing TrackBuildingView+Drag.swift:
2024-11-04 18:08:24,323 - INFO - 
Analyzing EditTrackPieceView.swift:
2024-11-04 18:08:24,324 - INFO - 
Analyzing ContentView.swift:
2024-11-04 18:08:24,324 - INFO - 
Analyzing Package.swift:
2024-11-04 18:08:24,324 - INFO - 
Analyzing SwiftSplashTrackPieces.swift:
2024-11-04 18:08:24,324 - INFO - 
Analyzing Float+Utilities.swift:
2024-11-04 18:08:24,324 - INFO - 
Analyzing Entity+Utilities.swift:
2024-11-04 18:08:24,324 - INFO - 
Analyzing SIMD+Utilities.swift:
2024-11-04 18:08:24,324 - INFO - 
Analyzing ConnectableStateComponent.swift:
2024-11-04 18:08:24,324 - INFO - 
Analyzing Connectable.swift:
2024-11-04 18:08:24,324 - INFO - 
Analyzing MarkerComponents.swift:
2024-11-04 18:08:24,328 - INFO - Found 19 Swift files
2024-11-04 18:08:24,328 - INFO - 
Analyzing DioramaView.swift:
2024-11-04 18:08:24,328 - INFO - 
Analyzing ViewModel.swift:
2024-11-04 18:08:24,328 - INFO - 
Analyzing DioramaApp.swift:
2024-11-04 18:08:24,328 - INFO - 
Analyzing FlockingComponent.swift:
2024-11-04 18:08:24,328 - INFO - 
Analyzing LearnMoreView.swift:
2024-11-04 18:08:24,328 - INFO - 
Analyzing ContentView.swift:
2024-11-04 18:08:24,328 - INFO - 
Analyzing Components.swift:
2024-11-04 18:08:24,329 - INFO - 
Analyzing FlockingSystem.swift:
2024-11-04 18:08:24,329 - INFO - 
Analyzing AttachmentsProvider.swift:
2024-11-04 18:08:24,329 - INFO - 
Analyzing Package.swift:
2024-11-04 18:08:24,329 - INFO - 
Analyzing PointOfInterestComponent.swift:
2024-11-04 18:08:24,329 - INFO - 
Analyzing BillboardSystem.swift:
2024-11-04 18:08:24,329 - INFO - 
Analyzing ShaderGraphMaterials.swift:
2024-11-04 18:08:24,329 - INFO - 
Analyzing RegionSpecificComponent.swift:
2024-11-04 18:08:24,329 - INFO - 
Analyzing TrailAnimationSystem.swift:
2024-11-04 18:08:24,329 - INFO - 
Analyzing BillboardComponent.swift:
2024-11-04 18:08:24,329 - INFO - 
Analyzing TrailComponent.swift:
2024-11-04 18:08:24,329 - INFO - 
Analyzing Style.swift:
2024-11-04 18:08:24,329 - INFO - 
Analyzing RealityKitContent.swift:
2024-11-05 14:35:40,169 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 14:35:47,280 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 14:35:50,056 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 14:36:01,710 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 14:36:04,287 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 14:36:04,866 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 14:36:04,869 - INFO - Found 42 Swift files
2024-11-05 14:36:04,870 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 14:36:04,870 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 14:36:04,870 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 14:36:04,870 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 14:36:04,871 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 14:36:04,871 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 14:36:04,871 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 14:36:04,871 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 14:36:04,871 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 14:36:04,871 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 14:36:04,871 - INFO - 
Analyzing Orbit.swift:
2024-11-05 14:36:04,871 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 14:36:04,871 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 14:36:04,871 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 14:36:04,872 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 14:36:04,872 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 14:36:04,872 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 14:36:04,872 - INFO - 
Analyzing Globe.swift:
2024-11-05 14:36:04,872 - INFO - 
Analyzing Earth.swift:
2024-11-05 14:36:04,872 - INFO - 
Analyzing Starfield.swift:
2024-11-05 14:36:04,872 - INFO - 
Analyzing Sun.swift:
2024-11-05 14:36:04,872 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 14:36:04,872 - INFO - 
Analyzing Module.swift:
2024-11-05 14:36:04,872 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 14:36:04,872 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 14:36:04,872 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 14:36:04,873 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 14:36:04,873 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 14:36:04,873 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 14:36:04,873 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 14:36:04,873 - INFO - 
Analyzing Modules.swift:
2024-11-05 14:36:04,873 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 14:36:04,873 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 14:36:04,873 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 14:36:04,873 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 14:36:04,873 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 14:36:04,873 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 14:36:04,874 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 14:36:04,874 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 14:36:04,874 - INFO - 
Analyzing Package.swift:
2024-11-05 14:36:04,874 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 14:36:04,874 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 14:36:04,874 - ERROR - Error in analysis: [Errno 21] Is a directory: 'data/projects/hello-world'
Traceback (most recent call last):
  File "/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/documentation_builder/run_scraper.py", line 116, in main
    soup=BeautifulSoup(project.local_path.read_text(), 'html.parser'),
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/pathlib.py", line 1027, in read_text
    with self.open(mode='r', encoding=encoding, errors=errors) as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/pathlib.py", line 1013, in open
    return io.open(self, mode, buffering, encoding, errors, newline)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
IsADirectoryError: [Errno 21] Is a directory: 'data/projects/hello-world'
2024-11-05 15:19:28,941 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 15:19:37,855 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 15:19:40,301 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 15:19:49,626 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 15:19:51,507 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 15:19:51,757 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 15:19:51,760 - INFO - Found 42 Swift files
2024-11-05 15:19:51,760 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 15:19:51,760 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 15:19:51,760 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 15:19:51,760 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 15:19:51,760 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 15:19:51,760 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 15:19:51,760 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 15:19:51,760 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 15:19:51,760 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing Orbit.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing Globe.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing Earth.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing Starfield.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing Sun.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing Module.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing Modules.swift:
2024-11-05 15:19:51,761 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 15:19:51,762 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 15:19:51,762 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 15:19:51,762 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 15:19:51,762 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 15:19:51,762 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 15:19:51,762 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 15:19:51,762 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 15:19:51,762 - INFO - 
Analyzing Package.swift:
2024-11-05 15:19:51,762 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 15:19:51,762 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 15:19:51,762 - INFO - Successfully read WorldApp.swift
2024-11-05 15:19:51,762 - INFO - Successfully read SliderGridRow.swift
2024-11-05 15:19:51,762 - INFO - Successfully read EarthSettings.swift
2024-11-05 15:19:51,762 - INFO - Successfully read GlobeSettings.swift
2024-11-05 15:19:51,762 - INFO - Successfully read OrbitSettings.swift
2024-11-05 15:19:51,762 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 15:19:51,762 - INFO - Successfully read SettingsButton.swift
2024-11-05 15:19:51,762 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 15:19:51,763 - INFO - Successfully read OrbitModule.swift
2024-11-05 15:19:51,763 - INFO - Successfully read OrbitToggle.swift
2024-11-05 15:19:51,763 - INFO - Successfully read Orbit.swift
2024-11-05 15:19:51,763 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 15:19:51,763 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 15:19:51,763 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 15:19:51,763 - INFO - Successfully read GlobeToggle.swift
2024-11-05 15:19:51,763 - INFO - Successfully read GlobeControls.swift
2024-11-05 15:19:51,763 - INFO - Successfully read GlobeModule.swift
2024-11-05 15:19:51,763 - INFO - Successfully read Globe.swift
2024-11-05 15:19:51,763 - INFO - Successfully read Earth.swift
2024-11-05 15:19:51,763 - INFO - Successfully read Starfield.swift
2024-11-05 15:19:51,763 - INFO - Successfully read Sun.swift
2024-11-05 15:19:51,763 - INFO - Successfully read ViewModel.swift
2024-11-05 15:19:51,763 - INFO - Successfully read Module.swift
2024-11-05 15:19:51,763 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 15:19:51,763 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 15:19:51,763 - INFO - Successfully read SolarSystem.swift
2024-11-05 15:19:51,763 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 15:19:51,763 - INFO - Successfully read TraceSystem.swift
2024-11-05 15:19:51,764 - INFO - Successfully read RotationSystem.swift
2024-11-05 15:19:51,764 - INFO - Successfully read ModuleDetail.swift
2024-11-05 15:19:51,764 - INFO - Successfully read Modules.swift
2024-11-05 15:19:51,764 - INFO - Successfully read TableOfContents.swift
2024-11-05 15:19:51,764 - INFO - Successfully read ModuleCard.swift
2024-11-05 15:19:51,764 - INFO - Successfully read Entity+Trace.swift
2024-11-05 15:19:51,764 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 15:19:51,764 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 15:19:51,764 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 15:19:51,764 - INFO - Successfully read EarthEntity.swift
2024-11-05 15:19:51,764 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 15:19:51,764 - INFO - Successfully read Package.swift
2024-11-05 15:19:51,764 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 15:19:51,764 - INFO - Successfully read WorldAssets.swift
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from WorldApp.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from SliderGridRow.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from EarthSettings.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from GlobeSettings.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from OrbitSettings.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from SatelliteSettings.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from SettingsButton.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from SolarSystemSettings.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from OrbitModule.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from OrbitToggle.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from Orbit.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from TypeTextModifier.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from PlacementGesturesModifier.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from DragRotationModifier.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,765 - ERROR - Error extracting relationships from GlobeToggle.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from GlobeControls.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from GlobeModule.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from Globe.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from Earth.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from Starfield.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from Sun.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from ViewModel.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from Module.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from SolarSystemToggle.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from SolarSystemModule.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from SolarSystem.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from SolarSystemControls.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from TraceSystem.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from RotationSystem.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from ModuleDetail.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from Modules.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from TableOfContents.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from ModuleCard.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from Entity+Trace.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,766 - ERROR - Error extracting relationships from EarthEntity+Configuration.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,767 - ERROR - Error extracting relationships from SatelliteEntity.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,767 - ERROR - Error extracting relationships from Entity+Sunlight.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,767 - ERROR - Error extracting relationships from EarthEntity.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,767 - ERROR - Error extracting relationships from SatelliteEntity+Configuration.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,767 - ERROR - Error extracting relationships from Package.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,767 - ERROR - Error extracting relationships from SunPositionSystem.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,767 - ERROR - Error extracting relationships from WorldAssets.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,783 - INFO - Found 30 Swift files
2024-11-05 15:19:51,783 - INFO - 
Analyzing AppState.swift:
2024-11-05 15:19:51,783 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 15:19:51,783 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 15:19:51,783 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 15:19:51,783 - INFO - 
Analyzing Package.swift:
2024-11-05 15:19:51,783 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 15:19:51,783 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:19:51,783 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 15:19:51,783 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 15:19:51,783 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing RobotData.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing RobotView.swift:
2024-11-05 15:19:51,784 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 15:19:51,785 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 15:19:51,785 - INFO - 
Analyzing ContentView.swift:
2024-11-05 15:19:51,785 - INFO - Successfully read Package.swift
2024-11-05 15:19:51,785 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 15:19:51,785 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:19:51,785 - INFO - Successfully read PlantComponent.swift
2024-11-05 15:19:51,786 - INFO - Successfully read AppState.swift
2024-11-05 15:19:51,786 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 15:19:51,786 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 15:19:51,786 - INFO - Successfully read BOTanistApp.swift
2024-11-05 15:19:51,787 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 15:19:51,787 - INFO - Successfully read RobotProvider.swift
2024-11-05 15:19:51,787 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 15:19:51,787 - INFO - Successfully read RobotCharacter.swift
2024-11-05 15:19:51,787 - INFO - Successfully read RobotData.swift
2024-11-05 15:19:51,787 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 15:19:51,787 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 15:19:51,787 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:19:51,787 - INFO - Successfully read StringExtensions.swift
2024-11-05 15:19:51,787 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 15:19:51,787 - INFO - Successfully read ColorExtensions.swift
2024-11-05 15:19:51,787 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 15:19:51,787 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 15:19:51,787 - INFO - Successfully read JointPinComponent.swift
2024-11-05 15:19:51,787 - INFO - Successfully read JointPinSystem.swift
2024-11-05 15:19:51,787 - INFO - Successfully read StartScreenView.swift
2024-11-05 15:19:51,787 - INFO - Successfully read OrnamentView.swift
2024-11-05 15:19:51,787 - INFO - Successfully read SelectorViews.swift
2024-11-05 15:19:51,787 - INFO - Successfully read RobotView.swift
2024-11-05 15:19:51,787 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 15:19:51,787 - INFO - Successfully read ExplorationView.swift
2024-11-05 15:19:51,787 - INFO - Successfully read ContentView.swift
2024-11-05 15:19:51,788 - ERROR - Error extracting relationships from Package.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,788 - ERROR - Error extracting relationships from BOTanistAssets.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,788 - ERROR - Error extracting relationships from EntityExtensions.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,788 - ERROR - Error extracting relationships from PlantComponent.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,788 - ERROR - Error extracting relationships from AppState.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,788 - ERROR - Error extracting relationships from PlantAnimationProvider.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,788 - ERROR - Error extracting relationships from AppState+Exploration.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,788 - ERROR - Error extracting relationships from BOTanistApp.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,788 - ERROR - Error extracting relationships from RobotCharacter+Movement.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,788 - ERROR - Error extracting relationships from RobotProvider.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,789 - ERROR - Error extracting relationships from RobotProvider+Loading.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,789 - ERROR - Error extracting relationships from RobotCharacter.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,789 - ERROR - Error extracting relationships from RobotData.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,789 - ERROR - Error extracting relationships from AnimationStateMachine.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,789 - ERROR - Error extracting relationships from RealityView+TouchControls.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,789 - ERROR - Error extracting relationships from EntityExtensions.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,789 - ERROR - Error extracting relationships from StringExtensions.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,789 - ERROR - Error extracting relationships from Preview+AppStateEnvironment.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,789 - ERROR - Error extracting relationships from ColorExtensions.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,790 - ERROR - Error extracting relationships from RealityView+KeyboardControls.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,790 - ERROR - Error extracting relationships from CaseIterableExtensions.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,790 - ERROR - Error extracting relationships from JointPinComponent.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,790 - ERROR - Error extracting relationships from JointPinSystem.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,790 - ERROR - Error extracting relationships from StartScreenView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,790 - ERROR - Error extracting relationships from OrnamentView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,791 - ERROR - Error extracting relationships from SelectorViews.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,791 - ERROR - Error extracting relationships from RobotView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,791 - ERROR - Error extracting relationships from RobotCustomizationView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,791 - ERROR - Error extracting relationships from ExplorationView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,792 - ERROR - Error extracting relationships from ContentView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,798 - INFO - Found 4 Swift files
2024-11-05 15:19:51,798 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 15:19:51,798 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 15:19:51,798 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 15:19:51,798 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 15:19:51,799 - INFO - Successfully read EntryPoint.swift
2024-11-05 15:19:51,799 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 15:19:51,799 - INFO - Successfully read DecibelSlider.swift
2024-11-05 15:19:51,799 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 15:19:51,799 - ERROR - Error extracting relationships from EntryPoint.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,799 - ERROR - Error extracting relationships from SpatialAudioView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,800 - ERROR - Error extracting relationships from DecibelSlider.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:19:51,800 - ERROR - Error extracting relationships from AxisVisualizer.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:16,816 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 15:21:21,875 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 15:21:27,289 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 15:21:33,519 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 15:21:35,991 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 15:21:36,484 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 15:21:36,487 - INFO - Found 42 Swift files
2024-11-05 15:21:36,487 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 15:21:36,488 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 15:21:36,488 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 15:21:36,488 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 15:21:36,488 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 15:21:36,488 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 15:21:36,488 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 15:21:36,488 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 15:21:36,489 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 15:21:36,489 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 15:21:36,489 - INFO - 
Analyzing Orbit.swift:
2024-11-05 15:21:36,489 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 15:21:36,489 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 15:21:36,489 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 15:21:36,489 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 15:21:36,489 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 15:21:36,489 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 15:21:36,489 - INFO - 
Analyzing Globe.swift:
2024-11-05 15:21:36,490 - INFO - 
Analyzing Earth.swift:
2024-11-05 15:21:36,490 - INFO - 
Analyzing Starfield.swift:
2024-11-05 15:21:36,490 - INFO - 
Analyzing Sun.swift:
2024-11-05 15:21:36,490 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 15:21:36,490 - INFO - 
Analyzing Module.swift:
2024-11-05 15:21:36,491 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 15:21:36,491 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 15:21:36,491 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 15:21:36,491 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 15:21:36,491 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 15:21:36,491 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 15:21:36,491 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 15:21:36,492 - INFO - 
Analyzing Modules.swift:
2024-11-05 15:21:36,492 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 15:21:36,492 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 15:21:36,492 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 15:21:36,492 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 15:21:36,492 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 15:21:36,493 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 15:21:36,493 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 15:21:36,493 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 15:21:36,493 - INFO - 
Analyzing Package.swift:
2024-11-05 15:21:36,493 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 15:21:36,493 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 15:21:36,494 - INFO - Successfully read WorldApp.swift
2024-11-05 15:21:36,494 - INFO - Successfully read SliderGridRow.swift
2024-11-05 15:21:36,494 - INFO - Successfully read EarthSettings.swift
2024-11-05 15:21:36,494 - INFO - Successfully read GlobeSettings.swift
2024-11-05 15:21:36,494 - INFO - Successfully read OrbitSettings.swift
2024-11-05 15:21:36,494 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 15:21:36,494 - INFO - Successfully read SettingsButton.swift
2024-11-05 15:21:36,494 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 15:21:36,494 - INFO - Successfully read OrbitModule.swift
2024-11-05 15:21:36,494 - INFO - Successfully read OrbitToggle.swift
2024-11-05 15:21:36,494 - INFO - Successfully read Orbit.swift
2024-11-05 15:21:36,494 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 15:21:36,494 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 15:21:36,494 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 15:21:36,494 - INFO - Successfully read GlobeToggle.swift
2024-11-05 15:21:36,495 - INFO - Successfully read GlobeControls.swift
2024-11-05 15:21:36,495 - INFO - Successfully read GlobeModule.swift
2024-11-05 15:21:36,495 - INFO - Successfully read Globe.swift
2024-11-05 15:21:36,495 - INFO - Successfully read Earth.swift
2024-11-05 15:21:36,495 - INFO - Successfully read Starfield.swift
2024-11-05 15:21:36,495 - INFO - Successfully read Sun.swift
2024-11-05 15:21:36,495 - INFO - Successfully read ViewModel.swift
2024-11-05 15:21:36,495 - INFO - Successfully read Module.swift
2024-11-05 15:21:36,495 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 15:21:36,495 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 15:21:36,495 - INFO - Successfully read SolarSystem.swift
2024-11-05 15:21:36,495 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 15:21:36,495 - INFO - Successfully read TraceSystem.swift
2024-11-05 15:21:36,495 - INFO - Successfully read RotationSystem.swift
2024-11-05 15:21:36,495 - INFO - Successfully read ModuleDetail.swift
2024-11-05 15:21:36,495 - INFO - Successfully read Modules.swift
2024-11-05 15:21:36,495 - INFO - Successfully read TableOfContents.swift
2024-11-05 15:21:36,496 - INFO - Successfully read ModuleCard.swift
2024-11-05 15:21:36,496 - INFO - Successfully read Entity+Trace.swift
2024-11-05 15:21:36,496 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 15:21:36,496 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 15:21:36,496 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 15:21:36,496 - INFO - Successfully read EarthEntity.swift
2024-11-05 15:21:36,496 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 15:21:36,496 - INFO - Successfully read Package.swift
2024-11-05 15:21:36,496 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 15:21:36,496 - INFO - Successfully read WorldAssets.swift
2024-11-05 15:21:36,496 - ERROR - Error extracting relationships from WorldApp.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from SliderGridRow.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from EarthSettings.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from GlobeSettings.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from OrbitSettings.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from SatelliteSettings.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from SettingsButton.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from SolarSystemSettings.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from OrbitModule.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from OrbitToggle.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from Orbit.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from TypeTextModifier.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from PlacementGesturesModifier.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from DragRotationModifier.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from GlobeToggle.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from GlobeControls.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from GlobeModule.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,497 - ERROR - Error extracting relationships from Globe.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from Earth.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from Starfield.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from Sun.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from ViewModel.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from Module.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from SolarSystemToggle.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from SolarSystemModule.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from SolarSystem.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from SolarSystemControls.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from TraceSystem.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from RotationSystem.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from ModuleDetail.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from Modules.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from TableOfContents.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from ModuleCard.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from Entity+Trace.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from EarthEntity+Configuration.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,498 - ERROR - Error extracting relationships from SatelliteEntity.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,499 - ERROR - Error extracting relationships from Entity+Sunlight.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,499 - ERROR - Error extracting relationships from EarthEntity.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,499 - ERROR - Error extracting relationships from SatelliteEntity+Configuration.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,499 - ERROR - Error extracting relationships from Package.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,499 - ERROR - Error extracting relationships from SunPositionSystem.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,499 - ERROR - Error extracting relationships from WorldAssets.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,513 - INFO - Found 30 Swift files
2024-11-05 15:21:36,513 - INFO - 
Analyzing AppState.swift:
2024-11-05 15:21:36,513 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 15:21:36,513 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 15:21:36,513 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 15:21:36,513 - INFO - 
Analyzing Package.swift:
2024-11-05 15:21:36,513 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 15:21:36,513 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:21:36,513 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 15:21:36,513 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing RobotData.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 15:21:36,514 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 15:21:36,515 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 15:21:36,515 - INFO - 
Analyzing RobotView.swift:
2024-11-05 15:21:36,515 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 15:21:36,515 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 15:21:36,515 - INFO - 
Analyzing ContentView.swift:
2024-11-05 15:21:36,515 - INFO - Successfully read Package.swift
2024-11-05 15:21:36,515 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 15:21:36,515 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:21:36,515 - INFO - Successfully read PlantComponent.swift
2024-11-05 15:21:36,516 - INFO - Successfully read AppState.swift
2024-11-05 15:21:36,516 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 15:21:36,516 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 15:21:36,517 - INFO - Successfully read BOTanistApp.swift
2024-11-05 15:21:36,517 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 15:21:36,517 - INFO - Successfully read RobotProvider.swift
2024-11-05 15:21:36,517 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 15:21:36,517 - INFO - Successfully read RobotCharacter.swift
2024-11-05 15:21:36,517 - INFO - Successfully read RobotData.swift
2024-11-05 15:21:36,517 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 15:21:36,517 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 15:21:36,517 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:21:36,517 - INFO - Successfully read StringExtensions.swift
2024-11-05 15:21:36,517 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 15:21:36,517 - INFO - Successfully read ColorExtensions.swift
2024-11-05 15:21:36,517 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 15:21:36,517 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 15:21:36,517 - INFO - Successfully read JointPinComponent.swift
2024-11-05 15:21:36,517 - INFO - Successfully read JointPinSystem.swift
2024-11-05 15:21:36,517 - INFO - Successfully read StartScreenView.swift
2024-11-05 15:21:36,518 - INFO - Successfully read OrnamentView.swift
2024-11-05 15:21:36,518 - INFO - Successfully read SelectorViews.swift
2024-11-05 15:21:36,518 - INFO - Successfully read RobotView.swift
2024-11-05 15:21:36,518 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 15:21:36,518 - INFO - Successfully read ExplorationView.swift
2024-11-05 15:21:36,518 - INFO - Successfully read ContentView.swift
2024-11-05 15:21:36,518 - ERROR - Error extracting relationships from Package.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,518 - ERROR - Error extracting relationships from BOTanistAssets.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,518 - ERROR - Error extracting relationships from EntityExtensions.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,518 - ERROR - Error extracting relationships from PlantComponent.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,518 - ERROR - Error extracting relationships from AppState.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,518 - ERROR - Error extracting relationships from PlantAnimationProvider.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,518 - ERROR - Error extracting relationships from AppState+Exploration.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,519 - ERROR - Error extracting relationships from BOTanistApp.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,519 - ERROR - Error extracting relationships from RobotCharacter+Movement.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,519 - ERROR - Error extracting relationships from RobotProvider.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,519 - ERROR - Error extracting relationships from RobotProvider+Loading.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,519 - ERROR - Error extracting relationships from RobotCharacter.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,519 - ERROR - Error extracting relationships from RobotData.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,520 - ERROR - Error extracting relationships from AnimationStateMachine.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,520 - ERROR - Error extracting relationships from RealityView+TouchControls.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,520 - ERROR - Error extracting relationships from EntityExtensions.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,520 - ERROR - Error extracting relationships from StringExtensions.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,520 - ERROR - Error extracting relationships from Preview+AppStateEnvironment.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,520 - ERROR - Error extracting relationships from ColorExtensions.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,520 - ERROR - Error extracting relationships from RealityView+KeyboardControls.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,520 - ERROR - Error extracting relationships from CaseIterableExtensions.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,520 - ERROR - Error extracting relationships from JointPinComponent.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,520 - ERROR - Error extracting relationships from JointPinSystem.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,520 - ERROR - Error extracting relationships from StartScreenView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,520 - ERROR - Error extracting relationships from OrnamentView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,521 - ERROR - Error extracting relationships from SelectorViews.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,521 - ERROR - Error extracting relationships from RobotView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,522 - ERROR - Error extracting relationships from RobotCustomizationView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,522 - ERROR - Error extracting relationships from ExplorationView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,522 - ERROR - Error extracting relationships from ContentView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,528 - INFO - Found 4 Swift files
2024-11-05 15:21:36,528 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 15:21:36,528 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 15:21:36,528 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 15:21:36,528 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 15:21:36,528 - INFO - Successfully read EntryPoint.swift
2024-11-05 15:21:36,529 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 15:21:36,529 - INFO - Successfully read DecibelSlider.swift
2024-11-05 15:21:36,529 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 15:21:36,529 - ERROR - Error extracting relationships from EntryPoint.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,529 - ERROR - Error extracting relationships from SpatialAudioView.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,529 - ERROR - Error extracting relationships from DecibelSlider.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:21:36,529 - ERROR - Error extracting relationships from AxisVisualizer.swift: 'list' object has no attribute 'frameworks'
2024-11-05 15:22:41,244 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 15:22:45,318 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 15:22:47,562 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 15:22:53,796 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 15:22:55,979 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 15:22:56,269 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 15:22:56,273 - INFO - Found 42 Swift files
2024-11-05 15:22:56,273 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing Orbit.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 15:22:56,273 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing Globe.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing Earth.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing Starfield.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing Sun.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing Module.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing Modules.swift:
2024-11-05 15:22:56,274 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 15:22:56,275 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 15:22:56,275 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 15:22:56,275 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 15:22:56,275 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 15:22:56,275 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 15:22:56,275 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 15:22:56,275 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 15:22:56,275 - INFO - 
Analyzing Package.swift:
2024-11-05 15:22:56,275 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 15:22:56,275 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 15:22:56,275 - INFO - Successfully read WorldApp.swift
2024-11-05 15:22:56,275 - INFO - Successfully read SliderGridRow.swift
2024-11-05 15:22:56,275 - INFO - Successfully read EarthSettings.swift
2024-11-05 15:22:56,275 - INFO - Successfully read GlobeSettings.swift
2024-11-05 15:22:56,275 - INFO - Successfully read OrbitSettings.swift
2024-11-05 15:22:56,276 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 15:22:56,276 - INFO - Successfully read SettingsButton.swift
2024-11-05 15:22:56,276 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 15:22:56,276 - INFO - Successfully read OrbitModule.swift
2024-11-05 15:22:56,276 - INFO - Successfully read OrbitToggle.swift
2024-11-05 15:22:56,276 - INFO - Successfully read Orbit.swift
2024-11-05 15:22:56,276 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 15:22:56,276 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 15:22:56,276 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 15:22:56,276 - INFO - Successfully read GlobeToggle.swift
2024-11-05 15:22:56,276 - INFO - Successfully read GlobeControls.swift
2024-11-05 15:22:56,276 - INFO - Successfully read GlobeModule.swift
2024-11-05 15:22:56,276 - INFO - Successfully read Globe.swift
2024-11-05 15:22:56,276 - INFO - Successfully read Earth.swift
2024-11-05 15:22:56,276 - INFO - Successfully read Starfield.swift
2024-11-05 15:22:56,276 - INFO - Successfully read Sun.swift
2024-11-05 15:22:56,277 - INFO - Successfully read ViewModel.swift
2024-11-05 15:22:56,277 - INFO - Successfully read Module.swift
2024-11-05 15:22:56,277 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 15:22:56,277 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 15:22:56,277 - INFO - Successfully read SolarSystem.swift
2024-11-05 15:22:56,277 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 15:22:56,277 - INFO - Successfully read TraceSystem.swift
2024-11-05 15:22:56,277 - INFO - Successfully read RotationSystem.swift
2024-11-05 15:22:56,277 - INFO - Successfully read ModuleDetail.swift
2024-11-05 15:22:56,277 - INFO - Successfully read Modules.swift
2024-11-05 15:22:56,277 - INFO - Successfully read TableOfContents.swift
2024-11-05 15:22:56,277 - INFO - Successfully read ModuleCard.swift
2024-11-05 15:22:56,277 - INFO - Successfully read Entity+Trace.swift
2024-11-05 15:22:56,277 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 15:22:56,277 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 15:22:56,277 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 15:22:56,277 - INFO - Successfully read EarthEntity.swift
2024-11-05 15:22:56,277 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 15:22:56,277 - INFO - Successfully read Package.swift
2024-11-05 15:22:56,277 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 15:22:56,277 - INFO - Successfully read WorldAssets.swift
2024-11-05 15:22:56,278 - ERROR - Error extracting relationships from WorldApp.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,278 - ERROR - Error extracting relationships from SliderGridRow.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,278 - ERROR - Error extracting relationships from EarthSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,278 - ERROR - Error extracting relationships from GlobeSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,278 - ERROR - Error extracting relationships from OrbitSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,279 - ERROR - Error extracting relationships from SatelliteSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,279 - ERROR - Error extracting relationships from SettingsButton.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,279 - ERROR - Error extracting relationships from SolarSystemSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,279 - ERROR - Error extracting relationships from OrbitModule.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,279 - ERROR - Error extracting relationships from OrbitToggle.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,279 - ERROR - Error extracting relationships from Orbit.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,279 - ERROR - Error extracting relationships from TypeTextModifier.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,279 - ERROR - Error extracting relationships from PlacementGesturesModifier.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,279 - ERROR - Error extracting relationships from DragRotationModifier.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,279 - ERROR - Error extracting relationships from GlobeToggle.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,279 - ERROR - Error extracting relationships from GlobeControls.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,279 - ERROR - Error extracting relationships from GlobeModule.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from Globe.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from Earth.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from Starfield.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from Sun.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from ViewModel.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from Module.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from SolarSystemToggle.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from SolarSystemModule.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from SolarSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from SolarSystemControls.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from TraceSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from RotationSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,280 - ERROR - Error extracting relationships from ModuleDetail.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,281 - ERROR - Error extracting relationships from Modules.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,281 - ERROR - Error extracting relationships from TableOfContents.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,281 - ERROR - Error extracting relationships from ModuleCard.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,281 - ERROR - Error extracting relationships from Entity+Trace.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,281 - ERROR - Error extracting relationships from EarthEntity+Configuration.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,281 - ERROR - Error extracting relationships from SatelliteEntity.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,281 - ERROR - Error extracting relationships from Entity+Sunlight.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,281 - ERROR - Error extracting relationships from EarthEntity.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,281 - ERROR - Error extracting relationships from SatelliteEntity+Configuration.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,281 - ERROR - Error extracting relationships from Package.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,281 - ERROR - Error extracting relationships from SunPositionSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,281 - ERROR - Error extracting relationships from WorldAssets.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,296 - INFO - Found 30 Swift files
2024-11-05 15:22:56,296 - INFO - 
Analyzing AppState.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing Package.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing RobotData.swift:
2024-11-05 15:22:56,297 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing RobotView.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 15:22:56,298 - INFO - 
Analyzing ContentView.swift:
2024-11-05 15:22:56,299 - INFO - Successfully read Package.swift
2024-11-05 15:22:56,299 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 15:22:56,299 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:22:56,299 - INFO - Successfully read PlantComponent.swift
2024-11-05 15:22:56,300 - INFO - Successfully read AppState.swift
2024-11-05 15:22:56,300 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 15:22:56,301 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 15:22:56,301 - INFO - Successfully read BOTanistApp.swift
2024-11-05 15:22:56,301 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 15:22:56,301 - INFO - Successfully read RobotProvider.swift
2024-11-05 15:22:56,301 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 15:22:56,301 - INFO - Successfully read RobotCharacter.swift
2024-11-05 15:22:56,301 - INFO - Successfully read RobotData.swift
2024-11-05 15:22:56,301 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 15:22:56,302 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 15:22:56,302 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:22:56,302 - INFO - Successfully read StringExtensions.swift
2024-11-05 15:22:56,302 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 15:22:56,302 - INFO - Successfully read ColorExtensions.swift
2024-11-05 15:22:56,302 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 15:22:56,302 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 15:22:56,302 - INFO - Successfully read JointPinComponent.swift
2024-11-05 15:22:56,302 - INFO - Successfully read JointPinSystem.swift
2024-11-05 15:22:56,302 - INFO - Successfully read StartScreenView.swift
2024-11-05 15:22:56,302 - INFO - Successfully read OrnamentView.swift
2024-11-05 15:22:56,302 - INFO - Successfully read SelectorViews.swift
2024-11-05 15:22:56,302 - INFO - Successfully read RobotView.swift
2024-11-05 15:22:56,302 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 15:22:56,302 - INFO - Successfully read ExplorationView.swift
2024-11-05 15:22:56,302 - INFO - Successfully read ContentView.swift
2024-11-05 15:22:56,302 - ERROR - Error extracting relationships from Package.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,302 - ERROR - Error extracting relationships from BOTanistAssets.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,302 - ERROR - Error extracting relationships from EntityExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,302 - ERROR - Error extracting relationships from PlantComponent.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,303 - ERROR - Error extracting relationships from AppState.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,303 - ERROR - Error extracting relationships from PlantAnimationProvider.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,303 - ERROR - Error extracting relationships from AppState+Exploration.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,303 - ERROR - Error extracting relationships from BOTanistApp.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,303 - ERROR - Error extracting relationships from RobotCharacter+Movement.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,303 - ERROR - Error extracting relationships from RobotProvider.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,303 - ERROR - Error extracting relationships from RobotProvider+Loading.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,303 - ERROR - Error extracting relationships from RobotCharacter.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,303 - ERROR - Error extracting relationships from RobotData.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,303 - ERROR - Error extracting relationships from AnimationStateMachine.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,304 - ERROR - Error extracting relationships from RealityView+TouchControls.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,304 - ERROR - Error extracting relationships from EntityExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,304 - ERROR - Error extracting relationships from StringExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,304 - ERROR - Error extracting relationships from Preview+AppStateEnvironment.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,304 - ERROR - Error extracting relationships from ColorExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,304 - ERROR - Error extracting relationships from RealityView+KeyboardControls.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,304 - ERROR - Error extracting relationships from CaseIterableExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,304 - ERROR - Error extracting relationships from JointPinComponent.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,304 - ERROR - Error extracting relationships from JointPinSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,304 - ERROR - Error extracting relationships from StartScreenView.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,304 - ERROR - Error extracting relationships from OrnamentView.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,305 - ERROR - Error extracting relationships from SelectorViews.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,305 - ERROR - Error extracting relationships from RobotView.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,306 - ERROR - Error extracting relationships from RobotCustomizationView.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,306 - ERROR - Error extracting relationships from ExplorationView.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,306 - ERROR - Error extracting relationships from ContentView.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,314 - INFO - Found 4 Swift files
2024-11-05 15:22:56,314 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 15:22:56,314 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 15:22:56,314 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 15:22:56,314 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 15:22:56,314 - INFO - Successfully read EntryPoint.swift
2024-11-05 15:22:56,315 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 15:22:56,315 - INFO - Successfully read DecibelSlider.swift
2024-11-05 15:22:56,315 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 15:22:56,315 - ERROR - Error extracting relationships from EntryPoint.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,315 - ERROR - Error extracting relationships from SpatialAudioView.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,315 - ERROR - Error extracting relationships from DecibelSlider.swift: 'list' object has no attribute 'code'
2024-11-05 15:22:56,315 - ERROR - Error extracting relationships from AxisVisualizer.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:11,530 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 15:25:15,290 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 15:25:17,752 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 15:25:24,921 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 15:25:27,164 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 15:25:27,361 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 15:25:27,364 - INFO - Found 42 Swift files
2024-11-05 15:25:27,364 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 15:25:27,364 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 15:25:27,364 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 15:25:27,364 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 15:25:27,364 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 15:25:27,364 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing Orbit.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing Globe.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing Earth.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing Starfield.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing Sun.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing Module.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 15:25:27,365 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing Modules.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing Package.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 15:25:27,366 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 15:25:27,366 - INFO - Successfully read WorldApp.swift
2024-11-05 15:25:27,366 - INFO - Successfully read SliderGridRow.swift
2024-11-05 15:25:27,366 - INFO - Successfully read EarthSettings.swift
2024-11-05 15:25:27,366 - INFO - Successfully read GlobeSettings.swift
2024-11-05 15:25:27,367 - INFO - Successfully read OrbitSettings.swift
2024-11-05 15:25:27,367 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 15:25:27,367 - INFO - Successfully read SettingsButton.swift
2024-11-05 15:25:27,367 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 15:25:27,367 - INFO - Successfully read OrbitModule.swift
2024-11-05 15:25:27,367 - INFO - Successfully read OrbitToggle.swift
2024-11-05 15:25:27,367 - INFO - Successfully read Orbit.swift
2024-11-05 15:25:27,367 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 15:25:27,367 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 15:25:27,367 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 15:25:27,367 - INFO - Successfully read GlobeToggle.swift
2024-11-05 15:25:27,367 - INFO - Successfully read GlobeControls.swift
2024-11-05 15:25:27,367 - INFO - Successfully read GlobeModule.swift
2024-11-05 15:25:27,367 - INFO - Successfully read Globe.swift
2024-11-05 15:25:27,367 - INFO - Successfully read Earth.swift
2024-11-05 15:25:27,367 - INFO - Successfully read Starfield.swift
2024-11-05 15:25:27,367 - INFO - Successfully read Sun.swift
2024-11-05 15:25:27,368 - INFO - Successfully read ViewModel.swift
2024-11-05 15:25:27,368 - INFO - Successfully read Module.swift
2024-11-05 15:25:27,368 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 15:25:27,368 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 15:25:27,368 - INFO - Successfully read SolarSystem.swift
2024-11-05 15:25:27,368 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 15:25:27,368 - INFO - Successfully read TraceSystem.swift
2024-11-05 15:25:27,368 - INFO - Successfully read RotationSystem.swift
2024-11-05 15:25:27,368 - INFO - Successfully read ModuleDetail.swift
2024-11-05 15:25:27,368 - INFO - Successfully read Modules.swift
2024-11-05 15:25:27,368 - INFO - Successfully read TableOfContents.swift
2024-11-05 15:25:27,368 - INFO - Successfully read ModuleCard.swift
2024-11-05 15:25:27,368 - INFO - Successfully read Entity+Trace.swift
2024-11-05 15:25:27,368 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 15:25:27,368 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 15:25:27,368 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 15:25:27,368 - INFO - Successfully read EarthEntity.swift
2024-11-05 15:25:27,368 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 15:25:27,368 - INFO - Successfully read Package.swift
2024-11-05 15:25:27,369 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 15:25:27,369 - INFO - Successfully read WorldAssets.swift
2024-11-05 15:25:27,369 - ERROR - Error extracting relationships from WorldApp.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,369 - ERROR - Error extracting relationships from SliderGridRow.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,369 - ERROR - Error extracting relationships from EarthSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,369 - ERROR - Error extracting relationships from GlobeSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,369 - ERROR - Error extracting relationships from OrbitSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,369 - ERROR - Error extracting relationships from SatelliteSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from SettingsButton.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from SolarSystemSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from OrbitModule.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from OrbitToggle.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from Orbit.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from TypeTextModifier.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from PlacementGesturesModifier.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from DragRotationModifier.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from GlobeToggle.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from GlobeControls.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from GlobeModule.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from Globe.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from Earth.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from Starfield.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from Sun.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from ViewModel.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from Module.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from SolarSystemToggle.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,370 - ERROR - Error extracting relationships from SolarSystemModule.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from SolarSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from SolarSystemControls.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from TraceSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from RotationSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from ModuleDetail.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from Modules.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from TableOfContents.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from ModuleCard.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from Entity+Trace.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from EarthEntity+Configuration.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from SatelliteEntity.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from Entity+Sunlight.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,371 - ERROR - Error extracting relationships from EarthEntity.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,372 - ERROR - Error extracting relationships from SatelliteEntity+Configuration.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,372 - ERROR - Error extracting relationships from Package.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,372 - ERROR - Error extracting relationships from SunPositionSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,372 - ERROR - Error extracting relationships from WorldAssets.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,387 - INFO - Found 30 Swift files
2024-11-05 15:25:27,387 - INFO - 
Analyzing AppState.swift:
2024-11-05 15:25:27,387 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 15:25:27,387 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 15:25:27,387 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 15:25:27,387 - INFO - 
Analyzing Package.swift:
2024-11-05 15:25:27,387 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 15:25:27,387 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:25:27,387 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 15:25:27,387 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing RobotData.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 15:25:27,388 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 15:25:27,389 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 15:25:27,389 - INFO - 
Analyzing RobotView.swift:
2024-11-05 15:25:27,389 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 15:25:27,389 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 15:25:27,389 - INFO - 
Analyzing ContentView.swift:
2024-11-05 15:25:27,389 - INFO - Successfully read Package.swift
2024-11-05 15:25:27,389 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 15:25:27,389 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:25:27,389 - INFO - Successfully read PlantComponent.swift
2024-11-05 15:25:27,391 - INFO - Successfully read AppState.swift
2024-11-05 15:25:27,391 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 15:25:27,391 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 15:25:27,391 - INFO - Successfully read BOTanistApp.swift
2024-11-05 15:25:27,391 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 15:25:27,391 - INFO - Successfully read RobotProvider.swift
2024-11-05 15:25:27,391 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 15:25:27,391 - INFO - Successfully read RobotCharacter.swift
2024-11-05 15:25:27,391 - INFO - Successfully read RobotData.swift
2024-11-05 15:25:27,391 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 15:25:27,392 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 15:25:27,392 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:25:27,392 - INFO - Successfully read StringExtensions.swift
2024-11-05 15:25:27,392 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 15:25:27,392 - INFO - Successfully read ColorExtensions.swift
2024-11-05 15:25:27,392 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 15:25:27,392 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 15:25:27,392 - INFO - Successfully read JointPinComponent.swift
2024-11-05 15:25:27,392 - INFO - Successfully read JointPinSystem.swift
2024-11-05 15:25:27,392 - INFO - Successfully read StartScreenView.swift
2024-11-05 15:25:27,392 - INFO - Successfully read OrnamentView.swift
2024-11-05 15:25:27,392 - INFO - Successfully read SelectorViews.swift
2024-11-05 15:25:27,392 - INFO - Successfully read RobotView.swift
2024-11-05 15:25:27,392 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 15:25:27,392 - INFO - Successfully read ExplorationView.swift
2024-11-05 15:25:27,392 - INFO - Successfully read ContentView.swift
2024-11-05 15:25:27,392 - ERROR - Error extracting relationships from Package.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,392 - ERROR - Error extracting relationships from BOTanistAssets.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,393 - ERROR - Error extracting relationships from EntityExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,393 - ERROR - Error extracting relationships from PlantComponent.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,393 - ERROR - Error extracting relationships from AppState.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,393 - ERROR - Error extracting relationships from PlantAnimationProvider.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,393 - ERROR - Error extracting relationships from AppState+Exploration.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,393 - ERROR - Error extracting relationships from BOTanistApp.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,393 - ERROR - Error extracting relationships from RobotCharacter+Movement.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,393 - ERROR - Error extracting relationships from RobotProvider.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,393 - ERROR - Error extracting relationships from RobotProvider+Loading.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,393 - ERROR - Error extracting relationships from RobotCharacter.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from RobotData.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from AnimationStateMachine.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from RealityView+TouchControls.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from EntityExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from StringExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from Preview+AppStateEnvironment.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from ColorExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from RealityView+KeyboardControls.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from CaseIterableExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from JointPinComponent.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from JointPinSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from StartScreenView.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,394 - ERROR - Error extracting relationships from OrnamentView.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,395 - ERROR - Error extracting relationships from SelectorViews.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,395 - ERROR - Error extracting relationships from RobotView.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,396 - ERROR - Error extracting relationships from RobotCustomizationView.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,396 - ERROR - Error extracting relationships from ExplorationView.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,396 - ERROR - Error extracting relationships from ContentView.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,402 - INFO - Found 4 Swift files
2024-11-05 15:25:27,402 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 15:25:27,403 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 15:25:27,403 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 15:25:27,403 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 15:25:27,403 - INFO - Successfully read EntryPoint.swift
2024-11-05 15:25:27,403 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 15:25:27,403 - INFO - Successfully read DecibelSlider.swift
2024-11-05 15:25:27,403 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 15:25:27,404 - ERROR - Error extracting relationships from EntryPoint.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,404 - ERROR - Error extracting relationships from SpatialAudioView.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,404 - ERROR - Error extracting relationships from DecibelSlider.swift: 'list' object has no attribute 'code'
2024-11-05 15:25:27,404 - ERROR - Error extracting relationships from AxisVisualizer.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:24,702 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 15:26:28,377 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 15:26:30,594 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 15:26:37,315 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 15:26:39,191 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 15:26:39,377 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 15:26:39,381 - INFO - Found 42 Swift files
2024-11-05 15:26:39,381 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 15:26:39,381 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 15:26:39,381 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 15:26:39,381 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 15:26:39,381 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 15:26:39,381 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 15:26:39,381 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 15:26:39,381 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 15:26:39,381 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing Orbit.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing Globe.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing Earth.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing Starfield.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing Sun.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing Module.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 15:26:39,382 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing Modules.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing Package.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 15:26:39,383 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 15:26:39,383 - INFO - Successfully read WorldApp.swift
2024-11-05 15:26:39,384 - INFO - Successfully read SliderGridRow.swift
2024-11-05 15:26:39,384 - INFO - Successfully read EarthSettings.swift
2024-11-05 15:26:39,384 - INFO - Successfully read GlobeSettings.swift
2024-11-05 15:26:39,384 - INFO - Successfully read OrbitSettings.swift
2024-11-05 15:26:39,384 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 15:26:39,384 - INFO - Successfully read SettingsButton.swift
2024-11-05 15:26:39,384 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 15:26:39,384 - INFO - Successfully read OrbitModule.swift
2024-11-05 15:26:39,384 - INFO - Successfully read OrbitToggle.swift
2024-11-05 15:26:39,384 - INFO - Successfully read Orbit.swift
2024-11-05 15:26:39,384 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 15:26:39,384 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 15:26:39,384 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 15:26:39,384 - INFO - Successfully read GlobeToggle.swift
2024-11-05 15:26:39,384 - INFO - Successfully read GlobeControls.swift
2024-11-05 15:26:39,384 - INFO - Successfully read GlobeModule.swift
2024-11-05 15:26:39,384 - INFO - Successfully read Globe.swift
2024-11-05 15:26:39,385 - INFO - Successfully read Earth.swift
2024-11-05 15:26:39,385 - INFO - Successfully read Starfield.swift
2024-11-05 15:26:39,385 - INFO - Successfully read Sun.swift
2024-11-05 15:26:39,385 - INFO - Successfully read ViewModel.swift
2024-11-05 15:26:39,385 - INFO - Successfully read Module.swift
2024-11-05 15:26:39,385 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 15:26:39,385 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 15:26:39,385 - INFO - Successfully read SolarSystem.swift
2024-11-05 15:26:39,385 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 15:26:39,385 - INFO - Successfully read TraceSystem.swift
2024-11-05 15:26:39,385 - INFO - Successfully read RotationSystem.swift
2024-11-05 15:26:39,385 - INFO - Successfully read ModuleDetail.swift
2024-11-05 15:26:39,385 - INFO - Successfully read Modules.swift
2024-11-05 15:26:39,385 - INFO - Successfully read TableOfContents.swift
2024-11-05 15:26:39,385 - INFO - Successfully read ModuleCard.swift
2024-11-05 15:26:39,385 - INFO - Successfully read Entity+Trace.swift
2024-11-05 15:26:39,385 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 15:26:39,385 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 15:26:39,385 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 15:26:39,385 - INFO - Successfully read EarthEntity.swift
2024-11-05 15:26:39,385 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 15:26:39,385 - INFO - Successfully read Package.swift
2024-11-05 15:26:39,386 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 15:26:39,386 - INFO - Successfully read WorldAssets.swift
2024-11-05 15:26:39,386 - ERROR - Error extracting relationships from WorldApp.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,387 - ERROR - Error extracting relationships from SliderGridRow.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,387 - ERROR - Error extracting relationships from EarthSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,387 - ERROR - Error extracting relationships from GlobeSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,387 - ERROR - Error extracting relationships from OrbitSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,387 - ERROR - Error extracting relationships from SatelliteSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,387 - ERROR - Error extracting relationships from SettingsButton.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,388 - ERROR - Error extracting relationships from SolarSystemSettings.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,388 - ERROR - Error extracting relationships from OrbitModule.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,388 - ERROR - Error extracting relationships from OrbitToggle.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,388 - ERROR - Error extracting relationships from Orbit.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,388 - ERROR - Error extracting relationships from TypeTextModifier.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,388 - ERROR - Error extracting relationships from PlacementGesturesModifier.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,388 - ERROR - Error extracting relationships from DragRotationModifier.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,388 - ERROR - Error extracting relationships from GlobeToggle.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,392 - ERROR - Error extracting relationships from GlobeControls.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,392 - ERROR - Error extracting relationships from GlobeModule.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,392 - ERROR - Error extracting relationships from Globe.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,392 - ERROR - Error extracting relationships from Earth.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,392 - ERROR - Error extracting relationships from Starfield.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,392 - ERROR - Error extracting relationships from Sun.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,392 - ERROR - Error extracting relationships from ViewModel.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,392 - ERROR - Error extracting relationships from Module.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,392 - ERROR - Error extracting relationships from SolarSystemToggle.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,392 - ERROR - Error extracting relationships from SolarSystemModule.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,393 - ERROR - Error extracting relationships from SolarSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,393 - ERROR - Error extracting relationships from SolarSystemControls.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,393 - ERROR - Error extracting relationships from TraceSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,393 - ERROR - Error extracting relationships from RotationSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,393 - ERROR - Error extracting relationships from ModuleDetail.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,393 - ERROR - Error extracting relationships from Modules.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,393 - ERROR - Error extracting relationships from TableOfContents.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,393 - ERROR - Error extracting relationships from ModuleCard.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,393 - ERROR - Error extracting relationships from Entity+Trace.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,393 - ERROR - Error extracting relationships from EarthEntity+Configuration.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,393 - ERROR - Error extracting relationships from SatelliteEntity.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,393 - ERROR - Error extracting relationships from Entity+Sunlight.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,394 - ERROR - Error extracting relationships from EarthEntity.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,394 - ERROR - Error extracting relationships from SatelliteEntity+Configuration.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,394 - ERROR - Error extracting relationships from Package.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,394 - ERROR - Error extracting relationships from SunPositionSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,394 - ERROR - Error extracting relationships from WorldAssets.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,410 - INFO - Found 30 Swift files
2024-11-05 15:26:39,410 - INFO - 
Analyzing AppState.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing Package.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing RobotData.swift:
2024-11-05 15:26:39,411 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 15:26:39,412 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 15:26:39,416 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:26:39,416 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 15:26:39,416 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 15:26:39,416 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 15:26:39,416 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 15:26:39,416 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 15:26:39,416 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 15:26:39,416 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 15:26:39,416 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 15:26:39,416 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 15:26:39,416 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 15:26:39,417 - INFO - 
Analyzing RobotView.swift:
2024-11-05 15:26:39,417 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 15:26:39,417 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 15:26:39,417 - INFO - 
Analyzing ContentView.swift:
2024-11-05 15:26:39,417 - INFO - Successfully read Package.swift
2024-11-05 15:26:39,417 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 15:26:39,417 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:26:39,418 - INFO - Successfully read PlantComponent.swift
2024-11-05 15:26:39,420 - INFO - Successfully read AppState.swift
2024-11-05 15:26:39,420 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 15:26:39,420 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 15:26:39,420 - INFO - Successfully read BOTanistApp.swift
2024-11-05 15:26:39,420 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 15:26:39,420 - INFO - Successfully read RobotProvider.swift
2024-11-05 15:26:39,420 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 15:26:39,420 - INFO - Successfully read RobotCharacter.swift
2024-11-05 15:26:39,420 - INFO - Successfully read RobotData.swift
2024-11-05 15:26:39,421 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 15:26:39,421 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 15:26:39,421 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:26:39,421 - INFO - Successfully read StringExtensions.swift
2024-11-05 15:26:39,421 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 15:26:39,421 - INFO - Successfully read ColorExtensions.swift
2024-11-05 15:26:39,421 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 15:26:39,421 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 15:26:39,421 - INFO - Successfully read JointPinComponent.swift
2024-11-05 15:26:39,421 - INFO - Successfully read JointPinSystem.swift
2024-11-05 15:26:39,421 - INFO - Successfully read StartScreenView.swift
2024-11-05 15:26:39,421 - INFO - Successfully read OrnamentView.swift
2024-11-05 15:26:39,421 - INFO - Successfully read SelectorViews.swift
2024-11-05 15:26:39,421 - INFO - Successfully read RobotView.swift
2024-11-05 15:26:39,425 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 15:26:39,425 - INFO - Successfully read ExplorationView.swift
2024-11-05 15:26:39,425 - INFO - Successfully read ContentView.swift
2024-11-05 15:26:39,425 - ERROR - Error extracting relationships from Package.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,425 - ERROR - Error extracting relationships from BOTanistAssets.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,425 - ERROR - Error extracting relationships from EntityExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,425 - ERROR - Error extracting relationships from PlantComponent.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,426 - ERROR - Error extracting relationships from AppState.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,426 - ERROR - Error extracting relationships from PlantAnimationProvider.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,426 - ERROR - Error extracting relationships from AppState+Exploration.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,426 - ERROR - Error extracting relationships from BOTanistApp.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,426 - ERROR - Error extracting relationships from RobotCharacter+Movement.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,426 - ERROR - Error extracting relationships from RobotProvider.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,426 - ERROR - Error extracting relationships from RobotProvider+Loading.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,426 - ERROR - Error extracting relationships from RobotCharacter.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,427 - ERROR - Error extracting relationships from RobotData.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,427 - ERROR - Error extracting relationships from AnimationStateMachine.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,427 - ERROR - Error extracting relationships from RealityView+TouchControls.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,427 - ERROR - Error extracting relationships from EntityExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,427 - ERROR - Error extracting relationships from StringExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,427 - ERROR - Error extracting relationships from Preview+AppStateEnvironment.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,427 - ERROR - Error extracting relationships from ColorExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,427 - ERROR - Error extracting relationships from RealityView+KeyboardControls.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,427 - ERROR - Error extracting relationships from CaseIterableExtensions.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,427 - ERROR - Error extracting relationships from JointPinComponent.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,428 - ERROR - Error extracting relationships from JointPinSystem.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,428 - ERROR - Error extracting relationships from StartScreenView.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,428 - ERROR - Error extracting relationships from OrnamentView.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,428 - ERROR - Error extracting relationships from SelectorViews.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,428 - ERROR - Error extracting relationships from RobotView.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,429 - ERROR - Error extracting relationships from RobotCustomizationView.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,429 - ERROR - Error extracting relationships from ExplorationView.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,429 - ERROR - Error extracting relationships from ContentView.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,436 - INFO - Found 4 Swift files
2024-11-05 15:26:39,436 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 15:26:39,436 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 15:26:39,436 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 15:26:39,436 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 15:26:39,437 - INFO - Successfully read EntryPoint.swift
2024-11-05 15:26:39,437 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 15:26:39,437 - INFO - Successfully read DecibelSlider.swift
2024-11-05 15:26:39,437 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 15:26:39,437 - ERROR - Error extracting relationships from EntryPoint.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,437 - ERROR - Error extracting relationships from SpatialAudioView.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,437 - ERROR - Error extracting relationships from DecibelSlider.swift: 'list' object has no attribute 'code'
2024-11-05 15:26:39,437 - ERROR - Error extracting relationships from AxisVisualizer.swift: 'list' object has no attribute 'code'
2024-11-05 15:27:38,987 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 15:27:44,347 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 15:27:46,886 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 15:27:54,013 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 15:27:56,193 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 15:27:56,423 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 15:27:56,426 - INFO - Found 42 Swift files
2024-11-05 15:27:56,426 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 15:27:56,426 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 15:27:56,426 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 15:27:56,426 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 15:27:56,426 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing Orbit.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing Globe.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing Earth.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing Starfield.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing Sun.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing Module.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 15:27:56,427 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing Modules.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing Package.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 15:27:56,428 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 15:27:56,428 - INFO - Successfully read WorldApp.swift
2024-11-05 15:27:56,428 - INFO - Successfully read SliderGridRow.swift
2024-11-05 15:27:56,428 - INFO - Successfully read EarthSettings.swift
2024-11-05 15:27:56,429 - INFO - Successfully read GlobeSettings.swift
2024-11-05 15:27:56,429 - INFO - Successfully read OrbitSettings.swift
2024-11-05 15:27:56,429 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 15:27:56,429 - INFO - Successfully read SettingsButton.swift
2024-11-05 15:27:56,429 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 15:27:56,429 - INFO - Successfully read OrbitModule.swift
2024-11-05 15:27:56,429 - INFO - Successfully read OrbitToggle.swift
2024-11-05 15:27:56,429 - INFO - Successfully read Orbit.swift
2024-11-05 15:27:56,429 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 15:27:56,429 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 15:27:56,429 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 15:27:56,429 - INFO - Successfully read GlobeToggle.swift
2024-11-05 15:27:56,429 - INFO - Successfully read GlobeControls.swift
2024-11-05 15:27:56,429 - INFO - Successfully read GlobeModule.swift
2024-11-05 15:27:56,429 - INFO - Successfully read Globe.swift
2024-11-05 15:27:56,429 - INFO - Successfully read Earth.swift
2024-11-05 15:27:56,429 - INFO - Successfully read Starfield.swift
2024-11-05 15:27:56,429 - INFO - Successfully read Sun.swift
2024-11-05 15:27:56,429 - INFO - Successfully read ViewModel.swift
2024-11-05 15:27:56,430 - INFO - Successfully read Module.swift
2024-11-05 15:27:56,430 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 15:27:56,430 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 15:27:56,430 - INFO - Successfully read SolarSystem.swift
2024-11-05 15:27:56,430 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 15:27:56,430 - INFO - Successfully read TraceSystem.swift
2024-11-05 15:27:56,430 - INFO - Successfully read RotationSystem.swift
2024-11-05 15:27:56,430 - INFO - Successfully read ModuleDetail.swift
2024-11-05 15:27:56,430 - INFO - Successfully read Modules.swift
2024-11-05 15:27:56,430 - INFO - Successfully read TableOfContents.swift
2024-11-05 15:27:56,430 - INFO - Successfully read ModuleCard.swift
2024-11-05 15:27:56,430 - INFO - Successfully read Entity+Trace.swift
2024-11-05 15:27:56,430 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 15:27:56,430 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 15:27:56,430 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 15:27:56,430 - INFO - Successfully read EarthEntity.swift
2024-11-05 15:27:56,430 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 15:27:56,430 - INFO - Successfully read Package.swift
2024-11-05 15:27:56,430 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 15:27:56,430 - INFO - Successfully read WorldAssets.swift
2024-11-05 15:27:56,431 - INFO - No relationships found in WorldApp.swift
2024-11-05 15:27:56,431 - INFO - No relationships found in SliderGridRow.swift
2024-11-05 15:27:56,431 - INFO - No relationships found in EarthSettings.swift
2024-11-05 15:27:56,431 - INFO - No relationships found in GlobeSettings.swift
2024-11-05 15:27:56,431 - INFO - No relationships found in OrbitSettings.swift
2024-11-05 15:27:56,431 - INFO - No relationships found in SatelliteSettings.swift
2024-11-05 15:27:56,431 - INFO - No relationships found in SettingsButton.swift
2024-11-05 15:27:56,431 - INFO - No relationships found in SolarSystemSettings.swift
2024-11-05 15:27:56,431 - INFO - No relationships found in OrbitModule.swift
2024-11-05 15:27:56,431 - INFO - No relationships found in OrbitToggle.swift
2024-11-05 15:27:56,431 - INFO - No relationships found in Orbit.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in TypeTextModifier.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in PlacementGesturesModifier.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in DragRotationModifier.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in GlobeToggle.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in GlobeControls.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in GlobeModule.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in Globe.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in Earth.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in Starfield.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in Sun.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in ViewModel.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in Module.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in SolarSystemToggle.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in SolarSystemModule.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in SolarSystem.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in SolarSystemControls.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in TraceSystem.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in RotationSystem.swift
2024-11-05 15:27:56,432 - INFO - No relationships found in ModuleDetail.swift
2024-11-05 15:27:56,433 - INFO - No relationships found in Modules.swift
2024-11-05 15:27:56,433 - INFO - No relationships found in TableOfContents.swift
2024-11-05 15:27:56,433 - INFO - No relationships found in ModuleCard.swift
2024-11-05 15:27:56,433 - INFO - No relationships found in Entity+Trace.swift
2024-11-05 15:27:56,433 - INFO - No relationships found in EarthEntity+Configuration.swift
2024-11-05 15:27:56,433 - INFO - No relationships found in SatelliteEntity.swift
2024-11-05 15:27:56,433 - INFO - No relationships found in Entity+Sunlight.swift
2024-11-05 15:27:56,433 - INFO - No relationships found in EarthEntity.swift
2024-11-05 15:27:56,433 - INFO - No relationships found in SatelliteEntity+Configuration.swift
2024-11-05 15:27:56,433 - INFO - No relationships found in Package.swift
2024-11-05 15:27:56,433 - INFO - No relationships found in SunPositionSystem.swift
2024-11-05 15:27:56,433 - INFO - No relationships found in WorldAssets.swift
2024-11-05 15:27:56,449 - INFO - Found 30 Swift files
2024-11-05 15:27:56,449 - INFO - 
Analyzing AppState.swift:
2024-11-05 15:27:56,449 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 15:27:56,449 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 15:27:56,449 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 15:27:56,450 - INFO - 
Analyzing Package.swift:
2024-11-05 15:27:56,450 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 15:27:56,450 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:27:56,450 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 15:27:56,450 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 15:27:56,450 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 15:27:56,450 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 15:27:56,450 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 15:27:56,450 - INFO - 
Analyzing RobotData.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing RobotView.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 15:27:56,451 - INFO - 
Analyzing ContentView.swift:
2024-11-05 15:27:56,452 - INFO - Successfully read Package.swift
2024-11-05 15:27:56,452 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 15:27:56,452 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:27:56,452 - INFO - Successfully read PlantComponent.swift
2024-11-05 15:27:56,453 - INFO - Successfully read AppState.swift
2024-11-05 15:27:56,453 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 15:27:56,453 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 15:27:56,453 - INFO - Successfully read BOTanistApp.swift
2024-11-05 15:27:56,454 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 15:27:56,454 - INFO - Successfully read RobotProvider.swift
2024-11-05 15:27:56,454 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 15:27:56,454 - INFO - Successfully read RobotCharacter.swift
2024-11-05 15:27:56,454 - INFO - Successfully read RobotData.swift
2024-11-05 15:27:56,454 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 15:27:56,454 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 15:27:56,454 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:27:56,454 - INFO - Successfully read StringExtensions.swift
2024-11-05 15:27:56,454 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 15:27:56,454 - INFO - Successfully read ColorExtensions.swift
2024-11-05 15:27:56,454 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 15:27:56,454 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 15:27:56,454 - INFO - Successfully read JointPinComponent.swift
2024-11-05 15:27:56,454 - INFO - Successfully read JointPinSystem.swift
2024-11-05 15:27:56,454 - INFO - Successfully read StartScreenView.swift
2024-11-05 15:27:56,454 - INFO - Successfully read OrnamentView.swift
2024-11-05 15:27:56,454 - INFO - Successfully read SelectorViews.swift
2024-11-05 15:27:56,454 - INFO - Successfully read RobotView.swift
2024-11-05 15:27:56,454 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 15:27:56,454 - INFO - Successfully read ExplorationView.swift
2024-11-05 15:27:56,454 - INFO - Successfully read ContentView.swift
2024-11-05 15:27:56,454 - INFO - No relationships found in Package.swift
2024-11-05 15:27:56,454 - INFO - No relationships found in BOTanistAssets.swift
2024-11-05 15:27:56,455 - INFO - No relationships found in EntityExtensions.swift
2024-11-05 15:27:56,455 - INFO - No relationships found in PlantComponent.swift
2024-11-05 15:27:56,455 - INFO - No relationships found in AppState.swift
2024-11-05 15:27:56,455 - INFO - No relationships found in PlantAnimationProvider.swift
2024-11-05 15:27:56,455 - INFO - No relationships found in AppState+Exploration.swift
2024-11-05 15:27:56,455 - INFO - No relationships found in BOTanistApp.swift
2024-11-05 15:27:56,455 - INFO - No relationships found in RobotCharacter+Movement.swift
2024-11-05 15:27:56,455 - INFO - No relationships found in RobotProvider.swift
2024-11-05 15:27:56,455 - INFO - No relationships found in RobotProvider+Loading.swift
2024-11-05 15:27:56,455 - INFO - No relationships found in RobotCharacter.swift
2024-11-05 15:27:56,455 - INFO - No relationships found in RobotData.swift
2024-11-05 15:27:56,455 - INFO - No relationships found in AnimationStateMachine.swift
2024-11-05 15:27:56,456 - INFO - No relationships found in RealityView+TouchControls.swift
2024-11-05 15:27:56,456 - INFO - No relationships found in EntityExtensions.swift
2024-11-05 15:27:56,456 - INFO - No relationships found in StringExtensions.swift
2024-11-05 15:27:56,456 - INFO - No relationships found in Preview+AppStateEnvironment.swift
2024-11-05 15:27:56,456 - INFO - No relationships found in ColorExtensions.swift
2024-11-05 15:27:56,456 - INFO - No relationships found in RealityView+KeyboardControls.swift
2024-11-05 15:27:56,456 - INFO - No relationships found in CaseIterableExtensions.swift
2024-11-05 15:27:56,456 - INFO - No relationships found in JointPinComponent.swift
2024-11-05 15:27:56,456 - INFO - No relationships found in JointPinSystem.swift
2024-11-05 15:27:56,456 - INFO - No relationships found in StartScreenView.swift
2024-11-05 15:27:56,456 - INFO - No relationships found in OrnamentView.swift
2024-11-05 15:27:56,457 - INFO - No relationships found in SelectorViews.swift
2024-11-05 15:27:56,457 - INFO - No relationships found in RobotView.swift
2024-11-05 15:27:56,457 - INFO - No relationships found in RobotCustomizationView.swift
2024-11-05 15:27:56,457 - INFO - No relationships found in ExplorationView.swift
2024-11-05 15:27:56,457 - INFO - No relationships found in ContentView.swift
2024-11-05 15:27:56,465 - INFO - Found 4 Swift files
2024-11-05 15:27:56,465 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 15:27:56,465 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 15:27:56,465 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 15:27:56,465 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 15:27:56,466 - INFO - Successfully read EntryPoint.swift
2024-11-05 15:27:56,466 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 15:27:56,466 - INFO - Successfully read DecibelSlider.swift
2024-11-05 15:27:56,466 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 15:27:56,467 - INFO - No relationships found in EntryPoint.swift
2024-11-05 15:27:56,467 - INFO - No relationships found in SpatialAudioView.swift
2024-11-05 15:27:56,467 - INFO - No relationships found in DecibelSlider.swift
2024-11-05 15:27:56,467 - INFO - No relationships found in AxisVisualizer.swift
2024-11-05 15:29:43,601 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 15:29:47,282 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 15:29:49,635 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 15:30:00,349 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 15:30:02,242 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 15:30:02,454 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 15:30:02,457 - INFO - Found 42 Swift files
2024-11-05 15:30:02,457 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 15:30:02,457 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 15:30:02,457 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 15:30:02,457 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing Orbit.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing Globe.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing Earth.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing Starfield.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing Sun.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing Module.swift:
2024-11-05 15:30:02,458 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing Modules.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing Package.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 15:30:02,459 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 15:30:02,460 - INFO - Successfully read WorldApp.swift
2024-11-05 15:30:02,460 - INFO - Successfully read SliderGridRow.swift
2024-11-05 15:30:02,460 - INFO - Successfully read EarthSettings.swift
2024-11-05 15:30:02,460 - INFO - Successfully read GlobeSettings.swift
2024-11-05 15:30:02,460 - INFO - Successfully read OrbitSettings.swift
2024-11-05 15:30:02,460 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 15:30:02,460 - INFO - Successfully read SettingsButton.swift
2024-11-05 15:30:02,460 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 15:30:02,460 - INFO - Successfully read OrbitModule.swift
2024-11-05 15:30:02,460 - INFO - Successfully read OrbitToggle.swift
2024-11-05 15:30:02,460 - INFO - Successfully read Orbit.swift
2024-11-05 15:30:02,460 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 15:30:02,460 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 15:30:02,460 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 15:30:02,460 - INFO - Successfully read GlobeToggle.swift
2024-11-05 15:30:02,460 - INFO - Successfully read GlobeControls.swift
2024-11-05 15:30:02,460 - INFO - Successfully read GlobeModule.swift
2024-11-05 15:30:02,460 - INFO - Successfully read Globe.swift
2024-11-05 15:30:02,461 - INFO - Successfully read Earth.swift
2024-11-05 15:30:02,461 - INFO - Successfully read Starfield.swift
2024-11-05 15:30:02,461 - INFO - Successfully read Sun.swift
2024-11-05 15:30:02,461 - INFO - Successfully read ViewModel.swift
2024-11-05 15:30:02,461 - INFO - Successfully read Module.swift
2024-11-05 15:30:02,461 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 15:30:02,461 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 15:30:02,461 - INFO - Successfully read SolarSystem.swift
2024-11-05 15:30:02,461 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 15:30:02,461 - INFO - Successfully read TraceSystem.swift
2024-11-05 15:30:02,461 - INFO - Successfully read RotationSystem.swift
2024-11-05 15:30:02,461 - INFO - Successfully read ModuleDetail.swift
2024-11-05 15:30:02,461 - INFO - Successfully read Modules.swift
2024-11-05 15:30:02,461 - INFO - Successfully read TableOfContents.swift
2024-11-05 15:30:02,461 - INFO - Successfully read ModuleCard.swift
2024-11-05 15:30:02,461 - INFO - Successfully read Entity+Trace.swift
2024-11-05 15:30:02,461 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 15:30:02,461 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 15:30:02,461 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 15:30:02,461 - INFO - Successfully read EarthEntity.swift
2024-11-05 15:30:02,462 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 15:30:02,462 - INFO - Successfully read Package.swift
2024-11-05 15:30:02,462 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 15:30:02,462 - INFO - Successfully read WorldAssets.swift
2024-11-05 15:30:02,462 - INFO - Found 2 relationships in WorldApp.swift
2024-11-05 15:30:02,462 - INFO - Found 1 relationships in SliderGridRow.swift
2024-11-05 15:30:02,462 - INFO - Found 1 relationships in EarthSettings.swift
2024-11-05 15:30:02,462 - INFO - Found 1 relationships in GlobeSettings.swift
2024-11-05 15:30:02,462 - INFO - Found 1 relationships in OrbitSettings.swift
2024-11-05 15:30:02,462 - INFO - Found 1 relationships in SatelliteSettings.swift
2024-11-05 15:30:02,462 - INFO - Found 1 relationships in SettingsButton.swift
2024-11-05 15:30:02,462 - INFO - Found 1 relationships in SolarSystemSettings.swift
2024-11-05 15:30:02,463 - INFO - Found 3 relationships in OrbitModule.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in OrbitToggle.swift
2024-11-05 15:30:02,463 - INFO - Found 2 relationships in Orbit.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in TypeTextModifier.swift
2024-11-05 15:30:02,463 - INFO - Found 2 relationships in PlacementGesturesModifier.swift
2024-11-05 15:30:02,463 - INFO - Found 2 relationships in DragRotationModifier.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in GlobeToggle.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in GlobeControls.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in GlobeModule.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in Globe.swift
2024-11-05 15:30:02,463 - INFO - Found 3 relationships in Earth.swift
2024-11-05 15:30:02,463 - INFO - Found 2 relationships in Starfield.swift
2024-11-05 15:30:02,463 - INFO - Found 3 relationships in Sun.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in ViewModel.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in Module.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in SolarSystemToggle.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in SolarSystemModule.swift
2024-11-05 15:30:02,463 - INFO - Found 2 relationships in SolarSystem.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in SolarSystemControls.swift
2024-11-05 15:30:02,463 - INFO - Found 2 relationships in TraceSystem.swift
2024-11-05 15:30:02,463 - INFO - Found 2 relationships in RotationSystem.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in ModuleDetail.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in Modules.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in TableOfContents.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in ModuleCard.swift
2024-11-05 15:30:02,463 - INFO - Found 2 relationships in Entity+Trace.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in EarthEntity+Configuration.swift
2024-11-05 15:30:02,463 - INFO - Found 3 relationships in SatelliteEntity.swift
2024-11-05 15:30:02,463 - INFO - Found 2 relationships in Entity+Sunlight.swift
2024-11-05 15:30:02,463 - INFO - Found 3 relationships in EarthEntity.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in SatelliteEntity+Configuration.swift
2024-11-05 15:30:02,463 - INFO - Found 1 relationships in Package.swift
2024-11-05 15:30:02,463 - INFO - Found 3 relationships in SunPositionSystem.swift
2024-11-05 15:30:02,463 - INFO - Found 2 relationships in WorldAssets.swift
2024-11-05 15:30:02,479 - INFO - Found 30 Swift files
2024-11-05 15:30:02,482 - INFO - 
Analyzing AppState.swift:
2024-11-05 15:30:02,482 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 15:30:02,482 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 15:30:02,482 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing Package.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing RobotData.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:30:02,483 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing RobotView.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 15:30:02,484 - INFO - 
Analyzing ContentView.swift:
2024-11-05 15:30:02,485 - INFO - Successfully read Package.swift
2024-11-05 15:30:02,485 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 15:30:02,485 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:30:02,485 - INFO - Successfully read PlantComponent.swift
2024-11-05 15:30:02,487 - INFO - Successfully read AppState.swift
2024-11-05 15:30:02,487 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 15:30:02,487 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 15:30:02,487 - INFO - Successfully read BOTanistApp.swift
2024-11-05 15:30:02,488 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 15:30:02,488 - INFO - Successfully read RobotProvider.swift
2024-11-05 15:30:02,488 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 15:30:02,488 - INFO - Successfully read RobotCharacter.swift
2024-11-05 15:30:02,488 - INFO - Successfully read RobotData.swift
2024-11-05 15:30:02,488 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 15:30:02,488 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 15:30:02,488 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:30:02,488 - INFO - Successfully read StringExtensions.swift
2024-11-05 15:30:02,488 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 15:30:02,488 - INFO - Successfully read ColorExtensions.swift
2024-11-05 15:30:02,488 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 15:30:02,488 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 15:30:02,488 - INFO - Successfully read JointPinComponent.swift
2024-11-05 15:30:02,488 - INFO - Successfully read JointPinSystem.swift
2024-11-05 15:30:02,488 - INFO - Successfully read StartScreenView.swift
2024-11-05 15:30:02,488 - INFO - Successfully read OrnamentView.swift
2024-11-05 15:30:02,492 - INFO - Successfully read SelectorViews.swift
2024-11-05 15:30:02,492 - INFO - Successfully read RobotView.swift
2024-11-05 15:30:02,492 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 15:30:02,492 - INFO - Successfully read ExplorationView.swift
2024-11-05 15:30:02,492 - INFO - Successfully read ContentView.swift
2024-11-05 15:30:02,492 - INFO - Found 1 relationships in Package.swift
2024-11-05 15:30:02,492 - INFO - Found 1 relationships in BOTanistAssets.swift
2024-11-05 15:30:02,492 - INFO - Found 2 relationships in EntityExtensions.swift
2024-11-05 15:30:02,492 - INFO - Found 2 relationships in PlantComponent.swift
2024-11-05 15:30:02,493 - INFO - Found 5 relationships in AppState.swift
2024-11-05 15:30:02,493 - INFO - Found 5 relationships in PlantAnimationProvider.swift
2024-11-05 15:30:02,493 - INFO - Found 5 relationships in AppState+Exploration.swift
2024-11-05 15:30:02,493 - INFO - Found 4 relationships in BOTanistApp.swift
2024-11-05 15:30:02,493 - INFO - Found 6 relationships in RobotCharacter+Movement.swift
2024-11-05 15:30:02,493 - INFO - Found 3 relationships in RobotProvider.swift
2024-11-05 15:30:02,493 - INFO - Found 2 relationships in RobotProvider+Loading.swift
2024-11-05 15:30:02,493 - INFO - Found 6 relationships in RobotCharacter.swift
2024-11-05 15:30:02,493 - INFO - Found 4 relationships in RobotData.swift
2024-11-05 15:30:02,493 - INFO - Found 2 relationships in AnimationStateMachine.swift
2024-11-05 15:30:02,493 - INFO - Found 3 relationships in RealityView+TouchControls.swift
2024-11-05 15:30:02,493 - INFO - Found 3 relationships in EntityExtensions.swift
2024-11-05 15:30:02,493 - INFO - Found 1 relationships in StringExtensions.swift
2024-11-05 15:30:02,493 - INFO - Found 1 relationships in Preview+AppStateEnvironment.swift
2024-11-05 15:30:02,493 - INFO - Found 3 relationships in ColorExtensions.swift
2024-11-05 15:30:02,493 - INFO - Found 3 relationships in RealityView+KeyboardControls.swift
2024-11-05 15:30:02,493 - INFO - Found 3 relationships in CaseIterableExtensions.swift
2024-11-05 15:30:02,493 - INFO - Found 2 relationships in JointPinComponent.swift
2024-11-05 15:30:02,493 - INFO - Found 3 relationships in JointPinSystem.swift
2024-11-05 15:30:02,493 - INFO - Found 1 relationships in StartScreenView.swift
2024-11-05 15:30:02,493 - INFO - Found 2 relationships in OrnamentView.swift
2024-11-05 15:30:02,493 - INFO - Found 5 relationships in SelectorViews.swift
2024-11-05 15:30:02,493 - INFO - Found 3 relationships in RobotView.swift
2024-11-05 15:30:02,493 - INFO - Found 3 relationships in RobotCustomizationView.swift
2024-11-05 15:30:02,493 - INFO - Found 5 relationships in ExplorationView.swift
2024-11-05 15:30:02,493 - INFO - Found 4 relationships in ContentView.swift
2024-11-05 15:30:02,500 - INFO - Found 4 Swift files
2024-11-05 15:30:02,501 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 15:30:02,501 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 15:30:02,501 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 15:30:02,501 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 15:30:02,502 - INFO - Successfully read EntryPoint.swift
2024-11-05 15:30:02,502 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 15:30:02,502 - INFO - Successfully read DecibelSlider.swift
2024-11-05 15:30:02,502 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 15:30:02,502 - INFO - Found 1 relationships in EntryPoint.swift
2024-11-05 15:30:02,502 - INFO - Found 2 relationships in SpatialAudioView.swift
2024-11-05 15:30:02,502 - INFO - Found 1 relationships in DecibelSlider.swift
2024-11-05 15:30:02,502 - INFO - Found 1 relationships in AxisVisualizer.swift
2024-11-05 15:36:23,096 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 15:36:27,232 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 15:36:29,958 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 15:36:35,824 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 15:36:38,016 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 15:36:38,210 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 15:36:38,214 - INFO - Found 42 Swift files
2024-11-05 15:36:38,214 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 15:36:38,214 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 15:36:38,215 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 15:36:38,215 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 15:36:38,215 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 15:36:38,215 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 15:36:38,215 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 15:36:38,215 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 15:36:38,216 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 15:36:38,216 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 15:36:38,216 - INFO - 
Analyzing Orbit.swift:
2024-11-05 15:36:38,216 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 15:36:38,216 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 15:36:38,216 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 15:36:38,217 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 15:36:38,217 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 15:36:38,217 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 15:36:38,217 - INFO - 
Analyzing Globe.swift:
2024-11-05 15:36:38,217 - INFO - 
Analyzing Earth.swift:
2024-11-05 15:36:38,217 - INFO - 
Analyzing Starfield.swift:
2024-11-05 15:36:38,218 - INFO - 
Analyzing Sun.swift:
2024-11-05 15:36:38,218 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 15:36:38,218 - INFO - 
Analyzing Module.swift:
2024-11-05 15:36:38,218 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 15:36:38,219 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 15:36:38,219 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 15:36:38,222 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 15:36:38,222 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 15:36:38,223 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 15:36:38,223 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 15:36:38,223 - INFO - 
Analyzing Modules.swift:
2024-11-05 15:36:38,223 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 15:36:38,223 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 15:36:38,223 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 15:36:38,223 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 15:36:38,223 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 15:36:38,223 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 15:36:38,223 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 15:36:38,224 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 15:36:38,224 - INFO - 
Analyzing Package.swift:
2024-11-05 15:36:38,224 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 15:36:38,224 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 15:36:38,224 - INFO - Successfully read WorldApp.swift
2024-11-05 15:36:38,224 - INFO - Successfully read SliderGridRow.swift
2024-11-05 15:36:38,224 - INFO - Successfully read EarthSettings.swift
2024-11-05 15:36:38,224 - INFO - Successfully read GlobeSettings.swift
2024-11-05 15:36:38,224 - INFO - Successfully read OrbitSettings.swift
2024-11-05 15:36:38,224 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 15:36:38,224 - INFO - Successfully read SettingsButton.swift
2024-11-05 15:36:38,224 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 15:36:38,224 - INFO - Successfully read OrbitModule.swift
2024-11-05 15:36:38,225 - INFO - Successfully read OrbitToggle.swift
2024-11-05 15:36:38,225 - INFO - Successfully read Orbit.swift
2024-11-05 15:36:38,225 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 15:36:38,225 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 15:36:38,225 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 15:36:38,225 - INFO - Successfully read GlobeToggle.swift
2024-11-05 15:36:38,225 - INFO - Successfully read GlobeControls.swift
2024-11-05 15:36:38,225 - INFO - Successfully read GlobeModule.swift
2024-11-05 15:36:38,225 - INFO - Successfully read Globe.swift
2024-11-05 15:36:38,225 - INFO - Successfully read Earth.swift
2024-11-05 15:36:38,225 - INFO - Successfully read Starfield.swift
2024-11-05 15:36:38,225 - INFO - Successfully read Sun.swift
2024-11-05 15:36:38,225 - INFO - Successfully read ViewModel.swift
2024-11-05 15:36:38,226 - INFO - Successfully read Module.swift
2024-11-05 15:36:38,226 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 15:36:38,226 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 15:36:38,226 - INFO - Successfully read SolarSystem.swift
2024-11-05 15:36:38,226 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 15:36:38,226 - INFO - Successfully read TraceSystem.swift
2024-11-05 15:36:38,226 - INFO - Successfully read RotationSystem.swift
2024-11-05 15:36:38,226 - INFO - Successfully read ModuleDetail.swift
2024-11-05 15:36:38,226 - INFO - Successfully read Modules.swift
2024-11-05 15:36:38,226 - INFO - Successfully read TableOfContents.swift
2024-11-05 15:36:38,226 - INFO - Successfully read ModuleCard.swift
2024-11-05 15:36:38,226 - INFO - Successfully read Entity+Trace.swift
2024-11-05 15:36:38,226 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 15:36:38,226 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 15:36:38,226 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 15:36:38,226 - INFO - Successfully read EarthEntity.swift
2024-11-05 15:36:38,226 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 15:36:38,227 - INFO - Successfully read Package.swift
2024-11-05 15:36:38,227 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 15:36:38,227 - INFO - Successfully read WorldAssets.swift
2024-11-05 15:36:38,228 - INFO - Found 4 relationships in WorldApp.swift
2024-11-05 15:36:38,231 - INFO - Found 1 relationships in SliderGridRow.swift
2024-11-05 15:36:38,231 - INFO - Found 1 relationships in EarthSettings.swift
2024-11-05 15:36:38,231 - INFO - Found 1 relationships in GlobeSettings.swift
2024-11-05 15:36:38,231 - INFO - Found 1 relationships in OrbitSettings.swift
2024-11-05 15:36:38,231 - INFO - Found 1 relationships in SatelliteSettings.swift
2024-11-05 15:36:38,231 - INFO - Found 1 relationships in SettingsButton.swift
2024-11-05 15:36:38,231 - INFO - Found 1 relationships in SolarSystemSettings.swift
2024-11-05 15:36:38,231 - INFO - Found 3 relationships in OrbitModule.swift
2024-11-05 15:36:38,232 - INFO - Found 2 relationships in OrbitToggle.swift
2024-11-05 15:36:38,232 - INFO - Found 2 relationships in Orbit.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in TypeTextModifier.swift
2024-11-05 15:36:38,232 - INFO - Found 2 relationships in PlacementGesturesModifier.swift
2024-11-05 15:36:38,232 - INFO - Found 2 relationships in DragRotationModifier.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in GlobeToggle.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in GlobeControls.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in GlobeModule.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in Globe.swift
2024-11-05 15:36:38,232 - INFO - Found 4 relationships in Earth.swift
2024-11-05 15:36:38,232 - INFO - Found 3 relationships in Starfield.swift
2024-11-05 15:36:38,232 - INFO - Found 4 relationships in Sun.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in ViewModel.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in Module.swift
2024-11-05 15:36:38,232 - INFO - Found 2 relationships in SolarSystemToggle.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in SolarSystemModule.swift
2024-11-05 15:36:38,232 - INFO - Found 2 relationships in SolarSystem.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in SolarSystemControls.swift
2024-11-05 15:36:38,232 - INFO - Found 2 relationships in TraceSystem.swift
2024-11-05 15:36:38,232 - INFO - Found 2 relationships in RotationSystem.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in ModuleDetail.swift
2024-11-05 15:36:38,232 - INFO - Found 2 relationships in Modules.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in TableOfContents.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in ModuleCard.swift
2024-11-05 15:36:38,232 - INFO - Found 2 relationships in Entity+Trace.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in EarthEntity+Configuration.swift
2024-11-05 15:36:38,232 - INFO - Found 3 relationships in SatelliteEntity.swift
2024-11-05 15:36:38,232 - INFO - Found 2 relationships in Entity+Sunlight.swift
2024-11-05 15:36:38,232 - INFO - Found 3 relationships in EarthEntity.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in SatelliteEntity+Configuration.swift
2024-11-05 15:36:38,232 - INFO - Found 1 relationships in Package.swift
2024-11-05 15:36:38,232 - INFO - Found 3 relationships in SunPositionSystem.swift
2024-11-05 15:36:38,232 - INFO - Found 3 relationships in WorldAssets.swift
2024-11-05 15:36:38,247 - INFO - Found 30 Swift files
2024-11-05 15:36:38,247 - INFO - 
Analyzing AppState.swift:
2024-11-05 15:36:38,247 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 15:36:38,247 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 15:36:38,247 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 15:36:38,247 - INFO - 
Analyzing Package.swift:
2024-11-05 15:36:38,247 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 15:36:38,247 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:36:38,247 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 15:36:38,248 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 15:36:38,248 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 15:36:38,248 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 15:36:38,251 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing RobotData.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 15:36:38,252 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 15:36:38,253 - INFO - 
Analyzing RobotView.swift:
2024-11-05 15:36:38,253 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 15:36:38,253 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 15:36:38,253 - INFO - 
Analyzing ContentView.swift:
2024-11-05 15:36:38,253 - INFO - Successfully read Package.swift
2024-11-05 15:36:38,253 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 15:36:38,253 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:36:38,253 - INFO - Successfully read PlantComponent.swift
2024-11-05 15:36:38,254 - INFO - Successfully read AppState.swift
2024-11-05 15:36:38,255 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 15:36:38,255 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 15:36:38,255 - INFO - Successfully read BOTanistApp.swift
2024-11-05 15:36:38,255 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 15:36:38,255 - INFO - Successfully read RobotProvider.swift
2024-11-05 15:36:38,255 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 15:36:38,255 - INFO - Successfully read RobotCharacter.swift
2024-11-05 15:36:38,255 - INFO - Successfully read RobotData.swift
2024-11-05 15:36:38,255 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 15:36:38,255 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 15:36:38,255 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:36:38,255 - INFO - Successfully read StringExtensions.swift
2024-11-05 15:36:38,255 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 15:36:38,255 - INFO - Successfully read ColorExtensions.swift
2024-11-05 15:36:38,255 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 15:36:38,255 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 15:36:38,256 - INFO - Successfully read JointPinComponent.swift
2024-11-05 15:36:38,256 - INFO - Successfully read JointPinSystem.swift
2024-11-05 15:36:38,256 - INFO - Successfully read StartScreenView.swift
2024-11-05 15:36:38,256 - INFO - Successfully read OrnamentView.swift
2024-11-05 15:36:38,256 - INFO - Successfully read SelectorViews.swift
2024-11-05 15:36:38,256 - INFO - Successfully read RobotView.swift
2024-11-05 15:36:38,256 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 15:36:38,256 - INFO - Successfully read ExplorationView.swift
2024-11-05 15:36:38,256 - INFO - Successfully read ContentView.swift
2024-11-05 15:36:38,256 - INFO - Found 1 relationships in Package.swift
2024-11-05 15:36:38,256 - INFO - Found 1 relationships in BOTanistAssets.swift
2024-11-05 15:36:38,256 - INFO - Found 2 relationships in EntityExtensions.swift
2024-11-05 15:36:38,256 - INFO - Found 2 relationships in PlantComponent.swift
2024-11-05 15:36:38,256 - INFO - Found 6 relationships in AppState.swift
2024-11-05 15:36:38,256 - INFO - Found 5 relationships in PlantAnimationProvider.swift
2024-11-05 15:36:38,256 - INFO - Found 5 relationships in AppState+Exploration.swift
2024-11-05 15:36:38,256 - INFO - Found 5 relationships in BOTanistApp.swift
2024-11-05 15:36:38,256 - INFO - Found 6 relationships in RobotCharacter+Movement.swift
2024-11-05 15:36:38,256 - INFO - Found 3 relationships in RobotProvider.swift
2024-11-05 15:36:38,256 - INFO - Found 2 relationships in RobotProvider+Loading.swift
2024-11-05 15:36:38,256 - INFO - Found 6 relationships in RobotCharacter.swift
2024-11-05 15:36:38,256 - INFO - Found 4 relationships in RobotData.swift
2024-11-05 15:36:38,256 - INFO - Found 2 relationships in AnimationStateMachine.swift
2024-11-05 15:36:38,256 - INFO - Found 4 relationships in RealityView+TouchControls.swift
2024-11-05 15:36:38,256 - INFO - Found 3 relationships in EntityExtensions.swift
2024-11-05 15:36:38,257 - INFO - Found 1 relationships in StringExtensions.swift
2024-11-05 15:36:38,257 - INFO - Found 1 relationships in Preview+AppStateEnvironment.swift
2024-11-05 15:36:38,257 - INFO - Found 3 relationships in ColorExtensions.swift
2024-11-05 15:36:38,257 - INFO - Found 4 relationships in RealityView+KeyboardControls.swift
2024-11-05 15:36:38,257 - INFO - Found 3 relationships in CaseIterableExtensions.swift
2024-11-05 15:36:38,257 - INFO - Found 2 relationships in JointPinComponent.swift
2024-11-05 15:36:38,257 - INFO - Found 3 relationships in JointPinSystem.swift
2024-11-05 15:36:38,257 - INFO - Found 1 relationships in StartScreenView.swift
2024-11-05 15:36:38,257 - INFO - Found 2 relationships in OrnamentView.swift
2024-11-05 15:36:38,257 - INFO - Found 5 relationships in SelectorViews.swift
2024-11-05 15:36:38,257 - INFO - Found 4 relationships in RobotView.swift
2024-11-05 15:36:38,257 - INFO - Found 3 relationships in RobotCustomizationView.swift
2024-11-05 15:36:38,257 - INFO - Found 6 relationships in ExplorationView.swift
2024-11-05 15:36:38,257 - INFO - Found 4 relationships in ContentView.swift
2024-11-05 15:36:38,264 - INFO - Found 4 Swift files
2024-11-05 15:36:38,264 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 15:36:38,264 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 15:36:38,265 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 15:36:38,265 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 15:36:38,265 - INFO - Successfully read EntryPoint.swift
2024-11-05 15:36:38,265 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 15:36:38,265 - INFO - Successfully read DecibelSlider.swift
2024-11-05 15:36:38,265 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 15:36:38,266 - INFO - Found 2 relationships in EntryPoint.swift
2024-11-05 15:36:38,266 - INFO - Found 3 relationships in SpatialAudioView.swift
2024-11-05 15:36:38,266 - INFO - Found 1 relationships in DecibelSlider.swift
2024-11-05 15:36:38,266 - INFO - Found 1 relationships in AxisVisualizer.swift
2024-11-05 15:47:33,828 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 15:47:41,682 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 15:47:43,878 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 15:47:51,559 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 15:47:53,786 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 15:47:54,025 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 15:47:54,029 - INFO - Found 42 Swift files
2024-11-05 15:47:54,029 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 15:47:54,029 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 15:47:54,029 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 15:47:54,029 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 15:47:54,029 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 15:47:54,030 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 15:47:54,030 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 15:47:54,030 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 15:47:54,030 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 15:47:54,030 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 15:47:54,030 - INFO - 
Analyzing Orbit.swift:
2024-11-05 15:47:54,031 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 15:47:54,031 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 15:47:54,031 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 15:47:54,031 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 15:47:54,031 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 15:47:54,031 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 15:47:54,031 - INFO - 
Analyzing Globe.swift:
2024-11-05 15:47:54,032 - INFO - 
Analyzing Earth.swift:
2024-11-05 15:47:54,032 - INFO - 
Analyzing Starfield.swift:
2024-11-05 15:47:54,033 - INFO - 
Analyzing Sun.swift:
2024-11-05 15:47:54,033 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 15:47:54,033 - INFO - 
Analyzing Module.swift:
2024-11-05 15:47:54,033 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 15:47:54,033 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 15:47:54,033 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 15:47:54,033 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 15:47:54,033 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 15:47:54,033 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 15:47:54,033 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 15:47:54,034 - INFO - 
Analyzing Modules.swift:
2024-11-05 15:47:54,034 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 15:47:54,034 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 15:47:54,034 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 15:47:54,034 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 15:47:54,035 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 15:47:54,035 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 15:47:54,035 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 15:47:54,036 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 15:47:54,036 - INFO - 
Analyzing Package.swift:
2024-11-05 15:47:54,036 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 15:47:54,036 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 15:47:54,036 - INFO - Successfully read WorldApp.swift
2024-11-05 15:47:54,036 - INFO - Successfully read SliderGridRow.swift
2024-11-05 15:47:54,036 - INFO - Successfully read EarthSettings.swift
2024-11-05 15:47:54,036 - INFO - Successfully read GlobeSettings.swift
2024-11-05 15:47:54,036 - INFO - Successfully read OrbitSettings.swift
2024-11-05 15:47:54,036 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 15:47:54,037 - INFO - Successfully read SettingsButton.swift
2024-11-05 15:47:54,037 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 15:47:54,037 - INFO - Successfully read OrbitModule.swift
2024-11-05 15:47:54,037 - INFO - Successfully read OrbitToggle.swift
2024-11-05 15:47:54,037 - INFO - Successfully read Orbit.swift
2024-11-05 15:47:54,037 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 15:47:54,037 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 15:47:54,037 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 15:47:54,037 - INFO - Successfully read GlobeToggle.swift
2024-11-05 15:47:54,037 - INFO - Successfully read GlobeControls.swift
2024-11-05 15:47:54,037 - INFO - Successfully read GlobeModule.swift
2024-11-05 15:47:54,037 - INFO - Successfully read Globe.swift
2024-11-05 15:47:54,037 - INFO - Successfully read Earth.swift
2024-11-05 15:47:54,037 - INFO - Successfully read Starfield.swift
2024-11-05 15:47:54,037 - INFO - Successfully read Sun.swift
2024-11-05 15:47:54,037 - INFO - Successfully read ViewModel.swift
2024-11-05 15:47:54,038 - INFO - Successfully read Module.swift
2024-11-05 15:47:54,038 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 15:47:54,038 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 15:47:54,038 - INFO - Successfully read SolarSystem.swift
2024-11-05 15:47:54,038 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 15:47:54,038 - INFO - Successfully read TraceSystem.swift
2024-11-05 15:47:54,038 - INFO - Successfully read RotationSystem.swift
2024-11-05 15:47:54,038 - INFO - Successfully read ModuleDetail.swift
2024-11-05 15:47:54,038 - INFO - Successfully read Modules.swift
2024-11-05 15:47:54,038 - INFO - Successfully read TableOfContents.swift
2024-11-05 15:47:54,038 - INFO - Successfully read ModuleCard.swift
2024-11-05 15:47:54,038 - INFO - Successfully read Entity+Trace.swift
2024-11-05 15:47:54,038 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 15:47:54,038 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 15:47:54,038 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 15:47:54,038 - INFO - Successfully read EarthEntity.swift
2024-11-05 15:47:54,038 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 15:47:54,038 - INFO - Successfully read Package.swift
2024-11-05 15:47:54,039 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 15:47:54,039 - INFO - Successfully read WorldAssets.swift
2024-11-05 15:47:54,039 - INFO - Found 4 relationships in WorldApp.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in SliderGridRow.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in EarthSettings.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in GlobeSettings.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in OrbitSettings.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in SatelliteSettings.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in SettingsButton.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in SolarSystemSettings.swift
2024-11-05 15:47:54,040 - INFO - Found 3 relationships in OrbitModule.swift
2024-11-05 15:47:54,040 - INFO - Found 2 relationships in OrbitToggle.swift
2024-11-05 15:47:54,040 - INFO - Found 2 relationships in Orbit.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in TypeTextModifier.swift
2024-11-05 15:47:54,040 - INFO - Found 2 relationships in PlacementGesturesModifier.swift
2024-11-05 15:47:54,040 - INFO - Found 2 relationships in DragRotationModifier.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in GlobeToggle.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in GlobeControls.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in GlobeModule.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in Globe.swift
2024-11-05 15:47:54,040 - INFO - Found 4 relationships in Earth.swift
2024-11-05 15:47:54,040 - INFO - Found 3 relationships in Starfield.swift
2024-11-05 15:47:54,040 - INFO - Found 4 relationships in Sun.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in ViewModel.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in Module.swift
2024-11-05 15:47:54,040 - INFO - Found 2 relationships in SolarSystemToggle.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in SolarSystemModule.swift
2024-11-05 15:47:54,040 - INFO - Found 2 relationships in SolarSystem.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in SolarSystemControls.swift
2024-11-05 15:47:54,040 - INFO - Found 2 relationships in TraceSystem.swift
2024-11-05 15:47:54,040 - INFO - Found 2 relationships in RotationSystem.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in ModuleDetail.swift
2024-11-05 15:47:54,040 - INFO - Found 2 relationships in Modules.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in TableOfContents.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in ModuleCard.swift
2024-11-05 15:47:54,040 - INFO - Found 2 relationships in Entity+Trace.swift
2024-11-05 15:47:54,040 - INFO - Found 1 relationships in EarthEntity+Configuration.swift
2024-11-05 15:47:54,041 - INFO - Found 3 relationships in SatelliteEntity.swift
2024-11-05 15:47:54,041 - INFO - Found 2 relationships in Entity+Sunlight.swift
2024-11-05 15:47:54,041 - INFO - Found 3 relationships in EarthEntity.swift
2024-11-05 15:47:54,041 - INFO - Found 1 relationships in SatelliteEntity+Configuration.swift
2024-11-05 15:47:54,041 - INFO - Found 1 relationships in Package.swift
2024-11-05 15:47:54,041 - INFO - Found 3 relationships in SunPositionSystem.swift
2024-11-05 15:47:54,041 - INFO - Found 3 relationships in WorldAssets.swift
2024-11-05 15:47:54,056 - INFO - Found 30 Swift files
2024-11-05 15:47:54,056 - INFO - 
Analyzing AppState.swift:
2024-11-05 15:47:54,056 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 15:47:54,056 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 15:47:54,056 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 15:47:54,056 - INFO - 
Analyzing Package.swift:
2024-11-05 15:47:54,056 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 15:47:54,056 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:47:54,057 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 15:47:54,057 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 15:47:54,057 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 15:47:54,057 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 15:47:54,057 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 15:47:54,057 - INFO - 
Analyzing RobotData.swift:
2024-11-05 15:47:54,057 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 15:47:54,057 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 15:47:54,057 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 15:47:54,057 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing RobotView.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 15:47:54,058 - INFO - 
Analyzing ContentView.swift:
2024-11-05 15:47:54,058 - INFO - Successfully read Package.swift
2024-11-05 15:47:54,059 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 15:47:54,059 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:47:54,059 - INFO - Successfully read PlantComponent.swift
2024-11-05 15:47:54,060 - INFO - Successfully read AppState.swift
2024-11-05 15:47:54,060 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 15:47:54,060 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 15:47:54,060 - INFO - Successfully read BOTanistApp.swift
2024-11-05 15:47:54,061 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 15:47:54,061 - INFO - Successfully read RobotProvider.swift
2024-11-05 15:47:54,061 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 15:47:54,061 - INFO - Successfully read RobotCharacter.swift
2024-11-05 15:47:54,061 - INFO - Successfully read RobotData.swift
2024-11-05 15:47:54,061 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 15:47:54,061 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 15:47:54,061 - INFO - Successfully read EntityExtensions.swift
2024-11-05 15:47:54,061 - INFO - Successfully read StringExtensions.swift
2024-11-05 15:47:54,061 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 15:47:54,061 - INFO - Successfully read ColorExtensions.swift
2024-11-05 15:47:54,061 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 15:47:54,061 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 15:47:54,061 - INFO - Successfully read JointPinComponent.swift
2024-11-05 15:47:54,062 - INFO - Successfully read JointPinSystem.swift
2024-11-05 15:47:54,062 - INFO - Successfully read StartScreenView.swift
2024-11-05 15:47:54,062 - INFO - Successfully read OrnamentView.swift
2024-11-05 15:47:54,062 - INFO - Successfully read SelectorViews.swift
2024-11-05 15:47:54,062 - INFO - Successfully read RobotView.swift
2024-11-05 15:47:54,062 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 15:47:54,062 - INFO - Successfully read ExplorationView.swift
2024-11-05 15:47:54,062 - INFO - Successfully read ContentView.swift
2024-11-05 15:47:54,062 - INFO - Found 1 relationships in Package.swift
2024-11-05 15:47:54,062 - INFO - Found 1 relationships in BOTanistAssets.swift
2024-11-05 15:47:54,062 - INFO - Found 2 relationships in EntityExtensions.swift
2024-11-05 15:47:54,062 - INFO - Found 2 relationships in PlantComponent.swift
2024-11-05 15:47:54,062 - INFO - Found 6 relationships in AppState.swift
2024-11-05 15:47:54,062 - INFO - Found 5 relationships in PlantAnimationProvider.swift
2024-11-05 15:47:54,062 - INFO - Found 5 relationships in AppState+Exploration.swift
2024-11-05 15:47:54,062 - INFO - Found 5 relationships in BOTanistApp.swift
2024-11-05 15:47:54,062 - INFO - Found 6 relationships in RobotCharacter+Movement.swift
2024-11-05 15:47:54,062 - INFO - Found 3 relationships in RobotProvider.swift
2024-11-05 15:47:54,062 - INFO - Found 2 relationships in RobotProvider+Loading.swift
2024-11-05 15:47:54,063 - INFO - Found 6 relationships in RobotCharacter.swift
2024-11-05 15:47:54,063 - INFO - Found 4 relationships in RobotData.swift
2024-11-05 15:47:54,063 - INFO - Found 2 relationships in AnimationStateMachine.swift
2024-11-05 15:47:54,063 - INFO - Found 4 relationships in RealityView+TouchControls.swift
2024-11-05 15:47:54,063 - INFO - Found 3 relationships in EntityExtensions.swift
2024-11-05 15:47:54,063 - INFO - Found 1 relationships in StringExtensions.swift
2024-11-05 15:47:54,063 - INFO - Found 1 relationships in Preview+AppStateEnvironment.swift
2024-11-05 15:47:54,063 - INFO - Found 3 relationships in ColorExtensions.swift
2024-11-05 15:47:54,063 - INFO - Found 4 relationships in RealityView+KeyboardControls.swift
2024-11-05 15:47:54,063 - INFO - Found 3 relationships in CaseIterableExtensions.swift
2024-11-05 15:47:54,063 - INFO - Found 2 relationships in JointPinComponent.swift
2024-11-05 15:47:54,063 - INFO - Found 3 relationships in JointPinSystem.swift
2024-11-05 15:47:54,063 - INFO - Found 1 relationships in StartScreenView.swift
2024-11-05 15:47:54,063 - INFO - Found 2 relationships in OrnamentView.swift
2024-11-05 15:47:54,063 - INFO - Found 5 relationships in SelectorViews.swift
2024-11-05 15:47:54,063 - INFO - Found 4 relationships in RobotView.swift
2024-11-05 15:47:54,063 - INFO - Found 3 relationships in RobotCustomizationView.swift
2024-11-05 15:47:54,063 - INFO - Found 6 relationships in ExplorationView.swift
2024-11-05 15:47:54,063 - INFO - Found 4 relationships in ContentView.swift
2024-11-05 15:47:54,071 - INFO - Found 4 Swift files
2024-11-05 15:47:54,072 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 15:47:54,072 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 15:47:54,072 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 15:47:54,072 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 15:47:54,072 - INFO - Successfully read EntryPoint.swift
2024-11-05 15:47:54,072 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 15:47:54,072 - INFO - Successfully read DecibelSlider.swift
2024-11-05 15:47:54,072 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 15:47:54,073 - INFO - Found 2 relationships in EntryPoint.swift
2024-11-05 15:47:54,073 - INFO - Found 3 relationships in SpatialAudioView.swift
2024-11-05 15:47:54,073 - INFO - Found 1 relationships in DecibelSlider.swift
2024-11-05 15:47:54,073 - INFO - Found 1 relationships in AxisVisualizer.swift
2024-11-05 16:04:06,088 - INFO - Saved HTML to debug/visionos.html
2024-11-05 16:04:06,770 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 16:04:07,295 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 16:04:10,205 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 16:04:15,161 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 16:04:17,965 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 16:04:25,971 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 16:04:28,281 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 16:04:28,508 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 16:04:28,511 - INFO - Found 42 Swift files
2024-11-05 16:04:28,512 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing Orbit.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing Globe.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing Earth.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing Starfield.swift:
2024-11-05 16:04:28,512 - INFO - 
Analyzing Sun.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing Module.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing Modules.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing Package.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 16:04:28,513 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 16:04:28,514 - INFO - Successfully read WorldApp.swift
2024-11-05 16:04:28,514 - INFO - Successfully read SliderGridRow.swift
2024-11-05 16:04:28,514 - INFO - Successfully read EarthSettings.swift
2024-11-05 16:04:28,514 - INFO - Successfully read GlobeSettings.swift
2024-11-05 16:04:28,514 - INFO - Successfully read OrbitSettings.swift
2024-11-05 16:04:28,514 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 16:04:28,514 - INFO - Successfully read SettingsButton.swift
2024-11-05 16:04:28,514 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 16:04:28,514 - INFO - Successfully read OrbitModule.swift
2024-11-05 16:04:28,514 - INFO - Successfully read OrbitToggle.swift
2024-11-05 16:04:28,514 - INFO - Successfully read Orbit.swift
2024-11-05 16:04:28,514 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 16:04:28,514 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 16:04:28,514 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 16:04:28,514 - INFO - Successfully read GlobeToggle.swift
2024-11-05 16:04:28,514 - INFO - Successfully read GlobeControls.swift
2024-11-05 16:04:28,514 - INFO - Successfully read GlobeModule.swift
2024-11-05 16:04:28,514 - INFO - Successfully read Globe.swift
2024-11-05 16:04:28,515 - INFO - Successfully read Earth.swift
2024-11-05 16:04:28,515 - INFO - Successfully read Starfield.swift
2024-11-05 16:04:28,515 - INFO - Successfully read Sun.swift
2024-11-05 16:04:28,515 - INFO - Successfully read ViewModel.swift
2024-11-05 16:04:28,515 - INFO - Successfully read Module.swift
2024-11-05 16:04:28,515 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 16:04:28,515 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 16:04:28,515 - INFO - Successfully read SolarSystem.swift
2024-11-05 16:04:28,515 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 16:04:28,515 - INFO - Successfully read TraceSystem.swift
2024-11-05 16:04:28,515 - INFO - Successfully read RotationSystem.swift
2024-11-05 16:04:28,515 - INFO - Successfully read ModuleDetail.swift
2024-11-05 16:04:28,515 - INFO - Successfully read Modules.swift
2024-11-05 16:04:28,515 - INFO - Successfully read TableOfContents.swift
2024-11-05 16:04:28,515 - INFO - Successfully read ModuleCard.swift
2024-11-05 16:04:28,515 - INFO - Successfully read Entity+Trace.swift
2024-11-05 16:04:28,515 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 16:04:28,515 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 16:04:28,515 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 16:04:28,515 - INFO - Successfully read EarthEntity.swift
2024-11-05 16:04:28,515 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 16:04:28,516 - INFO - Successfully read Package.swift
2024-11-05 16:04:28,516 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 16:04:28,516 - INFO - Successfully read WorldAssets.swift
2024-11-05 16:04:28,516 - INFO - Found 4 relationships in WorldApp.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in SliderGridRow.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in EarthSettings.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in GlobeSettings.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in OrbitSettings.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in SatelliteSettings.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in SettingsButton.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in SolarSystemSettings.swift
2024-11-05 16:04:28,517 - INFO - Found 3 relationships in OrbitModule.swift
2024-11-05 16:04:28,517 - INFO - Found 2 relationships in OrbitToggle.swift
2024-11-05 16:04:28,517 - INFO - Found 2 relationships in Orbit.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in TypeTextModifier.swift
2024-11-05 16:04:28,517 - INFO - Found 2 relationships in PlacementGesturesModifier.swift
2024-11-05 16:04:28,517 - INFO - Found 2 relationships in DragRotationModifier.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in GlobeToggle.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in GlobeControls.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in GlobeModule.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in Globe.swift
2024-11-05 16:04:28,517 - INFO - Found 4 relationships in Earth.swift
2024-11-05 16:04:28,517 - INFO - Found 3 relationships in Starfield.swift
2024-11-05 16:04:28,517 - INFO - Found 4 relationships in Sun.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in ViewModel.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in Module.swift
2024-11-05 16:04:28,517 - INFO - Found 2 relationships in SolarSystemToggle.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in SolarSystemModule.swift
2024-11-05 16:04:28,517 - INFO - Found 2 relationships in SolarSystem.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in SolarSystemControls.swift
2024-11-05 16:04:28,517 - INFO - Found 2 relationships in TraceSystem.swift
2024-11-05 16:04:28,517 - INFO - Found 2 relationships in RotationSystem.swift
2024-11-05 16:04:28,517 - INFO - Found 1 relationships in ModuleDetail.swift
2024-11-05 16:04:28,517 - INFO - Found 2 relationships in Modules.swift
2024-11-05 16:04:28,518 - INFO - Found 1 relationships in TableOfContents.swift
2024-11-05 16:04:28,518 - INFO - Found 1 relationships in ModuleCard.swift
2024-11-05 16:04:28,518 - INFO - Found 2 relationships in Entity+Trace.swift
2024-11-05 16:04:28,518 - INFO - Found 1 relationships in EarthEntity+Configuration.swift
2024-11-05 16:04:28,518 - INFO - Found 3 relationships in SatelliteEntity.swift
2024-11-05 16:04:28,518 - INFO - Found 2 relationships in Entity+Sunlight.swift
2024-11-05 16:04:28,518 - INFO - Found 3 relationships in EarthEntity.swift
2024-11-05 16:04:28,518 - INFO - Found 1 relationships in SatelliteEntity+Configuration.swift
2024-11-05 16:04:28,518 - INFO - Found 1 relationships in Package.swift
2024-11-05 16:04:28,518 - INFO - Found 3 relationships in SunPositionSystem.swift
2024-11-05 16:04:28,518 - INFO - Found 3 relationships in WorldAssets.swift
2024-11-05 16:04:28,533 - INFO - Found 30 Swift files
2024-11-05 16:04:28,533 - INFO - 
Analyzing AppState.swift:
2024-11-05 16:04:28,533 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 16:04:28,533 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 16:04:28,533 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 16:04:28,533 - INFO - 
Analyzing Package.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing RobotData.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 16:04:28,534 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 16:04:28,535 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 16:04:28,535 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 16:04:28,535 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 16:04:28,535 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 16:04:28,535 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 16:04:28,535 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 16:04:28,535 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 16:04:28,535 - INFO - 
Analyzing RobotView.swift:
2024-11-05 16:04:28,535 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 16:04:28,535 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 16:04:28,535 - INFO - 
Analyzing ContentView.swift:
2024-11-05 16:04:28,536 - INFO - Successfully read Package.swift
2024-11-05 16:04:28,536 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 16:04:28,536 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:04:28,536 - INFO - Successfully read PlantComponent.swift
2024-11-05 16:04:28,537 - INFO - Successfully read AppState.swift
2024-11-05 16:04:28,537 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 16:04:28,537 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 16:04:28,537 - INFO - Successfully read BOTanistApp.swift
2024-11-05 16:04:28,538 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 16:04:28,538 - INFO - Successfully read RobotProvider.swift
2024-11-05 16:04:28,538 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 16:04:28,538 - INFO - Successfully read RobotCharacter.swift
2024-11-05 16:04:28,538 - INFO - Successfully read RobotData.swift
2024-11-05 16:04:28,538 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 16:04:28,538 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 16:04:28,538 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:04:28,538 - INFO - Successfully read StringExtensions.swift
2024-11-05 16:04:28,538 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 16:04:28,538 - INFO - Successfully read ColorExtensions.swift
2024-11-05 16:04:28,538 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 16:04:28,538 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 16:04:28,538 - INFO - Successfully read JointPinComponent.swift
2024-11-05 16:04:28,538 - INFO - Successfully read JointPinSystem.swift
2024-11-05 16:04:28,538 - INFO - Successfully read StartScreenView.swift
2024-11-05 16:04:28,538 - INFO - Successfully read OrnamentView.swift
2024-11-05 16:04:28,538 - INFO - Successfully read SelectorViews.swift
2024-11-05 16:04:28,538 - INFO - Successfully read RobotView.swift
2024-11-05 16:04:28,538 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 16:04:28,538 - INFO - Successfully read ExplorationView.swift
2024-11-05 16:04:28,538 - INFO - Successfully read ContentView.swift
2024-11-05 16:04:28,538 - INFO - Found 1 relationships in Package.swift
2024-11-05 16:04:28,539 - INFO - Found 1 relationships in BOTanistAssets.swift
2024-11-05 16:04:28,539 - INFO - Found 2 relationships in EntityExtensions.swift
2024-11-05 16:04:28,539 - INFO - Found 2 relationships in PlantComponent.swift
2024-11-05 16:04:28,539 - INFO - Found 6 relationships in AppState.swift
2024-11-05 16:04:28,539 - INFO - Found 5 relationships in PlantAnimationProvider.swift
2024-11-05 16:04:28,539 - INFO - Found 5 relationships in AppState+Exploration.swift
2024-11-05 16:04:28,539 - INFO - Found 5 relationships in BOTanistApp.swift
2024-11-05 16:04:28,539 - INFO - Found 6 relationships in RobotCharacter+Movement.swift
2024-11-05 16:04:28,539 - INFO - Found 3 relationships in RobotProvider.swift
2024-11-05 16:04:28,539 - INFO - Found 2 relationships in RobotProvider+Loading.swift
2024-11-05 16:04:28,539 - INFO - Found 6 relationships in RobotCharacter.swift
2024-11-05 16:04:28,539 - INFO - Found 4 relationships in RobotData.swift
2024-11-05 16:04:28,539 - INFO - Found 2 relationships in AnimationStateMachine.swift
2024-11-05 16:04:28,539 - INFO - Found 4 relationships in RealityView+TouchControls.swift
2024-11-05 16:04:28,539 - INFO - Found 3 relationships in EntityExtensions.swift
2024-11-05 16:04:28,539 - INFO - Found 1 relationships in StringExtensions.swift
2024-11-05 16:04:28,539 - INFO - Found 1 relationships in Preview+AppStateEnvironment.swift
2024-11-05 16:04:28,539 - INFO - Found 3 relationships in ColorExtensions.swift
2024-11-05 16:04:28,539 - INFO - Found 4 relationships in RealityView+KeyboardControls.swift
2024-11-05 16:04:28,539 - INFO - Found 3 relationships in CaseIterableExtensions.swift
2024-11-05 16:04:28,539 - INFO - Found 2 relationships in JointPinComponent.swift
2024-11-05 16:04:28,539 - INFO - Found 3 relationships in JointPinSystem.swift
2024-11-05 16:04:28,539 - INFO - Found 1 relationships in StartScreenView.swift
2024-11-05 16:04:28,539 - INFO - Found 2 relationships in OrnamentView.swift
2024-11-05 16:04:28,539 - INFO - Found 5 relationships in SelectorViews.swift
2024-11-05 16:04:28,539 - INFO - Found 4 relationships in RobotView.swift
2024-11-05 16:04:28,539 - INFO - Found 3 relationships in RobotCustomizationView.swift
2024-11-05 16:04:28,539 - INFO - Found 6 relationships in ExplorationView.swift
2024-11-05 16:04:28,540 - INFO - Found 4 relationships in ContentView.swift
2024-11-05 16:04:28,548 - INFO - Found 4 Swift files
2024-11-05 16:04:28,548 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 16:04:28,548 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 16:04:28,548 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 16:04:28,548 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 16:04:28,548 - INFO - Successfully read EntryPoint.swift
2024-11-05 16:04:28,548 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 16:04:28,548 - INFO - Successfully read DecibelSlider.swift
2024-11-05 16:04:28,548 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 16:04:28,549 - INFO - Found 2 relationships in EntryPoint.swift
2024-11-05 16:04:28,549 - INFO - Found 3 relationships in SpatialAudioView.swift
2024-11-05 16:04:28,549 - INFO - Found 1 relationships in DecibelSlider.swift
2024-11-05 16:04:28,549 - INFO - Found 1 relationships in AxisVisualizer.swift
2024-11-05 16:14:14,282 - INFO - Saved HTML to debug/visionos.html
2024-11-05 16:14:14,939 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 16:14:15,477 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 16:14:18,304 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 16:14:22,729 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 16:14:25,019 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 16:14:35,738 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 16:14:37,910 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 16:14:38,176 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 16:14:38,179 - INFO - Found 42 Swift files
2024-11-05 16:14:38,179 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 16:14:38,179 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 16:14:38,179 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 16:14:38,179 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing Orbit.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing Globe.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing Earth.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing Starfield.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing Sun.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing Module.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 16:14:38,180 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing Modules.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing Package.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 16:14:38,181 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 16:14:38,182 - INFO - Successfully read WorldApp.swift
2024-11-05 16:14:38,182 - INFO - Successfully read SliderGridRow.swift
2024-11-05 16:14:38,182 - INFO - Successfully read EarthSettings.swift
2024-11-05 16:14:38,182 - INFO - Successfully read GlobeSettings.swift
2024-11-05 16:14:38,182 - INFO - Successfully read OrbitSettings.swift
2024-11-05 16:14:38,182 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 16:14:38,182 - INFO - Successfully read SettingsButton.swift
2024-11-05 16:14:38,182 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 16:14:38,182 - INFO - Successfully read OrbitModule.swift
2024-11-05 16:14:38,182 - INFO - Successfully read OrbitToggle.swift
2024-11-05 16:14:38,182 - INFO - Successfully read Orbit.swift
2024-11-05 16:14:38,182 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 16:14:38,182 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 16:14:38,182 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 16:14:38,182 - INFO - Successfully read GlobeToggle.swift
2024-11-05 16:14:38,182 - INFO - Successfully read GlobeControls.swift
2024-11-05 16:14:38,182 - INFO - Successfully read GlobeModule.swift
2024-11-05 16:14:38,183 - INFO - Successfully read Globe.swift
2024-11-05 16:14:38,183 - INFO - Successfully read Earth.swift
2024-11-05 16:14:38,183 - INFO - Successfully read Starfield.swift
2024-11-05 16:14:38,183 - INFO - Successfully read Sun.swift
2024-11-05 16:14:38,183 - INFO - Successfully read ViewModel.swift
2024-11-05 16:14:38,183 - INFO - Successfully read Module.swift
2024-11-05 16:14:38,183 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 16:14:38,183 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 16:14:38,183 - INFO - Successfully read SolarSystem.swift
2024-11-05 16:14:38,183 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 16:14:38,183 - INFO - Successfully read TraceSystem.swift
2024-11-05 16:14:38,183 - INFO - Successfully read RotationSystem.swift
2024-11-05 16:14:38,183 - INFO - Successfully read ModuleDetail.swift
2024-11-05 16:14:38,183 - INFO - Successfully read Modules.swift
2024-11-05 16:14:38,183 - INFO - Successfully read TableOfContents.swift
2024-11-05 16:14:38,184 - INFO - Successfully read ModuleCard.swift
2024-11-05 16:14:38,184 - INFO - Successfully read Entity+Trace.swift
2024-11-05 16:14:38,184 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 16:14:38,184 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 16:14:38,184 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 16:14:38,184 - INFO - Successfully read EarthEntity.swift
2024-11-05 16:14:38,184 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 16:14:38,184 - INFO - Successfully read Package.swift
2024-11-05 16:14:38,184 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 16:14:38,184 - INFO - Successfully read WorldAssets.swift
2024-11-05 16:14:38,185 - INFO - Found 4 relationships in WorldApp.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in SliderGridRow.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in EarthSettings.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in GlobeSettings.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in OrbitSettings.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in SatelliteSettings.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in SettingsButton.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in SolarSystemSettings.swift
2024-11-05 16:14:38,185 - INFO - Found 3 relationships in OrbitModule.swift
2024-11-05 16:14:38,185 - INFO - Found 2 relationships in OrbitToggle.swift
2024-11-05 16:14:38,185 - INFO - Found 2 relationships in Orbit.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in TypeTextModifier.swift
2024-11-05 16:14:38,185 - INFO - Found 2 relationships in PlacementGesturesModifier.swift
2024-11-05 16:14:38,185 - INFO - Found 2 relationships in DragRotationModifier.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in GlobeToggle.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in GlobeControls.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in GlobeModule.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in Globe.swift
2024-11-05 16:14:38,185 - INFO - Found 4 relationships in Earth.swift
2024-11-05 16:14:38,185 - INFO - Found 3 relationships in Starfield.swift
2024-11-05 16:14:38,185 - INFO - Found 4 relationships in Sun.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in ViewModel.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in Module.swift
2024-11-05 16:14:38,185 - INFO - Found 2 relationships in SolarSystemToggle.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in SolarSystemModule.swift
2024-11-05 16:14:38,185 - INFO - Found 2 relationships in SolarSystem.swift
2024-11-05 16:14:38,185 - INFO - Found 1 relationships in SolarSystemControls.swift
2024-11-05 16:14:38,186 - INFO - Found 2 relationships in TraceSystem.swift
2024-11-05 16:14:38,186 - INFO - Found 2 relationships in RotationSystem.swift
2024-11-05 16:14:38,186 - INFO - Found 1 relationships in ModuleDetail.swift
2024-11-05 16:14:38,186 - INFO - Found 2 relationships in Modules.swift
2024-11-05 16:14:38,186 - INFO - Found 1 relationships in TableOfContents.swift
2024-11-05 16:14:38,186 - INFO - Found 1 relationships in ModuleCard.swift
2024-11-05 16:14:38,186 - INFO - Found 2 relationships in Entity+Trace.swift
2024-11-05 16:14:38,186 - INFO - Found 1 relationships in EarthEntity+Configuration.swift
2024-11-05 16:14:38,186 - INFO - Found 3 relationships in SatelliteEntity.swift
2024-11-05 16:14:38,186 - INFO - Found 2 relationships in Entity+Sunlight.swift
2024-11-05 16:14:38,186 - INFO - Found 3 relationships in EarthEntity.swift
2024-11-05 16:14:38,186 - INFO - Found 1 relationships in SatelliteEntity+Configuration.swift
2024-11-05 16:14:38,186 - INFO - Found 1 relationships in Package.swift
2024-11-05 16:14:38,186 - INFO - Found 3 relationships in SunPositionSystem.swift
2024-11-05 16:14:38,186 - INFO - Found 3 relationships in WorldAssets.swift
2024-11-05 16:14:38,201 - INFO - Found 30 Swift files
2024-11-05 16:14:38,201 - INFO - 
Analyzing AppState.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing Package.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing RobotData.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 16:14:38,202 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing RobotView.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 16:14:38,203 - INFO - 
Analyzing ContentView.swift:
2024-11-05 16:14:38,203 - INFO - Successfully read Package.swift
2024-11-05 16:14:38,204 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 16:14:38,204 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:14:38,204 - INFO - Successfully read PlantComponent.swift
2024-11-05 16:14:38,205 - INFO - Successfully read AppState.swift
2024-11-05 16:14:38,205 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 16:14:38,205 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 16:14:38,205 - INFO - Successfully read BOTanistApp.swift
2024-11-05 16:14:38,205 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 16:14:38,206 - INFO - Successfully read RobotProvider.swift
2024-11-05 16:14:38,206 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 16:14:38,206 - INFO - Successfully read RobotCharacter.swift
2024-11-05 16:14:38,206 - INFO - Successfully read RobotData.swift
2024-11-05 16:14:38,206 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 16:14:38,206 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 16:14:38,206 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:14:38,206 - INFO - Successfully read StringExtensions.swift
2024-11-05 16:14:38,206 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 16:14:38,206 - INFO - Successfully read ColorExtensions.swift
2024-11-05 16:14:38,206 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 16:14:38,206 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 16:14:38,206 - INFO - Successfully read JointPinComponent.swift
2024-11-05 16:14:38,206 - INFO - Successfully read JointPinSystem.swift
2024-11-05 16:14:38,206 - INFO - Successfully read StartScreenView.swift
2024-11-05 16:14:38,206 - INFO - Successfully read OrnamentView.swift
2024-11-05 16:14:38,206 - INFO - Successfully read SelectorViews.swift
2024-11-05 16:14:38,206 - INFO - Successfully read RobotView.swift
2024-11-05 16:14:38,206 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 16:14:38,206 - INFO - Successfully read ExplorationView.swift
2024-11-05 16:14:38,206 - INFO - Successfully read ContentView.swift
2024-11-05 16:14:38,206 - INFO - Found 1 relationships in Package.swift
2024-11-05 16:14:38,206 - INFO - Found 1 relationships in BOTanistAssets.swift
2024-11-05 16:14:38,206 - INFO - Found 2 relationships in EntityExtensions.swift
2024-11-05 16:14:38,206 - INFO - Found 2 relationships in PlantComponent.swift
2024-11-05 16:14:38,206 - INFO - Found 6 relationships in AppState.swift
2024-11-05 16:14:38,206 - INFO - Found 5 relationships in PlantAnimationProvider.swift
2024-11-05 16:14:38,206 - INFO - Found 5 relationships in AppState+Exploration.swift
2024-11-05 16:14:38,207 - INFO - Found 5 relationships in BOTanistApp.swift
2024-11-05 16:14:38,207 - INFO - Found 6 relationships in RobotCharacter+Movement.swift
2024-11-05 16:14:38,207 - INFO - Found 3 relationships in RobotProvider.swift
2024-11-05 16:14:38,207 - INFO - Found 2 relationships in RobotProvider+Loading.swift
2024-11-05 16:14:38,207 - INFO - Found 6 relationships in RobotCharacter.swift
2024-11-05 16:14:38,207 - INFO - Found 4 relationships in RobotData.swift
2024-11-05 16:14:38,207 - INFO - Found 2 relationships in AnimationStateMachine.swift
2024-11-05 16:14:38,207 - INFO - Found 4 relationships in RealityView+TouchControls.swift
2024-11-05 16:14:38,207 - INFO - Found 3 relationships in EntityExtensions.swift
2024-11-05 16:14:38,207 - INFO - Found 1 relationships in StringExtensions.swift
2024-11-05 16:14:38,207 - INFO - Found 1 relationships in Preview+AppStateEnvironment.swift
2024-11-05 16:14:38,207 - INFO - Found 3 relationships in ColorExtensions.swift
2024-11-05 16:14:38,207 - INFO - Found 4 relationships in RealityView+KeyboardControls.swift
2024-11-05 16:14:38,207 - INFO - Found 3 relationships in CaseIterableExtensions.swift
2024-11-05 16:14:38,207 - INFO - Found 2 relationships in JointPinComponent.swift
2024-11-05 16:14:38,207 - INFO - Found 3 relationships in JointPinSystem.swift
2024-11-05 16:14:38,207 - INFO - Found 1 relationships in StartScreenView.swift
2024-11-05 16:14:38,207 - INFO - Found 2 relationships in OrnamentView.swift
2024-11-05 16:14:38,207 - INFO - Found 5 relationships in SelectorViews.swift
2024-11-05 16:14:38,207 - INFO - Found 4 relationships in RobotView.swift
2024-11-05 16:14:38,207 - INFO - Found 3 relationships in RobotCustomizationView.swift
2024-11-05 16:14:38,207 - INFO - Found 6 relationships in ExplorationView.swift
2024-11-05 16:14:38,207 - INFO - Found 4 relationships in ContentView.swift
2024-11-05 16:14:38,215 - INFO - Found 4 Swift files
2024-11-05 16:14:38,215 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 16:14:38,215 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 16:14:38,215 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 16:14:38,216 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 16:14:38,216 - INFO - Successfully read EntryPoint.swift
2024-11-05 16:14:38,216 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 16:14:38,216 - INFO - Successfully read DecibelSlider.swift
2024-11-05 16:14:38,216 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 16:14:38,216 - INFO - Found 2 relationships in EntryPoint.swift
2024-11-05 16:14:38,216 - INFO - Found 3 relationships in SpatialAudioView.swift
2024-11-05 16:14:38,216 - INFO - Found 1 relationships in DecibelSlider.swift
2024-11-05 16:14:38,216 - INFO - Found 1 relationships in AxisVisualizer.swift
2024-11-05 16:21:30,463 - INFO - Saved HTML to debug/visionos.html
2024-11-05 16:21:30,493 - INFO - Found other link: https://developer.apple.com/documentation/visionos/#ac-gn-menustate
2024-11-05 16:21:30,493 - INFO - Found other link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:21:30,493 - INFO - Found other link: https://developer.apple.com/
2024-11-05 16:21:30,493 - INFO - Found other link: https://developer.apple.com/search/
2024-11-05 16:21:30,493 - INFO - Found other link: https://developer.apple.com/
2024-11-05 16:21:30,494 - INFO - Found other link: https://developer.apple.com/news/
2024-11-05 16:21:30,494 - INFO - Found other link: https://developer.apple.com/discover/
2024-11-05 16:21:30,494 - INFO - Found other link: https://developer.apple.com/design/
2024-11-05 16:21:30,494 - INFO - Found other link: https://developer.apple.com/develop/
2024-11-05 16:21:30,494 - INFO - Found other link: https://developer.apple.com/distribute/
2024-11-05 16:21:30,494 - INFO - Found other link: https://developer.apple.com/support/
2024-11-05 16:21:30,494 - INFO - Found other link: https://developer.apple.com/account/
2024-11-05 16:21:30,494 - INFO - Found other link: https://developer.apple.com/search/
2024-11-05 16:21:30,494 - INFO - Found other link: https://developer.apple.com/download/
2024-11-05 16:21:30,494 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:21:30,495 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:21:30,495 - INFO - Found other link: https://developer.apple.com/forums/
2024-11-05 16:21:30,495 - INFO - Found other link: https://developer.apple.com/xcode/
2024-11-05 16:21:30,495 - INFO - Found documentation link: https://developer.apple.com/documentation
2024-11-05 16:21:30,495 - INFO - Found other link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:21:30,495 - INFO - Found other link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/RealityKit
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/RealityKit/RealityView
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/arkit
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/arkit
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#App-construction
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Design
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#SwiftUI
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 16:21:30,499 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#ARKit
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/placing-content-on-detected-planes
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/tracking-points-in-world-space
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/tracking-images-in-3d-space
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Video-playback
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Xcode-and-Simulator
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/Xcode/configuring-your-app-icon
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Performance
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/bringing-your-app-to-visionos
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/accessing-the-main-camera
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#app-top
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:21:30,500 - INFO - Found content link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:21:30,524 - INFO - Found 14 other links
2024-11-05 16:21:30,524 - INFO - Found 72 documentation links
2024-11-05 16:21:30,524 - INFO - Found 1 videos links
2024-11-05 16:22:47,590 - INFO - Saved HTML to debug/visionos.html
2024-11-05 16:22:47,595 - INFO - Found other link: https://developer.apple.com/documentation/visionos/#ac-gn-menustate
2024-11-05 16:22:47,598 - INFO - Found other link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:22:47,598 - INFO - Found other link: https://developer.apple.com/
2024-11-05 16:22:47,598 - INFO - Found other link: https://developer.apple.com/search/
2024-11-05 16:22:47,599 - INFO - Found other link: https://developer.apple.com/
2024-11-05 16:22:47,599 - INFO - Found other link: https://developer.apple.com/news/
2024-11-05 16:22:47,599 - INFO - Found other link: https://developer.apple.com/discover/
2024-11-05 16:22:47,599 - INFO - Found other link: https://developer.apple.com/design/
2024-11-05 16:22:47,599 - INFO - Found other link: https://developer.apple.com/develop/
2024-11-05 16:22:47,599 - INFO - Found other link: https://developer.apple.com/distribute/
2024-11-05 16:22:47,599 - INFO - Found other link: https://developer.apple.com/support/
2024-11-05 16:22:47,600 - INFO - Found other link: https://developer.apple.com/account/
2024-11-05 16:22:47,600 - INFO - Found other link: https://developer.apple.com/search/
2024-11-05 16:22:47,642 - INFO - Found 11 other links
2024-11-05 16:22:48,652 - INFO - Found 0 sections, 0 topics, and 0 samples
2024-11-05 16:22:49,704 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 16:22:49,708 - INFO - Found other link: https://developer.apple.com/design/human-interface-guidelines/immersive-experiences#ac-gn-menustate
2024-11-05 16:22:49,708 - INFO - Found other link: https://developer.apple.com/design/human-interface-guidelines/immersive-experiences
2024-11-05 16:22:49,708 - INFO - Found other link: https://developer.apple.com/
2024-11-05 16:22:49,709 - INFO - Found other link: https://developer.apple.com/search/
2024-11-05 16:22:49,709 - INFO - Found other link: https://developer.apple.com/
2024-11-05 16:22:49,709 - INFO - Found other link: https://developer.apple.com/news/
2024-11-05 16:22:49,709 - INFO - Found other link: https://developer.apple.com/discover/
2024-11-05 16:22:49,709 - INFO - Found other link: https://developer.apple.com/design/
2024-11-05 16:22:49,709 - INFO - Found other link: https://developer.apple.com/develop/
2024-11-05 16:22:49,709 - INFO - Found other link: https://developer.apple.com/distribute/
2024-11-05 16:22:49,709 - INFO - Found other link: https://developer.apple.com/support/
2024-11-05 16:22:49,709 - INFO - Found other link: https://developer.apple.com/account/
2024-11-05 16:22:49,710 - INFO - Found other link: https://developer.apple.com/search/
2024-11-05 16:22:49,734 - INFO - Found 11 other links
2024-11-05 16:22:50,772 - INFO - Found 0 sections, 0 topics, and 0 samples
2024-11-05 16:22:51,814 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 16:22:51,819 - INFO - Found other link: https://developer.apple.com/design/human-interface-guidelines/designing-for-visionos#ac-gn-menustate
2024-11-05 16:22:51,819 - INFO - Found other link: https://developer.apple.com/design/human-interface-guidelines/designing-for-visionos
2024-11-05 16:22:51,819 - INFO - Found other link: https://developer.apple.com/
2024-11-05 16:22:51,819 - INFO - Found other link: https://developer.apple.com/search/
2024-11-05 16:22:51,819 - INFO - Found other link: https://developer.apple.com/
2024-11-05 16:22:51,819 - INFO - Found other link: https://developer.apple.com/news/
2024-11-05 16:22:51,820 - INFO - Found other link: https://developer.apple.com/discover/
2024-11-05 16:22:51,820 - INFO - Found other link: https://developer.apple.com/design/
2024-11-05 16:22:51,820 - INFO - Found other link: https://developer.apple.com/develop/
2024-11-05 16:22:51,820 - INFO - Found other link: https://developer.apple.com/distribute/
2024-11-05 16:22:51,820 - INFO - Found other link: https://developer.apple.com/support/
2024-11-05 16:22:51,820 - INFO - Found other link: https://developer.apple.com/account/
2024-11-05 16:22:51,820 - INFO - Found other link: https://developer.apple.com/search/
2024-11-05 16:22:51,842 - INFO - Found 11 other links
2024-11-05 16:22:53,305 - INFO - Found 4 sections, 1 topics, and 0 samples
2024-11-05 16:22:55,316 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 16:22:59,753 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 16:23:02,517 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 16:23:09,113 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 16:23:11,150 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 16:23:11,749 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 16:23:11,752 - INFO - Found 42 Swift files
2024-11-05 16:23:11,753 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 16:23:11,753 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 16:23:11,753 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 16:23:11,754 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 16:23:11,754 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 16:23:11,754 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 16:23:11,754 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 16:23:11,754 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 16:23:11,754 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 16:23:11,754 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 16:23:11,754 - INFO - 
Analyzing Orbit.swift:
2024-11-05 16:23:11,755 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 16:23:11,755 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 16:23:11,755 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 16:23:11,755 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 16:23:11,755 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 16:23:11,755 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 16:23:11,755 - INFO - 
Analyzing Globe.swift:
2024-11-05 16:23:11,755 - INFO - 
Analyzing Earth.swift:
2024-11-05 16:23:11,756 - INFO - 
Analyzing Starfield.swift:
2024-11-05 16:23:11,756 - INFO - 
Analyzing Sun.swift:
2024-11-05 16:23:11,756 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing Module.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing Modules.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 16:23:11,757 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 16:23:11,758 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 16:23:11,758 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 16:23:11,758 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 16:23:11,758 - INFO - 
Analyzing Package.swift:
2024-11-05 16:23:11,758 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 16:23:11,758 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 16:23:11,758 - INFO - Successfully read WorldApp.swift
2024-11-05 16:23:11,759 - INFO - Successfully read SliderGridRow.swift
2024-11-05 16:23:11,759 - INFO - Successfully read EarthSettings.swift
2024-11-05 16:23:11,759 - INFO - Successfully read GlobeSettings.swift
2024-11-05 16:23:11,759 - INFO - Successfully read OrbitSettings.swift
2024-11-05 16:23:11,759 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 16:23:11,759 - INFO - Successfully read SettingsButton.swift
2024-11-05 16:23:11,759 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 16:23:11,759 - INFO - Successfully read OrbitModule.swift
2024-11-05 16:23:11,759 - INFO - Successfully read OrbitToggle.swift
2024-11-05 16:23:11,759 - INFO - Successfully read Orbit.swift
2024-11-05 16:23:11,759 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 16:23:11,759 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 16:23:11,759 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 16:23:11,759 - INFO - Successfully read GlobeToggle.swift
2024-11-05 16:23:11,759 - INFO - Successfully read GlobeControls.swift
2024-11-05 16:23:11,759 - INFO - Successfully read GlobeModule.swift
2024-11-05 16:23:11,759 - INFO - Successfully read Globe.swift
2024-11-05 16:23:11,760 - INFO - Successfully read Earth.swift
2024-11-05 16:23:11,760 - INFO - Successfully read Starfield.swift
2024-11-05 16:23:11,760 - INFO - Successfully read Sun.swift
2024-11-05 16:23:11,760 - INFO - Successfully read ViewModel.swift
2024-11-05 16:23:11,760 - INFO - Successfully read Module.swift
2024-11-05 16:23:11,760 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 16:23:11,760 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 16:23:11,760 - INFO - Successfully read SolarSystem.swift
2024-11-05 16:23:11,760 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 16:23:11,760 - INFO - Successfully read TraceSystem.swift
2024-11-05 16:23:11,760 - INFO - Successfully read RotationSystem.swift
2024-11-05 16:23:11,760 - INFO - Successfully read ModuleDetail.swift
2024-11-05 16:23:11,760 - INFO - Successfully read Modules.swift
2024-11-05 16:23:11,760 - INFO - Successfully read TableOfContents.swift
2024-11-05 16:23:11,760 - INFO - Successfully read ModuleCard.swift
2024-11-05 16:23:11,760 - INFO - Successfully read Entity+Trace.swift
2024-11-05 16:23:11,760 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 16:23:11,760 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 16:23:11,760 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 16:23:11,760 - INFO - Successfully read EarthEntity.swift
2024-11-05 16:23:11,760 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 16:23:11,760 - INFO - Successfully read Package.swift
2024-11-05 16:23:11,761 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 16:23:11,761 - INFO - Successfully read WorldAssets.swift
2024-11-05 16:23:11,761 - INFO - Found 4 relationships in WorldApp.swift
2024-11-05 16:23:11,761 - INFO - Found 1 relationships in SliderGridRow.swift
2024-11-05 16:23:11,761 - INFO - Found 1 relationships in EarthSettings.swift
2024-11-05 16:23:11,761 - INFO - Found 1 relationships in GlobeSettings.swift
2024-11-05 16:23:11,761 - INFO - Found 1 relationships in OrbitSettings.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in SatelliteSettings.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in SettingsButton.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in SolarSystemSettings.swift
2024-11-05 16:23:11,762 - INFO - Found 3 relationships in OrbitModule.swift
2024-11-05 16:23:11,762 - INFO - Found 2 relationships in OrbitToggle.swift
2024-11-05 16:23:11,762 - INFO - Found 2 relationships in Orbit.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in TypeTextModifier.swift
2024-11-05 16:23:11,762 - INFO - Found 2 relationships in PlacementGesturesModifier.swift
2024-11-05 16:23:11,762 - INFO - Found 2 relationships in DragRotationModifier.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in GlobeToggle.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in GlobeControls.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in GlobeModule.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in Globe.swift
2024-11-05 16:23:11,762 - INFO - Found 4 relationships in Earth.swift
2024-11-05 16:23:11,762 - INFO - Found 3 relationships in Starfield.swift
2024-11-05 16:23:11,762 - INFO - Found 4 relationships in Sun.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in ViewModel.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in Module.swift
2024-11-05 16:23:11,762 - INFO - Found 2 relationships in SolarSystemToggle.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in SolarSystemModule.swift
2024-11-05 16:23:11,762 - INFO - Found 2 relationships in SolarSystem.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in SolarSystemControls.swift
2024-11-05 16:23:11,762 - INFO - Found 2 relationships in TraceSystem.swift
2024-11-05 16:23:11,762 - INFO - Found 2 relationships in RotationSystem.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in ModuleDetail.swift
2024-11-05 16:23:11,762 - INFO - Found 2 relationships in Modules.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in TableOfContents.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in ModuleCard.swift
2024-11-05 16:23:11,762 - INFO - Found 2 relationships in Entity+Trace.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in EarthEntity+Configuration.swift
2024-11-05 16:23:11,762 - INFO - Found 3 relationships in SatelliteEntity.swift
2024-11-05 16:23:11,762 - INFO - Found 2 relationships in Entity+Sunlight.swift
2024-11-05 16:23:11,762 - INFO - Found 3 relationships in EarthEntity.swift
2024-11-05 16:23:11,762 - INFO - Found 1 relationships in SatelliteEntity+Configuration.swift
2024-11-05 16:23:11,763 - INFO - Found 1 relationships in Package.swift
2024-11-05 16:23:11,763 - INFO - Found 3 relationships in SunPositionSystem.swift
2024-11-05 16:23:11,763 - INFO - Found 3 relationships in WorldAssets.swift
2024-11-05 16:23:11,779 - INFO - Found 30 Swift files
2024-11-05 16:23:11,779 - INFO - 
Analyzing AppState.swift:
2024-11-05 16:23:11,779 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 16:23:11,779 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 16:23:11,779 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 16:23:11,779 - INFO - 
Analyzing Package.swift:
2024-11-05 16:23:11,779 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 16:23:11,779 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 16:23:11,779 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 16:23:11,779 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing RobotData.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 16:23:11,780 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 16:23:11,781 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 16:23:11,781 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 16:23:11,781 - INFO - 
Analyzing RobotView.swift:
2024-11-05 16:23:11,781 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 16:23:11,781 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 16:23:11,781 - INFO - 
Analyzing ContentView.swift:
2024-11-05 16:23:11,781 - INFO - Successfully read Package.swift
2024-11-05 16:23:11,781 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 16:23:11,781 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:23:11,781 - INFO - Successfully read PlantComponent.swift
2024-11-05 16:23:11,783 - INFO - Successfully read AppState.swift
2024-11-05 16:23:11,783 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 16:23:11,783 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 16:23:11,783 - INFO - Successfully read BOTanistApp.swift
2024-11-05 16:23:11,783 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 16:23:11,784 - INFO - Successfully read RobotProvider.swift
2024-11-05 16:23:11,784 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 16:23:11,784 - INFO - Successfully read RobotCharacter.swift
2024-11-05 16:23:11,784 - INFO - Successfully read RobotData.swift
2024-11-05 16:23:11,784 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 16:23:11,784 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 16:23:11,784 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:23:11,784 - INFO - Successfully read StringExtensions.swift
2024-11-05 16:23:11,784 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 16:23:11,784 - INFO - Successfully read ColorExtensions.swift
2024-11-05 16:23:11,784 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 16:23:11,784 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 16:23:11,784 - INFO - Successfully read JointPinComponent.swift
2024-11-05 16:23:11,784 - INFO - Successfully read JointPinSystem.swift
2024-11-05 16:23:11,784 - INFO - Successfully read StartScreenView.swift
2024-11-05 16:23:11,784 - INFO - Successfully read OrnamentView.swift
2024-11-05 16:23:11,784 - INFO - Successfully read SelectorViews.swift
2024-11-05 16:23:11,784 - INFO - Successfully read RobotView.swift
2024-11-05 16:23:11,784 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 16:23:11,784 - INFO - Successfully read ExplorationView.swift
2024-11-05 16:23:11,784 - INFO - Successfully read ContentView.swift
2024-11-05 16:23:11,784 - INFO - Found 1 relationships in Package.swift
2024-11-05 16:23:11,785 - INFO - Found 1 relationships in BOTanistAssets.swift
2024-11-05 16:23:11,785 - INFO - Found 2 relationships in EntityExtensions.swift
2024-11-05 16:23:11,785 - INFO - Found 2 relationships in PlantComponent.swift
2024-11-05 16:23:11,785 - INFO - Found 6 relationships in AppState.swift
2024-11-05 16:23:11,785 - INFO - Found 5 relationships in PlantAnimationProvider.swift
2024-11-05 16:23:11,785 - INFO - Found 5 relationships in AppState+Exploration.swift
2024-11-05 16:23:11,785 - INFO - Found 5 relationships in BOTanistApp.swift
2024-11-05 16:23:11,785 - INFO - Found 6 relationships in RobotCharacter+Movement.swift
2024-11-05 16:23:11,785 - INFO - Found 3 relationships in RobotProvider.swift
2024-11-05 16:23:11,785 - INFO - Found 2 relationships in RobotProvider+Loading.swift
2024-11-05 16:23:11,785 - INFO - Found 6 relationships in RobotCharacter.swift
2024-11-05 16:23:11,785 - INFO - Found 4 relationships in RobotData.swift
2024-11-05 16:23:11,785 - INFO - Found 2 relationships in AnimationStateMachine.swift
2024-11-05 16:23:11,785 - INFO - Found 4 relationships in RealityView+TouchControls.swift
2024-11-05 16:23:11,785 - INFO - Found 3 relationships in EntityExtensions.swift
2024-11-05 16:23:11,785 - INFO - Found 1 relationships in StringExtensions.swift
2024-11-05 16:23:11,785 - INFO - Found 1 relationships in Preview+AppStateEnvironment.swift
2024-11-05 16:23:11,785 - INFO - Found 3 relationships in ColorExtensions.swift
2024-11-05 16:23:11,785 - INFO - Found 4 relationships in RealityView+KeyboardControls.swift
2024-11-05 16:23:11,785 - INFO - Found 3 relationships in CaseIterableExtensions.swift
2024-11-05 16:23:11,785 - INFO - Found 2 relationships in JointPinComponent.swift
2024-11-05 16:23:11,785 - INFO - Found 3 relationships in JointPinSystem.swift
2024-11-05 16:23:11,785 - INFO - Found 1 relationships in StartScreenView.swift
2024-11-05 16:23:11,786 - INFO - Found 2 relationships in OrnamentView.swift
2024-11-05 16:23:11,786 - INFO - Found 5 relationships in SelectorViews.swift
2024-11-05 16:23:11,786 - INFO - Found 4 relationships in RobotView.swift
2024-11-05 16:23:11,786 - INFO - Found 3 relationships in RobotCustomizationView.swift
2024-11-05 16:23:11,786 - INFO - Found 6 relationships in ExplorationView.swift
2024-11-05 16:23:11,786 - INFO - Found 4 relationships in ContentView.swift
2024-11-05 16:23:11,793 - INFO - Found 4 Swift files
2024-11-05 16:23:11,793 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 16:23:11,793 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 16:23:11,793 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 16:23:11,793 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 16:23:11,793 - INFO - Successfully read EntryPoint.swift
2024-11-05 16:23:11,793 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 16:23:11,793 - INFO - Successfully read DecibelSlider.swift
2024-11-05 16:23:11,793 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 16:23:11,794 - INFO - Found 2 relationships in EntryPoint.swift
2024-11-05 16:23:11,794 - INFO - Found 3 relationships in SpatialAudioView.swift
2024-11-05 16:23:11,794 - INFO - Found 1 relationships in DecibelSlider.swift
2024-11-05 16:23:11,794 - INFO - Found 1 relationships in AxisVisualizer.swift
2024-11-05 16:29:38,303 - INFO - Saved HTML to debug/visionos.html
2024-11-05 16:29:39,718 - INFO - Found 3 sections, 1 topics, and 0 samples
2024-11-05 16:29:41,035 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 16:29:42,957 - INFO - Found 10 sections, 1 topics, and 0 samples
2024-11-05 16:29:44,241 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 16:29:45,543 - INFO - Found 4 sections, 1 topics, and 0 samples
2024-11-05 16:29:47,519 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 16:29:51,274 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 16:29:54,240 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 16:30:01,799 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 16:30:03,967 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 16:30:04,275 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 16:30:04,278 - INFO - Found 42 Swift files
2024-11-05 16:30:04,278 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing Orbit.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing Globe.swift:
2024-11-05 16:30:04,279 - INFO - 
Analyzing Earth.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing Starfield.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing Sun.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing Module.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing Modules.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 16:30:04,280 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 16:30:04,281 - INFO - 
Analyzing Package.swift:
2024-11-05 16:30:04,281 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 16:30:04,281 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 16:30:04,281 - INFO - Successfully read WorldApp.swift
2024-11-05 16:30:04,281 - INFO - Successfully read SliderGridRow.swift
2024-11-05 16:30:04,281 - INFO - Successfully read EarthSettings.swift
2024-11-05 16:30:04,281 - INFO - Successfully read GlobeSettings.swift
2024-11-05 16:30:04,281 - INFO - Successfully read OrbitSettings.swift
2024-11-05 16:30:04,281 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 16:30:04,281 - INFO - Successfully read SettingsButton.swift
2024-11-05 16:30:04,281 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 16:30:04,281 - INFO - Successfully read OrbitModule.swift
2024-11-05 16:30:04,281 - INFO - Successfully read OrbitToggle.swift
2024-11-05 16:30:04,281 - INFO - Successfully read Orbit.swift
2024-11-05 16:30:04,281 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 16:30:04,281 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 16:30:04,281 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 16:30:04,281 - INFO - Successfully read GlobeToggle.swift
2024-11-05 16:30:04,282 - INFO - Successfully read GlobeControls.swift
2024-11-05 16:30:04,282 - INFO - Successfully read GlobeModule.swift
2024-11-05 16:30:04,282 - INFO - Successfully read Globe.swift
2024-11-05 16:30:04,282 - INFO - Successfully read Earth.swift
2024-11-05 16:30:04,282 - INFO - Successfully read Starfield.swift
2024-11-05 16:30:04,282 - INFO - Successfully read Sun.swift
2024-11-05 16:30:04,282 - INFO - Successfully read ViewModel.swift
2024-11-05 16:30:04,282 - INFO - Successfully read Module.swift
2024-11-05 16:30:04,282 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 16:30:04,282 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 16:30:04,282 - INFO - Successfully read SolarSystem.swift
2024-11-05 16:30:04,282 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 16:30:04,282 - INFO - Successfully read TraceSystem.swift
2024-11-05 16:30:04,282 - INFO - Successfully read RotationSystem.swift
2024-11-05 16:30:04,282 - INFO - Successfully read ModuleDetail.swift
2024-11-05 16:30:04,282 - INFO - Successfully read Modules.swift
2024-11-05 16:30:04,282 - INFO - Successfully read TableOfContents.swift
2024-11-05 16:30:04,282 - INFO - Successfully read ModuleCard.swift
2024-11-05 16:30:04,283 - INFO - Successfully read Entity+Trace.swift
2024-11-05 16:30:04,283 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 16:30:04,283 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 16:30:04,283 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 16:30:04,283 - INFO - Successfully read EarthEntity.swift
2024-11-05 16:30:04,283 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 16:30:04,283 - INFO - Successfully read Package.swift
2024-11-05 16:30:04,283 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 16:30:04,283 - INFO - Successfully read WorldAssets.swift
2024-11-05 16:30:04,283 - INFO - Found 4 relationships in WorldApp.swift
2024-11-05 16:30:04,283 - INFO - Found 1 relationships in SliderGridRow.swift
2024-11-05 16:30:04,283 - INFO - Found 1 relationships in EarthSettings.swift
2024-11-05 16:30:04,283 - INFO - Found 1 relationships in GlobeSettings.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in OrbitSettings.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in SatelliteSettings.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in SettingsButton.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in SolarSystemSettings.swift
2024-11-05 16:30:04,284 - INFO - Found 3 relationships in OrbitModule.swift
2024-11-05 16:30:04,284 - INFO - Found 2 relationships in OrbitToggle.swift
2024-11-05 16:30:04,284 - INFO - Found 2 relationships in Orbit.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in TypeTextModifier.swift
2024-11-05 16:30:04,284 - INFO - Found 2 relationships in PlacementGesturesModifier.swift
2024-11-05 16:30:04,284 - INFO - Found 2 relationships in DragRotationModifier.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in GlobeToggle.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in GlobeControls.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in GlobeModule.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in Globe.swift
2024-11-05 16:30:04,284 - INFO - Found 4 relationships in Earth.swift
2024-11-05 16:30:04,284 - INFO - Found 3 relationships in Starfield.swift
2024-11-05 16:30:04,284 - INFO - Found 4 relationships in Sun.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in ViewModel.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in Module.swift
2024-11-05 16:30:04,284 - INFO - Found 2 relationships in SolarSystemToggle.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in SolarSystemModule.swift
2024-11-05 16:30:04,284 - INFO - Found 2 relationships in SolarSystem.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in SolarSystemControls.swift
2024-11-05 16:30:04,284 - INFO - Found 2 relationships in TraceSystem.swift
2024-11-05 16:30:04,284 - INFO - Found 2 relationships in RotationSystem.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in ModuleDetail.swift
2024-11-05 16:30:04,284 - INFO - Found 2 relationships in Modules.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in TableOfContents.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in ModuleCard.swift
2024-11-05 16:30:04,284 - INFO - Found 2 relationships in Entity+Trace.swift
2024-11-05 16:30:04,284 - INFO - Found 1 relationships in EarthEntity+Configuration.swift
2024-11-05 16:30:04,284 - INFO - Found 3 relationships in SatelliteEntity.swift
2024-11-05 16:30:04,284 - INFO - Found 2 relationships in Entity+Sunlight.swift
2024-11-05 16:30:04,285 - INFO - Found 3 relationships in EarthEntity.swift
2024-11-05 16:30:04,285 - INFO - Found 1 relationships in SatelliteEntity+Configuration.swift
2024-11-05 16:30:04,285 - INFO - Found 1 relationships in Package.swift
2024-11-05 16:30:04,285 - INFO - Found 3 relationships in SunPositionSystem.swift
2024-11-05 16:30:04,285 - INFO - Found 3 relationships in WorldAssets.swift
2024-11-05 16:30:04,300 - INFO - Found 30 Swift files
2024-11-05 16:30:04,300 - INFO - 
Analyzing AppState.swift:
2024-11-05 16:30:04,300 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 16:30:04,300 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 16:30:04,300 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 16:30:04,300 - INFO - 
Analyzing Package.swift:
2024-11-05 16:30:04,300 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 16:30:04,301 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 16:30:04,301 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 16:30:04,301 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 16:30:04,301 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 16:30:04,301 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 16:30:04,301 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing RobotData.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing RobotView.swift:
2024-11-05 16:30:04,302 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 16:30:04,303 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 16:30:04,303 - INFO - 
Analyzing ContentView.swift:
2024-11-05 16:30:04,303 - INFO - Successfully read Package.swift
2024-11-05 16:30:04,303 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 16:30:04,303 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:30:04,303 - INFO - Successfully read PlantComponent.swift
2024-11-05 16:30:04,304 - INFO - Successfully read AppState.swift
2024-11-05 16:30:04,304 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 16:30:04,304 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 16:30:04,305 - INFO - Successfully read BOTanistApp.swift
2024-11-05 16:30:04,305 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 16:30:04,305 - INFO - Successfully read RobotProvider.swift
2024-11-05 16:30:04,305 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 16:30:04,305 - INFO - Successfully read RobotCharacter.swift
2024-11-05 16:30:04,305 - INFO - Successfully read RobotData.swift
2024-11-05 16:30:04,305 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 16:30:04,305 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 16:30:04,305 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:30:04,305 - INFO - Successfully read StringExtensions.swift
2024-11-05 16:30:04,305 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 16:30:04,305 - INFO - Successfully read ColorExtensions.swift
2024-11-05 16:30:04,305 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 16:30:04,305 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 16:30:04,305 - INFO - Successfully read JointPinComponent.swift
2024-11-05 16:30:04,306 - INFO - Successfully read JointPinSystem.swift
2024-11-05 16:30:04,306 - INFO - Successfully read StartScreenView.swift
2024-11-05 16:30:04,306 - INFO - Successfully read OrnamentView.swift
2024-11-05 16:30:04,306 - INFO - Successfully read SelectorViews.swift
2024-11-05 16:30:04,306 - INFO - Successfully read RobotView.swift
2024-11-05 16:30:04,306 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 16:30:04,306 - INFO - Successfully read ExplorationView.swift
2024-11-05 16:30:04,306 - INFO - Successfully read ContentView.swift
2024-11-05 16:30:04,306 - INFO - Found 1 relationships in Package.swift
2024-11-05 16:30:04,306 - INFO - Found 1 relationships in BOTanistAssets.swift
2024-11-05 16:30:04,306 - INFO - Found 2 relationships in EntityExtensions.swift
2024-11-05 16:30:04,306 - INFO - Found 2 relationships in PlantComponent.swift
2024-11-05 16:30:04,306 - INFO - Found 6 relationships in AppState.swift
2024-11-05 16:30:04,306 - INFO - Found 5 relationships in PlantAnimationProvider.swift
2024-11-05 16:30:04,306 - INFO - Found 5 relationships in AppState+Exploration.swift
2024-11-05 16:30:04,306 - INFO - Found 5 relationships in BOTanistApp.swift
2024-11-05 16:30:04,306 - INFO - Found 6 relationships in RobotCharacter+Movement.swift
2024-11-05 16:30:04,306 - INFO - Found 3 relationships in RobotProvider.swift
2024-11-05 16:30:04,306 - INFO - Found 2 relationships in RobotProvider+Loading.swift
2024-11-05 16:30:04,306 - INFO - Found 6 relationships in RobotCharacter.swift
2024-11-05 16:30:04,306 - INFO - Found 4 relationships in RobotData.swift
2024-11-05 16:30:04,307 - INFO - Found 2 relationships in AnimationStateMachine.swift
2024-11-05 16:30:04,307 - INFO - Found 4 relationships in RealityView+TouchControls.swift
2024-11-05 16:30:04,307 - INFO - Found 3 relationships in EntityExtensions.swift
2024-11-05 16:30:04,307 - INFO - Found 1 relationships in StringExtensions.swift
2024-11-05 16:30:04,307 - INFO - Found 1 relationships in Preview+AppStateEnvironment.swift
2024-11-05 16:30:04,307 - INFO - Found 3 relationships in ColorExtensions.swift
2024-11-05 16:30:04,307 - INFO - Found 4 relationships in RealityView+KeyboardControls.swift
2024-11-05 16:30:04,307 - INFO - Found 3 relationships in CaseIterableExtensions.swift
2024-11-05 16:30:04,307 - INFO - Found 2 relationships in JointPinComponent.swift
2024-11-05 16:30:04,307 - INFO - Found 3 relationships in JointPinSystem.swift
2024-11-05 16:30:04,307 - INFO - Found 1 relationships in StartScreenView.swift
2024-11-05 16:30:04,307 - INFO - Found 2 relationships in OrnamentView.swift
2024-11-05 16:30:04,307 - INFO - Found 5 relationships in SelectorViews.swift
2024-11-05 16:30:04,307 - INFO - Found 4 relationships in RobotView.swift
2024-11-05 16:30:04,307 - INFO - Found 3 relationships in RobotCustomizationView.swift
2024-11-05 16:30:04,307 - INFO - Found 6 relationships in ExplorationView.swift
2024-11-05 16:30:04,307 - INFO - Found 4 relationships in ContentView.swift
2024-11-05 16:30:04,314 - INFO - Found 4 Swift files
2024-11-05 16:30:04,315 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 16:30:04,315 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 16:30:04,315 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 16:30:04,315 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 16:30:04,315 - INFO - Successfully read EntryPoint.swift
2024-11-05 16:30:04,315 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 16:30:04,315 - INFO - Successfully read DecibelSlider.swift
2024-11-05 16:30:04,315 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 16:30:04,316 - INFO - Found 2 relationships in EntryPoint.swift
2024-11-05 16:30:04,316 - INFO - Found 3 relationships in SpatialAudioView.swift
2024-11-05 16:30:04,316 - INFO - Found 1 relationships in DecibelSlider.swift
2024-11-05 16:30:04,316 - INFO - Found 1 relationships in AxisVisualizer.swift
2024-11-05 16:32:52,429 - INFO - Saved HTML to debug/visionos.html
2024-11-05 16:32:52,455 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-main
2024-11-05 16:32:52,456 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:32:52,457 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:32:52,458 - INFO - Found video link: https://developer.apple.com/videos/
2024-11-05 16:32:52,458 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:32:52,459 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:32:52,459 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos
2024-11-05 16:32:52,459 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:32:52,459 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:32:52,459 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:32:52,460 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:32:52,460 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:32:52,460 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:32:52,461 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:32:52,461 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:32:52,461 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:32:52,462 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:32:52,462 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:32:52,462 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:32:52,463 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:32:52,463 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:32:52,464 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:32:52,464 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:32:52,464 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:32:52,465 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:32:52,465 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:32:52,465 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:32:52,466 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit
2024-11-05 16:32:52,466 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit/RealityView
2024-11-05 16:32:52,467 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:32:52,467 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:32:52,467 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:32:52,468 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:32:52,468 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:32:52,469 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:32:52,469 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:32:52,470 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:32:52,471 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:32:52,472 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:32:52,472 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:32:52,473 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:32:52,474 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#App-construction
2024-11-05 16:32:52,474 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:32:52,475 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:32:52,475 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:32:52,476 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:32:52,476 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:32:52,477 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Design
2024-11-05 16:32:52,478 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:32:52,478 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:32:52,479 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#SwiftUI
2024-11-05 16:32:52,479 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:32:52,480 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:32:52,481 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:32:52,481 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 16:32:52,482 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:32:52,482 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:32:52,483 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:32:52,483 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:32:52,484 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:32:52,485 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:32:52,485 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 16:32:52,486 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 16:32:52,486 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 16:32:52,487 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#ARKit
2024-11-05 16:32:52,487 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:32:52,488 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 16:32:52,488 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:32:52,489 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/placing-content-on-detected-planes
2024-11-05 16:32:52,489 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-points-in-world-space
2024-11-05 16:32:52,490 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-images-in-3d-space
2024-11-05 16:32:52,490 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 16:32:52,491 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 16:32:52,492 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Video-playback
2024-11-05 16:32:52,492 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:32:52,493 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 16:32:52,493 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 16:32:52,494 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 16:32:52,494 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 16:32:52,495 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 16:32:52,496 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Xcode-and-Simulator
2024-11-05 16:32:52,497 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/configuring-your-app-icon
2024-11-05 16:32:52,497 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 16:32:52,498 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 16:32:52,498 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 16:32:52,499 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 16:32:52,499 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Performance
2024-11-05 16:32:52,500 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 16:32:52,500 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 16:32:52,501 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 16:32:52,501 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 16:32:52,501 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 16:32:52,502 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 16:32:52,502 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-app-to-visionos
2024-11-05 16:32:52,503 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 16:32:52,504 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 16:32:52,505 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 16:32:52,505 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 16:32:52,506 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 16:32:52,506 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/accessing-the-main-camera
2024-11-05 16:32:52,507 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 16:32:52,507 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-top
2024-11-05 16:32:52,508 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:32:52,508 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:32:52,509 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:32:52,509 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:32:52,510 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:32:52,510 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:32:52,513 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:32:52,513 - INFO - Found video link: https://developer.apple.com/videos/
2024-11-05 16:32:52,514 - INFO - Found video link: https://developer.apple.com/wwdc/
2024-11-05 16:32:52,537 - INFO - Found 74 documentation links
2024-11-05 16:32:52,537 - INFO - Found 2 videos links
2024-11-05 16:32:54,010 - INFO - Found 3 sections, 1 topics, and 0 samples
2024-11-05 16:32:56,429 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 16:32:56,439 - ERROR - Error processing page https://developer.apple.com/design/human-interface-guidelines/immersive-experiences: cannot access local variable 'category' where it is not associated with a value
2024-11-05 16:34:24,235 - INFO - Saved HTML to debug/visionos.html
2024-11-05 16:34:24,262 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-main
2024-11-05 16:34:24,264 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:34:24,270 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:34:24,271 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:34:24,273 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:34:24,273 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:34:24,274 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos
2024-11-05 16:34:24,274 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:34:24,275 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:34:24,276 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:34:24,276 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:34:24,277 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:34:24,277 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:34:24,279 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:34:24,279 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:34:24,280 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:34:24,280 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:34:24,280 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:34:24,281 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:34:24,281 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:34:24,282 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:34:24,283 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:34:24,283 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:34:24,284 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:34:24,284 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:34:24,285 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:34:24,285 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:34:24,286 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit
2024-11-05 16:34:24,286 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit/RealityView
2024-11-05 16:34:24,287 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:34:24,287 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:34:24,287 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:34:24,288 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:34:24,288 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:34:24,289 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:34:24,290 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:34:24,291 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:34:24,291 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:34:24,292 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:34:24,293 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:34:24,294 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:34:24,295 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#App-construction
2024-11-05 16:34:24,296 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:34:24,297 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:34:24,298 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:34:24,299 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:34:24,299 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:34:24,300 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Design
2024-11-05 16:34:24,302 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:34:24,302 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:34:24,303 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#SwiftUI
2024-11-05 16:34:24,304 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:34:24,305 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:34:24,306 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:34:24,307 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 16:34:24,308 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:34:24,309 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:34:24,309 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:34:24,310 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:34:24,311 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:34:24,311 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:34:24,312 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 16:34:24,313 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 16:34:24,313 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 16:34:24,314 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#ARKit
2024-11-05 16:34:24,315 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:34:24,315 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 16:34:24,316 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:34:24,317 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/placing-content-on-detected-planes
2024-11-05 16:34:24,317 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-points-in-world-space
2024-11-05 16:34:24,318 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-images-in-3d-space
2024-11-05 16:34:24,319 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 16:34:24,320 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 16:34:24,321 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Video-playback
2024-11-05 16:34:24,321 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:34:24,322 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 16:34:24,323 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 16:34:24,323 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 16:34:24,324 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 16:34:24,325 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 16:34:24,325 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Xcode-and-Simulator
2024-11-05 16:34:24,326 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/configuring-your-app-icon
2024-11-05 16:34:24,326 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 16:34:24,327 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 16:34:24,328 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 16:34:24,328 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 16:34:24,329 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Performance
2024-11-05 16:34:24,330 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 16:34:24,330 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 16:34:24,331 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 16:34:24,332 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 16:34:24,332 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 16:34:24,333 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 16:34:24,334 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-app-to-visionos
2024-11-05 16:34:24,334 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 16:34:24,335 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 16:34:24,335 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 16:34:24,336 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 16:34:24,337 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 16:34:24,337 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/accessing-the-main-camera
2024-11-05 16:34:24,338 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 16:34:24,339 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-top
2024-11-05 16:34:24,339 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:34:24,340 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:34:24,340 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:34:24,341 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:34:24,341 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:34:24,343 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:34:24,366 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:34:24,369 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:34:24,383 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:34:24,430 - INFO - Found 74 documentation links
2024-11-05 16:34:24,430 - INFO - Found 67 other links
2024-11-05 16:34:24,430 - INFO - Found 2 videos links
2024-11-05 16:34:25,922 - INFO - Found 3 sections, 1 topics, and 0 samples
2024-11-05 16:34:28,306 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 16:34:28,323 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:34:28,324 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:34:28,338 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 16:34:28,339 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/automatic
2024-11-05 16:34:28,340 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/mixed
2024-11-05 16:34:28,340 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:34:28,341 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 16:34:28,342 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/full
2024-11-05 16:34:28,346 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 16:34:28,349 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit/scenereconstructionprovider
2024-11-05 16:34:28,351 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 16:34:28,359 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-fully-immersive-experiences
2024-11-05 16:34:28,360 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:34:28,361 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle
2024-11-05 16:34:28,361 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/Immersive-spaces
2024-11-05 16:34:28,363 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10087
2024-11-05 16:34:28,364 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 16:34:28,364 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10075
2024-11-05 16:34:28,377 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:34:28,410 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:34:28,414 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:34:28,432 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:34:28,469 - INFO - Found 98 other links
2024-11-05 16:34:28,469 - INFO - Found 12 documentation links
2024-11-05 16:34:28,469 - INFO - Found 5 videos links
2024-11-05 16:34:29,737 - INFO - Found 10 sections, 1 topics, and 0 samples
2024-11-05 16:34:32,023 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 16:34:32,042 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:34:32,043 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:34:32,077 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-your-first-visionos-app
2024-11-05 16:34:32,078 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10096
2024-11-05 16:34:32,079 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10086
2024-11-05 16:34:32,080 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 16:34:32,087 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:34:32,119 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:34:32,122 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:34:32,146 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:34:32,176 - INFO - Found 99 other links
2024-11-05 16:34:32,176 - INFO - Found 2 documentation links
2024-11-05 16:34:32,176 - INFO - Found 5 videos links
2024-11-05 16:34:33,336 - INFO - Found 4 sections, 1 topics, and 0 samples
2024-11-05 16:34:35,102 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 16:34:41,937 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 16:34:44,292 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 16:34:50,614 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 16:34:52,891 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 16:34:53,120 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 16:34:53,123 - INFO - Found 42 Swift files
2024-11-05 16:34:53,124 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing Orbit.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 16:34:53,124 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing Globe.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing Earth.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing Starfield.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing Sun.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing Module.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing Modules.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 16:34:53,125 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 16:34:53,126 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 16:34:53,126 - INFO - 
Analyzing Package.swift:
2024-11-05 16:34:53,126 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 16:34:53,126 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 16:34:53,126 - INFO - Successfully read WorldApp.swift
2024-11-05 16:34:53,126 - INFO - Successfully read SliderGridRow.swift
2024-11-05 16:34:53,126 - INFO - Successfully read EarthSettings.swift
2024-11-05 16:34:53,126 - INFO - Successfully read GlobeSettings.swift
2024-11-05 16:34:53,126 - INFO - Successfully read OrbitSettings.swift
2024-11-05 16:34:53,126 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 16:34:53,126 - INFO - Successfully read SettingsButton.swift
2024-11-05 16:34:53,126 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 16:34:53,126 - INFO - Successfully read OrbitModule.swift
2024-11-05 16:34:53,126 - INFO - Successfully read OrbitToggle.swift
2024-11-05 16:34:53,126 - INFO - Successfully read Orbit.swift
2024-11-05 16:34:53,126 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 16:34:53,126 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 16:34:53,126 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 16:34:53,127 - INFO - Successfully read GlobeToggle.swift
2024-11-05 16:34:53,127 - INFO - Successfully read GlobeControls.swift
2024-11-05 16:34:53,127 - INFO - Successfully read GlobeModule.swift
2024-11-05 16:34:53,127 - INFO - Successfully read Globe.swift
2024-11-05 16:34:53,127 - INFO - Successfully read Earth.swift
2024-11-05 16:34:53,127 - INFO - Successfully read Starfield.swift
2024-11-05 16:34:53,127 - INFO - Successfully read Sun.swift
2024-11-05 16:34:53,127 - INFO - Successfully read ViewModel.swift
2024-11-05 16:34:53,127 - INFO - Successfully read Module.swift
2024-11-05 16:34:53,127 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 16:34:53,127 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 16:34:53,127 - INFO - Successfully read SolarSystem.swift
2024-11-05 16:34:53,127 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 16:34:53,127 - INFO - Successfully read TraceSystem.swift
2024-11-05 16:34:53,127 - INFO - Successfully read RotationSystem.swift
2024-11-05 16:34:53,127 - INFO - Successfully read ModuleDetail.swift
2024-11-05 16:34:53,128 - INFO - Successfully read Modules.swift
2024-11-05 16:34:53,128 - INFO - Successfully read TableOfContents.swift
2024-11-05 16:34:53,128 - INFO - Successfully read ModuleCard.swift
2024-11-05 16:34:53,128 - INFO - Successfully read Entity+Trace.swift
2024-11-05 16:34:53,128 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 16:34:53,128 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 16:34:53,128 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 16:34:53,128 - INFO - Successfully read EarthEntity.swift
2024-11-05 16:34:53,128 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 16:34:53,128 - INFO - Successfully read Package.swift
2024-11-05 16:34:53,128 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 16:34:53,128 - INFO - Successfully read WorldAssets.swift
2024-11-05 16:34:53,129 - INFO - Found 4 relationships in WorldApp.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in SliderGridRow.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in EarthSettings.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in GlobeSettings.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in OrbitSettings.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in SatelliteSettings.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in SettingsButton.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in SolarSystemSettings.swift
2024-11-05 16:34:53,129 - INFO - Found 3 relationships in OrbitModule.swift
2024-11-05 16:34:53,129 - INFO - Found 2 relationships in OrbitToggle.swift
2024-11-05 16:34:53,129 - INFO - Found 2 relationships in Orbit.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in TypeTextModifier.swift
2024-11-05 16:34:53,129 - INFO - Found 2 relationships in PlacementGesturesModifier.swift
2024-11-05 16:34:53,129 - INFO - Found 2 relationships in DragRotationModifier.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in GlobeToggle.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in GlobeControls.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in GlobeModule.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in Globe.swift
2024-11-05 16:34:53,129 - INFO - Found 4 relationships in Earth.swift
2024-11-05 16:34:53,129 - INFO - Found 3 relationships in Starfield.swift
2024-11-05 16:34:53,129 - INFO - Found 4 relationships in Sun.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in ViewModel.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in Module.swift
2024-11-05 16:34:53,129 - INFO - Found 2 relationships in SolarSystemToggle.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in SolarSystemModule.swift
2024-11-05 16:34:53,129 - INFO - Found 2 relationships in SolarSystem.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in SolarSystemControls.swift
2024-11-05 16:34:53,129 - INFO - Found 2 relationships in TraceSystem.swift
2024-11-05 16:34:53,129 - INFO - Found 2 relationships in RotationSystem.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in ModuleDetail.swift
2024-11-05 16:34:53,129 - INFO - Found 2 relationships in Modules.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in TableOfContents.swift
2024-11-05 16:34:53,129 - INFO - Found 1 relationships in ModuleCard.swift
2024-11-05 16:34:53,129 - INFO - Found 2 relationships in Entity+Trace.swift
2024-11-05 16:34:53,130 - INFO - Found 1 relationships in EarthEntity+Configuration.swift
2024-11-05 16:34:53,130 - INFO - Found 3 relationships in SatelliteEntity.swift
2024-11-05 16:34:53,130 - INFO - Found 2 relationships in Entity+Sunlight.swift
2024-11-05 16:34:53,130 - INFO - Found 3 relationships in EarthEntity.swift
2024-11-05 16:34:53,130 - INFO - Found 1 relationships in SatelliteEntity+Configuration.swift
2024-11-05 16:34:53,130 - INFO - Found 1 relationships in Package.swift
2024-11-05 16:34:53,130 - INFO - Found 3 relationships in SunPositionSystem.swift
2024-11-05 16:34:53,130 - INFO - Found 3 relationships in WorldAssets.swift
2024-11-05 16:34:53,144 - INFO - Found 30 Swift files
2024-11-05 16:34:53,144 - INFO - 
Analyzing AppState.swift:
2024-11-05 16:34:53,144 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 16:34:53,144 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 16:34:53,144 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 16:34:53,144 - INFO - 
Analyzing Package.swift:
2024-11-05 16:34:53,144 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 16:34:53,144 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 16:34:53,144 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing RobotData.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 16:34:53,145 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 16:34:53,146 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 16:34:53,146 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 16:34:53,146 - INFO - 
Analyzing RobotView.swift:
2024-11-05 16:34:53,146 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 16:34:53,146 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 16:34:53,146 - INFO - 
Analyzing ContentView.swift:
2024-11-05 16:34:53,146 - INFO - Successfully read Package.swift
2024-11-05 16:34:53,146 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 16:34:53,146 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:34:53,146 - INFO - Successfully read PlantComponent.swift
2024-11-05 16:34:53,147 - INFO - Successfully read AppState.swift
2024-11-05 16:34:53,148 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 16:34:53,148 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 16:34:53,148 - INFO - Successfully read BOTanistApp.swift
2024-11-05 16:34:53,148 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 16:34:53,148 - INFO - Successfully read RobotProvider.swift
2024-11-05 16:34:53,148 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 16:34:53,148 - INFO - Successfully read RobotCharacter.swift
2024-11-05 16:34:53,148 - INFO - Successfully read RobotData.swift
2024-11-05 16:34:53,148 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 16:34:53,148 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 16:34:53,148 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:34:53,148 - INFO - Successfully read StringExtensions.swift
2024-11-05 16:34:53,148 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 16:34:53,148 - INFO - Successfully read ColorExtensions.swift
2024-11-05 16:34:53,148 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 16:34:53,148 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 16:34:53,148 - INFO - Successfully read JointPinComponent.swift
2024-11-05 16:34:53,149 - INFO - Successfully read JointPinSystem.swift
2024-11-05 16:34:53,149 - INFO - Successfully read StartScreenView.swift
2024-11-05 16:34:53,149 - INFO - Successfully read OrnamentView.swift
2024-11-05 16:34:53,149 - INFO - Successfully read SelectorViews.swift
2024-11-05 16:34:53,149 - INFO - Successfully read RobotView.swift
2024-11-05 16:34:53,149 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 16:34:53,149 - INFO - Successfully read ExplorationView.swift
2024-11-05 16:34:53,149 - INFO - Successfully read ContentView.swift
2024-11-05 16:34:53,149 - INFO - Found 1 relationships in Package.swift
2024-11-05 16:34:53,149 - INFO - Found 1 relationships in BOTanistAssets.swift
2024-11-05 16:34:53,149 - INFO - Found 2 relationships in EntityExtensions.swift
2024-11-05 16:34:53,149 - INFO - Found 2 relationships in PlantComponent.swift
2024-11-05 16:34:53,149 - INFO - Found 6 relationships in AppState.swift
2024-11-05 16:34:53,149 - INFO - Found 5 relationships in PlantAnimationProvider.swift
2024-11-05 16:34:53,149 - INFO - Found 5 relationships in AppState+Exploration.swift
2024-11-05 16:34:53,149 - INFO - Found 5 relationships in BOTanistApp.swift
2024-11-05 16:34:53,149 - INFO - Found 6 relationships in RobotCharacter+Movement.swift
2024-11-05 16:34:53,149 - INFO - Found 3 relationships in RobotProvider.swift
2024-11-05 16:34:53,149 - INFO - Found 2 relationships in RobotProvider+Loading.swift
2024-11-05 16:34:53,149 - INFO - Found 6 relationships in RobotCharacter.swift
2024-11-05 16:34:53,149 - INFO - Found 4 relationships in RobotData.swift
2024-11-05 16:34:53,149 - INFO - Found 2 relationships in AnimationStateMachine.swift
2024-11-05 16:34:53,149 - INFO - Found 4 relationships in RealityView+TouchControls.swift
2024-11-05 16:34:53,149 - INFO - Found 3 relationships in EntityExtensions.swift
2024-11-05 16:34:53,149 - INFO - Found 1 relationships in StringExtensions.swift
2024-11-05 16:34:53,149 - INFO - Found 1 relationships in Preview+AppStateEnvironment.swift
2024-11-05 16:34:53,149 - INFO - Found 3 relationships in ColorExtensions.swift
2024-11-05 16:34:53,149 - INFO - Found 4 relationships in RealityView+KeyboardControls.swift
2024-11-05 16:34:53,150 - INFO - Found 3 relationships in CaseIterableExtensions.swift
2024-11-05 16:34:53,150 - INFO - Found 2 relationships in JointPinComponent.swift
2024-11-05 16:34:53,150 - INFO - Found 3 relationships in JointPinSystem.swift
2024-11-05 16:34:53,150 - INFO - Found 1 relationships in StartScreenView.swift
2024-11-05 16:34:53,150 - INFO - Found 2 relationships in OrnamentView.swift
2024-11-05 16:34:53,150 - INFO - Found 5 relationships in SelectorViews.swift
2024-11-05 16:34:53,150 - INFO - Found 4 relationships in RobotView.swift
2024-11-05 16:34:53,150 - INFO - Found 3 relationships in RobotCustomizationView.swift
2024-11-05 16:34:53,150 - INFO - Found 6 relationships in ExplorationView.swift
2024-11-05 16:34:53,150 - INFO - Found 4 relationships in ContentView.swift
2024-11-05 16:34:53,157 - INFO - Found 4 Swift files
2024-11-05 16:34:53,157 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 16:34:53,157 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 16:34:53,157 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 16:34:53,157 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 16:34:53,157 - INFO - Successfully read EntryPoint.swift
2024-11-05 16:34:53,158 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 16:34:53,158 - INFO - Successfully read DecibelSlider.swift
2024-11-05 16:34:53,158 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 16:34:53,158 - INFO - Found 2 relationships in EntryPoint.swift
2024-11-05 16:34:53,158 - INFO - Found 3 relationships in SpatialAudioView.swift
2024-11-05 16:34:53,158 - INFO - Found 1 relationships in DecibelSlider.swift
2024-11-05 16:34:53,158 - INFO - Found 1 relationships in AxisVisualizer.swift
2024-11-05 16:40:38,426 - INFO - Saved HTML to debug/visionos.html
2024-11-05 16:40:38,451 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-main
2024-11-05 16:40:38,452 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:40:38,462 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:40:38,463 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:40:38,467 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:40:38,468 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:40:38,469 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos
2024-11-05 16:40:38,470 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:40:38,471 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:40:38,472 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:40:38,473 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:40:38,474 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:40:38,474 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:40:38,476 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:40:38,477 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:40:38,478 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:40:38,478 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:40:38,479 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:40:38,480 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:40:38,481 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:40:38,482 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:40:38,482 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:40:38,484 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:40:38,485 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:40:38,486 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:40:38,487 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:40:38,488 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:40:38,488 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit
2024-11-05 16:40:38,489 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit/RealityView
2024-11-05 16:40:38,490 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:40:38,491 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:40:38,492 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:40:38,493 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:40:38,494 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:40:38,495 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:40:38,496 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:40:38,497 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:40:38,499 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:40:38,500 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:40:38,501 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:40:38,502 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:40:38,503 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#App-construction
2024-11-05 16:40:38,504 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:40:38,506 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:40:38,507 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:40:38,508 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:40:38,509 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:40:38,510 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Design
2024-11-05 16:40:38,512 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:40:38,514 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:40:38,515 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#SwiftUI
2024-11-05 16:40:38,516 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:40:38,518 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:40:38,519 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:40:38,520 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 16:40:38,521 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:40:38,522 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:40:38,523 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:40:38,524 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:40:38,525 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:40:38,527 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:40:38,528 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 16:40:38,529 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 16:40:38,530 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 16:40:38,531 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#ARKit
2024-11-05 16:40:38,532 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:40:38,533 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 16:40:38,534 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:40:38,535 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/placing-content-on-detected-planes
2024-11-05 16:40:38,536 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-points-in-world-space
2024-11-05 16:40:38,538 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-images-in-3d-space
2024-11-05 16:40:38,539 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 16:40:38,540 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 16:40:38,541 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Video-playback
2024-11-05 16:40:38,542 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:40:38,543 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 16:40:38,544 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 16:40:38,546 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 16:40:38,551 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 16:40:38,552 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 16:40:38,553 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Xcode-and-Simulator
2024-11-05 16:40:38,554 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/configuring-your-app-icon
2024-11-05 16:40:38,556 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 16:40:38,557 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 16:40:38,558 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 16:40:38,559 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 16:40:38,560 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Performance
2024-11-05 16:40:38,561 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 16:40:38,562 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 16:40:38,563 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 16:40:38,564 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 16:40:38,565 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 16:40:38,566 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 16:40:38,567 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-app-to-visionos
2024-11-05 16:40:38,568 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 16:40:38,569 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 16:40:38,570 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 16:40:38,571 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 16:40:38,572 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 16:40:38,572 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/accessing-the-main-camera
2024-11-05 16:40:38,573 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 16:40:38,574 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-top
2024-11-05 16:40:38,575 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:40:38,577 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:40:38,578 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:40:38,579 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:40:38,580 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:40:38,583 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:40:38,616 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:40:38,620 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:40:38,636 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:40:38,661 - INFO - Found 74 documentation links
2024-11-05 16:40:38,662 - INFO - Found 67 other links
2024-11-05 16:40:38,662 - INFO - Found 2 videos links
2024-11-05 16:40:39,975 - INFO - Found 3 sections, 1 topics, and 0 samples
2024-11-05 16:40:42,420 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 16:40:42,440 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:40:42,441 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:40:42,458 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 16:40:42,459 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/automatic
2024-11-05 16:40:42,460 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/mixed
2024-11-05 16:40:42,461 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:40:42,461 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 16:40:42,462 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/full
2024-11-05 16:40:42,468 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 16:40:42,473 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit/scenereconstructionprovider
2024-11-05 16:40:42,477 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 16:40:42,487 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-fully-immersive-experiences
2024-11-05 16:40:42,488 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:40:42,490 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle
2024-11-05 16:40:42,492 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/Immersive-spaces
2024-11-05 16:40:42,495 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10087
2024-11-05 16:40:42,496 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 16:40:42,497 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10075
2024-11-05 16:40:42,516 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:40:42,557 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:40:42,561 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:40:42,578 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:40:42,602 - INFO - Found 98 other links
2024-11-05 16:40:42,603 - INFO - Found 12 documentation links
2024-11-05 16:40:42,603 - INFO - Found 5 videos links
2024-11-05 16:40:44,652 - INFO - Found 10 sections, 1 topics, and 0 samples
2024-11-05 16:40:46,577 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 16:40:46,601 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:40:46,602 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:40:46,641 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-your-first-visionos-app
2024-11-05 16:40:46,643 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10096
2024-11-05 16:40:46,643 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10086
2024-11-05 16:40:46,644 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 16:40:46,652 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:40:46,686 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:40:46,690 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:40:46,708 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:40:46,737 - INFO - Found 99 other links
2024-11-05 16:40:46,737 - INFO - Found 2 documentation links
2024-11-05 16:40:46,737 - INFO - Found 5 videos links
2024-11-05 16:40:47,975 - INFO - Found 4 sections, 1 topics, and 0 samples
2024-11-05 16:40:57,279 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 16:41:00,864 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 16:41:03,285 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 16:41:08,999 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 16:41:12,226 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 16:41:12,405 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 16:41:12,409 - INFO - Found 42 Swift files
2024-11-05 16:41:12,409 - INFO - 
Analyzing WorldApp.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing SliderGridRow.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing EarthSettings.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing GlobeSettings.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing OrbitSettings.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing SatelliteSettings.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing SettingsButton.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing SolarSystemSettings.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing OrbitModule.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing OrbitToggle.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing Orbit.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing TypeTextModifier.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing PlacementGesturesModifier.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing DragRotationModifier.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing GlobeToggle.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing GlobeControls.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing GlobeModule.swift:
2024-11-05 16:41:12,409 - INFO - 
Analyzing Globe.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing Earth.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing Starfield.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing Sun.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing ViewModel.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing Module.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing SolarSystemToggle.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing SolarSystemModule.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing SolarSystem.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing SolarSystemControls.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing TraceSystem.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing RotationSystem.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing ModuleDetail.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing Modules.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing TableOfContents.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing ModuleCard.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing Entity+Trace.swift:
2024-11-05 16:41:12,410 - INFO - 
Analyzing EarthEntity+Configuration.swift:
2024-11-05 16:41:12,411 - INFO - 
Analyzing SatelliteEntity.swift:
2024-11-05 16:41:12,411 - INFO - 
Analyzing Entity+Sunlight.swift:
2024-11-05 16:41:12,411 - INFO - 
Analyzing EarthEntity.swift:
2024-11-05 16:41:12,411 - INFO - 
Analyzing SatelliteEntity+Configuration.swift:
2024-11-05 16:41:12,411 - INFO - 
Analyzing Package.swift:
2024-11-05 16:41:12,411 - INFO - 
Analyzing SunPositionSystem.swift:
2024-11-05 16:41:12,411 - INFO - 
Analyzing WorldAssets.swift:
2024-11-05 16:41:12,411 - INFO - Successfully read WorldApp.swift
2024-11-05 16:41:12,411 - INFO - Successfully read SliderGridRow.swift
2024-11-05 16:41:12,411 - INFO - Successfully read EarthSettings.swift
2024-11-05 16:41:12,411 - INFO - Successfully read GlobeSettings.swift
2024-11-05 16:41:12,411 - INFO - Successfully read OrbitSettings.swift
2024-11-05 16:41:12,411 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 16:41:12,412 - INFO - Successfully read SettingsButton.swift
2024-11-05 16:41:12,412 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 16:41:12,412 - INFO - Successfully read OrbitModule.swift
2024-11-05 16:41:12,412 - INFO - Successfully read OrbitToggle.swift
2024-11-05 16:41:12,412 - INFO - Successfully read Orbit.swift
2024-11-05 16:41:12,412 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 16:41:12,412 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 16:41:12,412 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 16:41:12,412 - INFO - Successfully read GlobeToggle.swift
2024-11-05 16:41:12,412 - INFO - Successfully read GlobeControls.swift
2024-11-05 16:41:12,412 - INFO - Successfully read GlobeModule.swift
2024-11-05 16:41:12,412 - INFO - Successfully read Globe.swift
2024-11-05 16:41:12,412 - INFO - Successfully read Earth.swift
2024-11-05 16:41:12,412 - INFO - Successfully read Starfield.swift
2024-11-05 16:41:12,412 - INFO - Successfully read Sun.swift
2024-11-05 16:41:12,413 - INFO - Successfully read ViewModel.swift
2024-11-05 16:41:12,413 - INFO - Successfully read Module.swift
2024-11-05 16:41:12,413 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 16:41:12,413 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 16:41:12,413 - INFO - Successfully read SolarSystem.swift
2024-11-05 16:41:12,413 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 16:41:12,413 - INFO - Successfully read TraceSystem.swift
2024-11-05 16:41:12,413 - INFO - Successfully read RotationSystem.swift
2024-11-05 16:41:12,413 - INFO - Successfully read ModuleDetail.swift
2024-11-05 16:41:12,413 - INFO - Successfully read Modules.swift
2024-11-05 16:41:12,413 - INFO - Successfully read TableOfContents.swift
2024-11-05 16:41:12,413 - INFO - Successfully read ModuleCard.swift
2024-11-05 16:41:12,413 - INFO - Successfully read Entity+Trace.swift
2024-11-05 16:41:12,413 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 16:41:12,413 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 16:41:12,413 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 16:41:12,413 - INFO - Successfully read EarthEntity.swift
2024-11-05 16:41:12,413 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 16:41:12,413 - INFO - Successfully read Package.swift
2024-11-05 16:41:12,413 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 16:41:12,414 - INFO - Successfully read WorldAssets.swift
2024-11-05 16:41:12,416 - INFO - Found 4 relationships in WorldApp.swift
2024-11-05 16:41:12,419 - INFO - Found 1 relationships in SliderGridRow.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in EarthSettings.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in GlobeSettings.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in OrbitSettings.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in SatelliteSettings.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in SettingsButton.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in SolarSystemSettings.swift
2024-11-05 16:41:12,420 - INFO - Found 3 relationships in OrbitModule.swift
2024-11-05 16:41:12,420 - INFO - Found 2 relationships in OrbitToggle.swift
2024-11-05 16:41:12,420 - INFO - Found 2 relationships in Orbit.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in TypeTextModifier.swift
2024-11-05 16:41:12,420 - INFO - Found 2 relationships in PlacementGesturesModifier.swift
2024-11-05 16:41:12,420 - INFO - Found 2 relationships in DragRotationModifier.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in GlobeToggle.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in GlobeControls.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in GlobeModule.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in Globe.swift
2024-11-05 16:41:12,420 - INFO - Found 4 relationships in Earth.swift
2024-11-05 16:41:12,420 - INFO - Found 3 relationships in Starfield.swift
2024-11-05 16:41:12,420 - INFO - Found 4 relationships in Sun.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in ViewModel.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in Module.swift
2024-11-05 16:41:12,420 - INFO - Found 2 relationships in SolarSystemToggle.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in SolarSystemModule.swift
2024-11-05 16:41:12,420 - INFO - Found 2 relationships in SolarSystem.swift
2024-11-05 16:41:12,420 - INFO - Found 1 relationships in SolarSystemControls.swift
2024-11-05 16:41:12,420 - INFO - Found 2 relationships in TraceSystem.swift
2024-11-05 16:41:12,420 - INFO - Found 2 relationships in RotationSystem.swift
2024-11-05 16:41:12,421 - INFO - Found 1 relationships in ModuleDetail.swift
2024-11-05 16:41:12,421 - INFO - Found 2 relationships in Modules.swift
2024-11-05 16:41:12,421 - INFO - Found 1 relationships in TableOfContents.swift
2024-11-05 16:41:12,421 - INFO - Found 1 relationships in ModuleCard.swift
2024-11-05 16:41:12,421 - INFO - Found 2 relationships in Entity+Trace.swift
2024-11-05 16:41:12,421 - INFO - Found 1 relationships in EarthEntity+Configuration.swift
2024-11-05 16:41:12,421 - INFO - Found 3 relationships in SatelliteEntity.swift
2024-11-05 16:41:12,421 - INFO - Found 2 relationships in Entity+Sunlight.swift
2024-11-05 16:41:12,421 - INFO - Found 3 relationships in EarthEntity.swift
2024-11-05 16:41:12,421 - INFO - Found 1 relationships in SatelliteEntity+Configuration.swift
2024-11-05 16:41:12,421 - INFO - Found 1 relationships in Package.swift
2024-11-05 16:41:12,421 - INFO - Found 3 relationships in SunPositionSystem.swift
2024-11-05 16:41:12,421 - INFO - Found 3 relationships in WorldAssets.swift
2024-11-05 16:41:12,438 - INFO - Found 30 Swift files
2024-11-05 16:41:12,441 - INFO - 
Analyzing AppState.swift:
2024-11-05 16:41:12,442 - INFO - 
Analyzing PlantAnimationProvider.swift:
2024-11-05 16:41:12,442 - INFO - 
Analyzing AppState+Exploration.swift:
2024-11-05 16:41:12,442 - INFO - 
Analyzing BOTanistApp.swift:
2024-11-05 16:41:12,442 - INFO - 
Analyzing Package.swift:
2024-11-05 16:41:12,442 - INFO - 
Analyzing BOTanistAssets.swift:
2024-11-05 16:41:12,442 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 16:41:12,442 - INFO - 
Analyzing PlantComponent.swift:
2024-11-05 16:41:12,442 - INFO - 
Analyzing RobotCharacter+Movement.swift:
2024-11-05 16:41:12,442 - INFO - 
Analyzing RobotProvider.swift:
2024-11-05 16:41:12,442 - INFO - 
Analyzing RobotProvider+Loading.swift:
2024-11-05 16:41:12,442 - INFO - 
Analyzing RobotCharacter.swift:
2024-11-05 16:41:12,442 - INFO - 
Analyzing RobotData.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing AnimationStateMachine.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing RealityView+TouchControls.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing EntityExtensions.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing StringExtensions.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing Preview+AppStateEnvironment.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing ColorExtensions.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing RealityView+KeyboardControls.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing CaseIterableExtensions.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing JointPinComponent.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing JointPinSystem.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing StartScreenView.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing OrnamentView.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing SelectorViews.swift:
2024-11-05 16:41:12,443 - INFO - 
Analyzing RobotView.swift:
2024-11-05 16:41:12,444 - INFO - 
Analyzing RobotCustomizationView.swift:
2024-11-05 16:41:12,444 - INFO - 
Analyzing ExplorationView.swift:
2024-11-05 16:41:12,444 - INFO - 
Analyzing ContentView.swift:
2024-11-05 16:41:12,444 - INFO - Successfully read Package.swift
2024-11-05 16:41:12,444 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 16:41:12,444 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:41:12,444 - INFO - Successfully read PlantComponent.swift
2024-11-05 16:41:12,446 - INFO - Successfully read AppState.swift
2024-11-05 16:41:12,446 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 16:41:12,446 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 16:41:12,446 - INFO - Successfully read BOTanistApp.swift
2024-11-05 16:41:12,447 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 16:41:12,447 - INFO - Successfully read RobotProvider.swift
2024-11-05 16:41:12,447 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 16:41:12,447 - INFO - Successfully read RobotCharacter.swift
2024-11-05 16:41:12,447 - INFO - Successfully read RobotData.swift
2024-11-05 16:41:12,447 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 16:41:12,447 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 16:41:12,447 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:41:12,447 - INFO - Successfully read StringExtensions.swift
2024-11-05 16:41:12,447 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 16:41:12,447 - INFO - Successfully read ColorExtensions.swift
2024-11-05 16:41:12,448 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 16:41:12,448 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 16:41:12,448 - INFO - Successfully read JointPinComponent.swift
2024-11-05 16:41:12,448 - INFO - Successfully read JointPinSystem.swift
2024-11-05 16:41:12,448 - INFO - Successfully read StartScreenView.swift
2024-11-05 16:41:12,448 - INFO - Successfully read OrnamentView.swift
2024-11-05 16:41:12,448 - INFO - Successfully read SelectorViews.swift
2024-11-05 16:41:12,448 - INFO - Successfully read RobotView.swift
2024-11-05 16:41:12,448 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 16:41:12,448 - INFO - Successfully read ExplorationView.swift
2024-11-05 16:41:12,448 - INFO - Successfully read ContentView.swift
2024-11-05 16:41:12,448 - INFO - Found 1 relationships in Package.swift
2024-11-05 16:41:12,448 - INFO - Found 1 relationships in BOTanistAssets.swift
2024-11-05 16:41:12,448 - INFO - Found 2 relationships in EntityExtensions.swift
2024-11-05 16:41:12,448 - INFO - Found 2 relationships in PlantComponent.swift
2024-11-05 16:41:12,448 - INFO - Found 6 relationships in AppState.swift
2024-11-05 16:41:12,448 - INFO - Found 5 relationships in PlantAnimationProvider.swift
2024-11-05 16:41:12,448 - INFO - Found 5 relationships in AppState+Exploration.swift
2024-11-05 16:41:12,449 - INFO - Found 5 relationships in BOTanistApp.swift
2024-11-05 16:41:12,449 - INFO - Found 6 relationships in RobotCharacter+Movement.swift
2024-11-05 16:41:12,449 - INFO - Found 3 relationships in RobotProvider.swift
2024-11-05 16:41:12,449 - INFO - Found 2 relationships in RobotProvider+Loading.swift
2024-11-05 16:41:12,449 - INFO - Found 6 relationships in RobotCharacter.swift
2024-11-05 16:41:12,449 - INFO - Found 4 relationships in RobotData.swift
2024-11-05 16:41:12,449 - INFO - Found 2 relationships in AnimationStateMachine.swift
2024-11-05 16:41:12,449 - INFO - Found 4 relationships in RealityView+TouchControls.swift
2024-11-05 16:41:12,449 - INFO - Found 3 relationships in EntityExtensions.swift
2024-11-05 16:41:12,449 - INFO - Found 1 relationships in StringExtensions.swift
2024-11-05 16:41:12,449 - INFO - Found 1 relationships in Preview+AppStateEnvironment.swift
2024-11-05 16:41:12,449 - INFO - Found 3 relationships in ColorExtensions.swift
2024-11-05 16:41:12,449 - INFO - Found 4 relationships in RealityView+KeyboardControls.swift
2024-11-05 16:41:12,449 - INFO - Found 3 relationships in CaseIterableExtensions.swift
2024-11-05 16:41:12,449 - INFO - Found 2 relationships in JointPinComponent.swift
2024-11-05 16:41:12,449 - INFO - Found 3 relationships in JointPinSystem.swift
2024-11-05 16:41:12,449 - INFO - Found 1 relationships in StartScreenView.swift
2024-11-05 16:41:12,452 - INFO - Found 2 relationships in OrnamentView.swift
2024-11-05 16:41:12,453 - INFO - Found 5 relationships in SelectorViews.swift
2024-11-05 16:41:12,453 - INFO - Found 4 relationships in RobotView.swift
2024-11-05 16:41:12,453 - INFO - Found 3 relationships in RobotCustomizationView.swift
2024-11-05 16:41:12,453 - INFO - Found 6 relationships in ExplorationView.swift
2024-11-05 16:41:12,453 - INFO - Found 4 relationships in ContentView.swift
2024-11-05 16:41:12,460 - INFO - Found 4 Swift files
2024-11-05 16:41:12,460 - INFO - 
Analyzing EntryPoint.swift:
2024-11-05 16:41:12,460 - INFO - 
Analyzing SpatialAudioView.swift:
2024-11-05 16:41:12,460 - INFO - 
Analyzing DecibelSlider.swift:
2024-11-05 16:41:12,460 - INFO - 
Analyzing AxisVisualizer.swift:
2024-11-05 16:41:12,460 - INFO - Successfully read EntryPoint.swift
2024-11-05 16:41:12,460 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 16:41:12,460 - INFO - Successfully read DecibelSlider.swift
2024-11-05 16:41:12,461 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 16:41:12,461 - INFO - Found 2 relationships in EntryPoint.swift
2024-11-05 16:41:12,461 - INFO - Found 3 relationships in SpatialAudioView.swift
2024-11-05 16:41:12,461 - INFO - Found 1 relationships in DecibelSlider.swift
2024-11-05 16:41:12,461 - INFO - Found 1 relationships in AxisVisualizer.swift
2024-11-05 16:46:20,137 - INFO - Saved HTML to debug/visionos.html
2024-11-05 16:46:20,163 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-main
2024-11-05 16:46:20,164 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:46:20,174 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:46:20,175 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:46:20,179 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:46:20,180 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:46:20,181 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos
2024-11-05 16:46:20,182 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:46:20,183 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:46:20,184 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:46:20,185 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:46:20,186 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:46:20,187 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:46:20,188 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:46:20,189 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:46:20,190 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:46:20,191 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:46:20,191 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:46:20,192 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:46:20,193 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:46:20,194 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:46:20,196 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:46:20,197 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:46:20,198 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:46:20,198 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:46:20,199 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:46:20,200 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:46:20,201 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit
2024-11-05 16:46:20,202 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit/RealityView
2024-11-05 16:46:20,203 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:46:20,204 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:46:20,205 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:46:20,206 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:46:20,207 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:46:20,208 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:46:20,210 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:46:20,211 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:46:20,212 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:46:20,214 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:46:20,215 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:46:20,216 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:46:20,217 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#App-construction
2024-11-05 16:46:20,219 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:46:20,220 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:46:20,222 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:46:20,223 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:46:20,224 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:46:20,231 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Design
2024-11-05 16:46:20,233 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:46:20,234 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:46:20,235 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#SwiftUI
2024-11-05 16:46:20,237 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:46:20,238 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:46:20,239 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:46:20,240 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 16:46:20,241 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:46:20,243 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:46:20,244 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:46:20,245 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:46:20,246 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:46:20,247 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:46:20,249 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 16:46:20,250 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 16:46:20,251 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 16:46:20,252 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#ARKit
2024-11-05 16:46:20,253 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:46:20,254 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 16:46:20,255 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:46:20,256 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/placing-content-on-detected-planes
2024-11-05 16:46:20,257 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-points-in-world-space
2024-11-05 16:46:20,258 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-images-in-3d-space
2024-11-05 16:46:20,259 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 16:46:20,260 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 16:46:20,262 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Video-playback
2024-11-05 16:46:20,263 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:46:20,264 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 16:46:20,265 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 16:46:20,266 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 16:46:20,267 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 16:46:20,268 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 16:46:20,269 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Xcode-and-Simulator
2024-11-05 16:46:20,270 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/configuring-your-app-icon
2024-11-05 16:46:20,271 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 16:46:20,272 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 16:46:20,273 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 16:46:20,274 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 16:46:20,275 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Performance
2024-11-05 16:46:20,276 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 16:46:20,277 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 16:46:20,278 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 16:46:20,279 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 16:46:20,280 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 16:46:20,281 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 16:46:20,282 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-app-to-visionos
2024-11-05 16:46:20,284 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 16:46:20,285 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 16:46:20,286 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 16:46:20,287 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 16:46:20,288 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 16:46:20,289 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/accessing-the-main-camera
2024-11-05 16:46:20,290 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 16:46:20,291 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-top
2024-11-05 16:46:20,292 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:46:20,293 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:46:20,294 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:46:20,295 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:46:20,296 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:46:20,299 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:46:20,329 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:46:20,332 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:46:20,351 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:46:20,376 - INFO - Found 74 documentation links
2024-11-05 16:46:20,376 - INFO - Found 67 other links
2024-11-05 16:46:20,376 - INFO - Found 2 videos links
2024-11-05 16:46:21,629 - INFO - Found 3 sections, 1 topics, and 0 samples
2024-11-05 16:46:23,615 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 16:46:23,639 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:46:23,640 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:46:23,660 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 16:46:23,661 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/automatic
2024-11-05 16:46:23,662 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/mixed
2024-11-05 16:46:23,662 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:46:23,664 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 16:46:23,665 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/full
2024-11-05 16:46:23,670 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 16:46:23,674 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit/scenereconstructionprovider
2024-11-05 16:46:23,676 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 16:46:23,685 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-fully-immersive-experiences
2024-11-05 16:46:23,686 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:46:23,687 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle
2024-11-05 16:46:23,688 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/Immersive-spaces
2024-11-05 16:46:23,694 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10087
2024-11-05 16:46:23,695 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 16:46:23,696 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10075
2024-11-05 16:46:23,709 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:46:23,740 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:46:23,743 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:46:23,762 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:46:23,788 - INFO - Found 98 other links
2024-11-05 16:46:23,788 - INFO - Found 12 documentation links
2024-11-05 16:46:23,788 - INFO - Found 5 videos links
2024-11-05 16:46:25,124 - INFO - Found 10 sections, 1 topics, and 0 samples
2024-11-05 16:46:27,115 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 16:46:27,133 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:46:27,134 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:46:27,173 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-your-first-visionos-app
2024-11-05 16:46:27,175 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10096
2024-11-05 16:46:27,176 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10086
2024-11-05 16:46:27,177 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 16:46:27,184 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:46:27,217 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:46:27,220 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:46:27,237 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:46:27,261 - INFO - Found 99 other links
2024-11-05 16:46:27,261 - INFO - Found 2 documentation links
2024-11-05 16:46:27,261 - INFO - Found 5 videos links
2024-11-05 16:46:28,421 - INFO - Found 4 sections, 1 topics, and 0 samples
2024-11-05 16:49:21,297 - INFO - Saved HTML to debug/visionos.html
2024-11-05 16:49:21,322 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-main
2024-11-05 16:49:21,324 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:49:21,334 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:49:21,335 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:49:21,338 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:49:21,339 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:49:21,341 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos
2024-11-05 16:49:21,342 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:49:21,342 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:49:21,343 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:49:21,344 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:49:21,345 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:49:21,346 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:49:21,347 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:49:21,348 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:49:21,349 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:49:21,350 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:49:21,351 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:49:21,352 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:49:21,353 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:49:21,354 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:49:21,355 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:49:21,356 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:49:21,356 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:49:21,357 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:49:21,358 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:49:21,359 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:49:21,360 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit
2024-11-05 16:49:21,361 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit/RealityView
2024-11-05 16:49:21,362 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:49:21,363 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:49:21,363 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:49:21,365 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:49:21,366 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:49:21,368 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:49:21,369 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:49:21,370 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:49:21,371 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:49:21,373 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:49:21,378 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:49:21,379 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:49:21,380 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#App-construction
2024-11-05 16:49:21,382 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:49:21,383 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:49:21,384 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:49:21,389 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:49:21,391 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:49:21,392 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Design
2024-11-05 16:49:21,394 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:49:21,395 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:49:21,397 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#SwiftUI
2024-11-05 16:49:21,402 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:49:21,403 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:49:21,404 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:49:21,405 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 16:49:21,407 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:49:21,408 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:49:21,409 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:49:21,410 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:49:21,411 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:49:21,412 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:49:21,414 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 16:49:21,415 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 16:49:21,416 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 16:49:21,417 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#ARKit
2024-11-05 16:49:21,418 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:49:21,419 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 16:49:21,420 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:49:21,421 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/placing-content-on-detected-planes
2024-11-05 16:49:21,422 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-points-in-world-space
2024-11-05 16:49:21,423 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-images-in-3d-space
2024-11-05 16:49:21,425 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 16:49:21,426 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 16:49:21,427 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Video-playback
2024-11-05 16:49:21,428 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:49:21,429 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 16:49:21,430 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 16:49:21,431 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 16:49:21,432 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 16:49:21,433 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 16:49:21,434 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Xcode-and-Simulator
2024-11-05 16:49:21,435 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/configuring-your-app-icon
2024-11-05 16:49:21,436 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 16:49:21,437 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 16:49:21,438 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 16:49:21,439 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 16:49:21,440 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Performance
2024-11-05 16:49:21,441 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 16:49:21,442 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 16:49:21,443 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 16:49:21,444 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 16:49:21,445 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 16:49:21,447 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 16:49:21,448 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-app-to-visionos
2024-11-05 16:49:21,448 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 16:49:21,449 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 16:49:21,450 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 16:49:21,451 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 16:49:21,452 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 16:49:21,453 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/accessing-the-main-camera
2024-11-05 16:49:21,454 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 16:49:21,456 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-top
2024-11-05 16:49:21,457 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:49:21,458 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:49:21,458 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:49:21,459 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:49:21,460 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:49:21,463 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:49:21,493 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:49:21,496 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:49:21,514 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:49:21,542 - INFO - Found 74 documentation links
2024-11-05 16:49:21,542 - INFO - Found 67 other links
2024-11-05 16:49:21,542 - INFO - Found 2 videos links
2024-11-05 16:49:22,822 - INFO - Found 3 sections, 1 topics, and 0 samples
2024-11-05 16:49:24,734 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 16:49:24,757 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:49:24,758 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:49:24,781 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 16:49:24,782 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/automatic
2024-11-05 16:49:24,783 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/mixed
2024-11-05 16:49:24,784 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:49:24,785 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 16:49:24,786 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/full
2024-11-05 16:49:24,791 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 16:49:24,796 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit/scenereconstructionprovider
2024-11-05 16:49:24,798 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 16:49:24,808 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-fully-immersive-experiences
2024-11-05 16:49:24,809 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:49:24,810 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle
2024-11-05 16:49:24,811 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/Immersive-spaces
2024-11-05 16:49:24,812 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10087
2024-11-05 16:49:24,813 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 16:49:24,814 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10075
2024-11-05 16:49:24,827 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:49:24,869 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:49:24,873 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:49:24,891 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:49:24,918 - INFO - Found 98 other links
2024-11-05 16:49:24,918 - INFO - Found 12 documentation links
2024-11-05 16:49:24,918 - INFO - Found 5 videos links
2024-11-05 16:49:26,237 - INFO - Found 10 sections, 1 topics, and 0 samples
2024-11-05 16:49:28,205 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 16:49:28,223 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:49:28,224 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:49:28,260 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-your-first-visionos-app
2024-11-05 16:49:28,262 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10096
2024-11-05 16:49:28,262 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10086
2024-11-05 16:49:28,264 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 16:49:28,271 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:49:28,306 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:49:28,310 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:49:28,328 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:49:28,351 - INFO - Found 99 other links
2024-11-05 16:49:28,351 - INFO - Found 2 documentation links
2024-11-05 16:49:28,351 - INFO - Found 5 videos links
2024-11-05 16:49:29,570 - INFO - Found 4 sections, 0 topics, and 0 samples
2024-11-05 16:49:31,524 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 16:49:37,553 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 16:49:43,471 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 16:49:51,992 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 16:49:54,092 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 16:49:54,302 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 16:52:22,877 - INFO - Saved HTML to debug/visionos.html
2024-11-05 16:52:22,902 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-main
2024-11-05 16:52:22,905 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:52:22,916 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:52:22,917 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:52:22,921 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:52:22,922 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:52:22,923 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos
2024-11-05 16:52:22,924 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:52:22,925 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:52:22,926 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:52:22,927 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:52:22,928 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:52:22,928 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:52:22,931 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:52:22,932 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:52:22,933 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:52:22,934 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:52:22,935 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:52:22,936 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:52:22,937 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:52:22,938 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:52:22,939 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:52:22,940 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:52:22,941 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:52:22,942 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:52:22,943 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:52:22,944 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:52:22,945 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit
2024-11-05 16:52:22,946 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit/RealityView
2024-11-05 16:52:22,947 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:52:22,948 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:52:22,949 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:52:22,950 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:52:22,951 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:52:22,953 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:52:22,954 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:52:22,955 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:52:22,957 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:52:22,958 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:52:22,959 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:52:22,961 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:52:22,962 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#App-construction
2024-11-05 16:52:22,964 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:52:22,980 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:52:22,982 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:52:22,983 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:52:22,989 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:52:22,991 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Design
2024-11-05 16:52:22,994 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:52:23,008 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:52:23,010 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#SwiftUI
2024-11-05 16:52:23,011 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:52:23,012 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:52:23,014 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:52:23,015 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 16:52:23,017 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:52:23,018 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:52:23,020 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:52:23,021 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:52:23,022 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:52:23,024 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:52:23,025 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 16:52:23,026 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 16:52:23,027 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 16:52:23,029 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#ARKit
2024-11-05 16:52:23,030 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:52:23,031 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 16:52:23,032 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:52:23,033 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/placing-content-on-detected-planes
2024-11-05 16:52:23,034 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-points-in-world-space
2024-11-05 16:52:23,036 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-images-in-3d-space
2024-11-05 16:52:23,037 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 16:52:23,038 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 16:52:23,039 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Video-playback
2024-11-05 16:52:23,040 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:52:23,041 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 16:52:23,042 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 16:52:23,043 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 16:52:23,044 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 16:52:23,046 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 16:52:23,047 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Xcode-and-Simulator
2024-11-05 16:52:23,048 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/configuring-your-app-icon
2024-11-05 16:52:23,049 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 16:52:23,051 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 16:52:23,052 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 16:52:23,053 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 16:52:23,054 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Performance
2024-11-05 16:52:23,055 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 16:52:23,056 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 16:52:23,057 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 16:52:23,058 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 16:52:23,059 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 16:52:23,060 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 16:52:23,062 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-app-to-visionos
2024-11-05 16:52:23,063 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 16:52:23,064 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 16:52:23,065 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 16:52:23,066 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 16:52:23,067 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 16:52:23,068 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/accessing-the-main-camera
2024-11-05 16:52:23,070 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 16:52:23,071 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-top
2024-11-05 16:52:23,072 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:52:23,073 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:52:23,074 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:52:23,075 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:52:23,076 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:52:23,079 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:52:23,111 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:52:23,115 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:52:23,133 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:52:23,186 - INFO - Found 74 documentation links
2024-11-05 16:52:23,186 - INFO - Found 67 other links
2024-11-05 16:52:23,186 - INFO - Found 2 videos links
2024-11-05 16:52:24,830 - INFO - Found 3 sections, 1 topics, and 0 samples
2024-11-05 16:52:27,295 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 16:52:27,316 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:52:27,317 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:52:27,336 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 16:52:27,337 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/automatic
2024-11-05 16:52:27,338 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/mixed
2024-11-05 16:52:27,339 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:52:27,340 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 16:52:27,340 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/full
2024-11-05 16:52:27,345 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 16:52:27,356 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit/scenereconstructionprovider
2024-11-05 16:52:27,358 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 16:52:27,368 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-fully-immersive-experiences
2024-11-05 16:52:27,368 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:52:27,369 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle
2024-11-05 16:52:27,370 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/Immersive-spaces
2024-11-05 16:52:27,372 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10087
2024-11-05 16:52:27,373 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 16:52:27,373 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10075
2024-11-05 16:52:27,386 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:52:27,420 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:52:27,435 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:52:27,453 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:52:27,486 - INFO - Found 98 other links
2024-11-05 16:52:27,486 - INFO - Found 12 documentation links
2024-11-05 16:52:27,486 - INFO - Found 5 videos links
2024-11-05 16:52:29,337 - INFO - Found 10 sections, 1 topics, and 0 samples
2024-11-05 16:52:33,180 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 16:52:33,199 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:52:33,199 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:52:33,243 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-your-first-visionos-app
2024-11-05 16:52:33,245 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10096
2024-11-05 16:52:33,245 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10086
2024-11-05 16:52:33,246 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 16:52:33,254 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:52:33,284 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:52:33,287 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:52:33,305 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:52:33,347 - INFO - Found 99 other links
2024-11-05 16:52:33,347 - INFO - Found 2 documentation links
2024-11-05 16:52:33,347 - INFO - Found 5 videos links
2024-11-05 16:52:35,403 - INFO - Found 4 sections, 1 topics, and 0 samples
2024-11-05 16:52:41,237 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 16:52:44,898 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 16:52:47,364 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 16:52:56,445 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 16:52:59,026 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 16:52:59,226 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 16:52:59,228 - INFO - Successfully read WorldApp.swift
2024-11-05 16:52:59,228 - INFO - Successfully read SliderGridRow.swift
2024-11-05 16:52:59,228 - INFO - Successfully read EarthSettings.swift
2024-11-05 16:52:59,228 - INFO - Successfully read GlobeSettings.swift
2024-11-05 16:52:59,229 - INFO - Successfully read OrbitSettings.swift
2024-11-05 16:52:59,229 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 16:52:59,229 - INFO - Successfully read SettingsButton.swift
2024-11-05 16:52:59,229 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 16:52:59,229 - INFO - Successfully read OrbitModule.swift
2024-11-05 16:52:59,229 - INFO - Successfully read OrbitToggle.swift
2024-11-05 16:52:59,229 - INFO - Successfully read Orbit.swift
2024-11-05 16:52:59,230 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 16:52:59,230 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 16:52:59,230 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 16:52:59,230 - INFO - Successfully read GlobeToggle.swift
2024-11-05 16:52:59,230 - INFO - Successfully read GlobeControls.swift
2024-11-05 16:52:59,230 - INFO - Successfully read GlobeModule.swift
2024-11-05 16:52:59,231 - INFO - Successfully read Globe.swift
2024-11-05 16:52:59,231 - INFO - Successfully read Earth.swift
2024-11-05 16:52:59,231 - INFO - Successfully read Starfield.swift
2024-11-05 16:52:59,232 - INFO - Successfully read Sun.swift
2024-11-05 16:52:59,233 - INFO - Successfully read ViewModel.swift
2024-11-05 16:52:59,233 - INFO - Successfully read Module.swift
2024-11-05 16:52:59,233 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 16:52:59,233 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 16:52:59,233 - INFO - Successfully read SolarSystem.swift
2024-11-05 16:52:59,233 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 16:52:59,233 - INFO - Successfully read TraceSystem.swift
2024-11-05 16:52:59,233 - INFO - Successfully read RotationSystem.swift
2024-11-05 16:52:59,233 - INFO - Successfully read ModuleDetail.swift
2024-11-05 16:52:59,233 - INFO - Successfully read Modules.swift
2024-11-05 16:52:59,233 - INFO - Successfully read TableOfContents.swift
2024-11-05 16:52:59,234 - INFO - Successfully read ModuleCard.swift
2024-11-05 16:52:59,234 - INFO - Successfully read Entity+Trace.swift
2024-11-05 16:52:59,234 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 16:52:59,234 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 16:52:59,234 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 16:52:59,234 - INFO - Successfully read EarthEntity.swift
2024-11-05 16:52:59,234 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 16:52:59,234 - INFO - Successfully read Package.swift
2024-11-05 16:52:59,234 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 16:52:59,234 - INFO - Successfully read WorldAssets.swift
2024-11-05 16:52:59,235 - INFO - Successfully read Package.swift
2024-11-05 16:52:59,236 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 16:52:59,236 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:52:59,236 - INFO - Successfully read PlantComponent.swift
2024-11-05 16:52:59,238 - INFO - Successfully read AppState.swift
2024-11-05 16:52:59,238 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 16:52:59,238 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 16:52:59,238 - INFO - Successfully read BOTanistApp.swift
2024-11-05 16:52:59,239 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 16:52:59,239 - INFO - Successfully read RobotProvider.swift
2024-11-05 16:52:59,239 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 16:52:59,239 - INFO - Successfully read RobotCharacter.swift
2024-11-05 16:52:59,239 - INFO - Successfully read RobotData.swift
2024-11-05 16:52:59,239 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 16:52:59,239 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 16:52:59,239 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:52:59,239 - INFO - Successfully read StringExtensions.swift
2024-11-05 16:52:59,239 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 16:52:59,239 - INFO - Successfully read ColorExtensions.swift
2024-11-05 16:52:59,239 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 16:52:59,239 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 16:52:59,239 - INFO - Successfully read JointPinComponent.swift
2024-11-05 16:52:59,239 - INFO - Successfully read JointPinSystem.swift
2024-11-05 16:52:59,239 - INFO - Successfully read StartScreenView.swift
2024-11-05 16:52:59,239 - INFO - Successfully read OrnamentView.swift
2024-11-05 16:52:59,239 - INFO - Successfully read SelectorViews.swift
2024-11-05 16:52:59,239 - INFO - Successfully read RobotView.swift
2024-11-05 16:52:59,240 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 16:52:59,240 - INFO - Successfully read ExplorationView.swift
2024-11-05 16:52:59,240 - INFO - Successfully read ContentView.swift
2024-11-05 16:52:59,240 - INFO - Successfully read EntryPoint.swift
2024-11-05 16:52:59,240 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 16:52:59,240 - INFO - Successfully read DecibelSlider.swift
2024-11-05 16:52:59,240 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 16:58:00,764 - INFO - Saved HTML to debug/visionos.html
2024-11-05 16:58:00,790 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-main
2024-11-05 16:58:00,792 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:58:00,802 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:58:00,803 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:58:00,806 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:58:00,807 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 16:58:00,808 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos
2024-11-05 16:58:00,809 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:58:00,810 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:58:00,811 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:58:00,811 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:58:00,812 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:58:00,813 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:58:00,815 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:58:00,816 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:58:00,817 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:58:00,818 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:58:00,819 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:58:00,820 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:58:00,821 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:58:00,821 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:58:00,822 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:58:00,823 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:58:00,824 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:58:00,825 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:58:00,825 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:58:00,826 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:58:00,827 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit
2024-11-05 16:58:00,829 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit/RealityView
2024-11-05 16:58:00,830 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:58:00,830 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:58:00,831 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 16:58:00,832 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:58:00,833 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:58:00,835 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:58:00,837 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:58:00,842 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:58:00,843 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:58:00,845 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:58:00,846 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:58:00,847 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:58:00,848 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#App-construction
2024-11-05 16:58:00,850 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 16:58:00,851 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 16:58:00,852 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 16:58:00,853 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 16:58:00,854 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 16:58:00,855 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Design
2024-11-05 16:58:00,857 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 16:58:00,859 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 16:58:00,860 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#SwiftUI
2024-11-05 16:58:00,861 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 16:58:00,863 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 16:58:00,864 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 16:58:00,865 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 16:58:00,866 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 16:58:00,867 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 16:58:00,869 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 16:58:00,870 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 16:58:00,871 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 16:58:00,872 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 16:58:00,874 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 16:58:00,875 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 16:58:00,876 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 16:58:00,877 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#ARKit
2024-11-05 16:58:00,878 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 16:58:00,879 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 16:58:00,880 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:58:00,881 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/placing-content-on-detected-planes
2024-11-05 16:58:00,882 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-points-in-world-space
2024-11-05 16:58:00,883 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-images-in-3d-space
2024-11-05 16:58:00,885 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 16:58:00,886 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 16:58:00,887 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Video-playback
2024-11-05 16:58:00,888 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 16:58:00,889 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 16:58:00,890 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 16:58:00,891 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 16:58:00,892 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 16:58:00,893 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 16:58:00,894 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Xcode-and-Simulator
2024-11-05 16:58:00,895 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/configuring-your-app-icon
2024-11-05 16:58:00,896 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 16:58:00,897 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 16:58:00,898 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 16:58:00,903 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 16:58:00,905 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Performance
2024-11-05 16:58:00,906 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 16:58:00,907 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 16:58:00,908 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 16:58:00,909 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 16:58:00,910 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 16:58:00,911 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 16:58:00,912 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-app-to-visionos
2024-11-05 16:58:00,913 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 16:58:00,914 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 16:58:00,915 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 16:58:00,916 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 16:58:00,917 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 16:58:00,918 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/accessing-the-main-camera
2024-11-05 16:58:00,919 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 16:58:00,920 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-top
2024-11-05 16:58:00,921 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 16:58:00,922 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 16:58:00,923 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 16:58:00,924 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 16:58:00,925 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 16:58:00,928 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:58:00,962 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:58:00,966 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:58:00,984 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:58:01,008 - INFO - Found 74 documentation links
2024-11-05 16:58:01,008 - INFO - Found 67 other links
2024-11-05 16:58:01,008 - INFO - Found 2 videos links
2024-11-05 16:58:02,400 - INFO - Found 3 sections, 1 topics, and 0 samples
2024-11-05 16:58:04,290 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 16:58:04,312 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:58:04,313 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:58:04,332 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 16:58:04,333 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/automatic
2024-11-05 16:58:04,334 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/mixed
2024-11-05 16:58:04,334 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 16:58:04,335 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 16:58:04,336 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/full
2024-11-05 16:58:04,342 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 16:58:04,346 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit/scenereconstructionprovider
2024-11-05 16:58:04,347 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 16:58:04,357 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-fully-immersive-experiences
2024-11-05 16:58:04,358 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 16:58:04,359 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle
2024-11-05 16:58:04,360 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/Immersive-spaces
2024-11-05 16:58:04,362 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10087
2024-11-05 16:58:04,363 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 16:58:04,364 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10075
2024-11-05 16:58:04,377 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:58:04,417 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:58:04,425 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:58:04,442 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:58:04,466 - INFO - Found 98 other links
2024-11-05 16:58:04,466 - INFO - Found 12 documentation links
2024-11-05 16:58:04,467 - INFO - Found 5 videos links
2024-11-05 16:58:05,819 - INFO - Found 10 sections, 1 topics, and 0 samples
2024-11-05 16:58:07,746 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 16:58:07,776 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:58:07,781 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:58:07,829 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-your-first-visionos-app
2024-11-05 16:58:07,831 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10096
2024-11-05 16:58:07,832 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10086
2024-11-05 16:58:07,833 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 16:58:07,840 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:58:07,870 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 16:58:07,874 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 16:58:07,891 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 16:58:07,917 - INFO - Found 99 other links
2024-11-05 16:58:07,917 - INFO - Found 2 documentation links
2024-11-05 16:58:07,917 - INFO - Found 5 videos links
2024-11-05 16:58:08,886 - INFO - Found 0 sections, 0 topics, and 0 samples
2024-11-05 16:58:10,777 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 16:58:15,204 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 16:58:17,560 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 16:58:23,469 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 16:58:25,640 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 16:58:25,833 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 16:58:25,835 - INFO - Successfully read WorldApp.swift
2024-11-05 16:58:25,835 - INFO - Successfully read SliderGridRow.swift
2024-11-05 16:58:25,835 - INFO - Successfully read EarthSettings.swift
2024-11-05 16:58:25,835 - INFO - Successfully read GlobeSettings.swift
2024-11-05 16:58:25,835 - INFO - Successfully read OrbitSettings.swift
2024-11-05 16:58:25,835 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 16:58:25,835 - INFO - Successfully read SettingsButton.swift
2024-11-05 16:58:25,835 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 16:58:25,836 - INFO - Successfully read OrbitModule.swift
2024-11-05 16:58:25,836 - INFO - Successfully read OrbitToggle.swift
2024-11-05 16:58:25,836 - INFO - Successfully read Orbit.swift
2024-11-05 16:58:25,836 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 16:58:25,836 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 16:58:25,836 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 16:58:25,836 - INFO - Successfully read GlobeToggle.swift
2024-11-05 16:58:25,836 - INFO - Successfully read GlobeControls.swift
2024-11-05 16:58:25,836 - INFO - Successfully read GlobeModule.swift
2024-11-05 16:58:25,836 - INFO - Successfully read Globe.swift
2024-11-05 16:58:25,836 - INFO - Successfully read Earth.swift
2024-11-05 16:58:25,836 - INFO - Successfully read Starfield.swift
2024-11-05 16:58:25,836 - INFO - Successfully read Sun.swift
2024-11-05 16:58:25,837 - INFO - Successfully read ViewModel.swift
2024-11-05 16:58:25,837 - INFO - Successfully read Module.swift
2024-11-05 16:58:25,837 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 16:58:25,837 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 16:58:25,837 - INFO - Successfully read SolarSystem.swift
2024-11-05 16:58:25,837 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 16:58:25,837 - INFO - Successfully read TraceSystem.swift
2024-11-05 16:58:25,837 - INFO - Successfully read RotationSystem.swift
2024-11-05 16:58:25,837 - INFO - Successfully read ModuleDetail.swift
2024-11-05 16:58:25,837 - INFO - Successfully read Modules.swift
2024-11-05 16:58:25,837 - INFO - Successfully read TableOfContents.swift
2024-11-05 16:58:25,837 - INFO - Successfully read ModuleCard.swift
2024-11-05 16:58:25,837 - INFO - Successfully read Entity+Trace.swift
2024-11-05 16:58:25,837 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 16:58:25,837 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 16:58:25,837 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 16:58:25,837 - INFO - Successfully read EarthEntity.swift
2024-11-05 16:58:25,837 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 16:58:25,837 - INFO - Successfully read Package.swift
2024-11-05 16:58:25,838 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 16:58:25,838 - INFO - Successfully read WorldAssets.swift
2024-11-05 16:58:25,842 - INFO - Successfully read Package.swift
2024-11-05 16:58:25,842 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 16:58:25,842 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:58:25,842 - INFO - Successfully read PlantComponent.swift
2024-11-05 16:58:25,844 - INFO - Successfully read AppState.swift
2024-11-05 16:58:25,844 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 16:58:25,845 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 16:58:25,845 - INFO - Successfully read BOTanistApp.swift
2024-11-05 16:58:25,845 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 16:58:25,849 - INFO - Successfully read RobotProvider.swift
2024-11-05 16:58:25,849 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 16:58:25,849 - INFO - Successfully read RobotCharacter.swift
2024-11-05 16:58:25,849 - INFO - Successfully read RobotData.swift
2024-11-05 16:58:25,849 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 16:58:25,849 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 16:58:25,849 - INFO - Successfully read EntityExtensions.swift
2024-11-05 16:58:25,849 - INFO - Successfully read StringExtensions.swift
2024-11-05 16:58:25,849 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 16:58:25,849 - INFO - Successfully read ColorExtensions.swift
2024-11-05 16:58:25,849 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 16:58:25,849 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 16:58:25,850 - INFO - Successfully read JointPinComponent.swift
2024-11-05 16:58:25,850 - INFO - Successfully read JointPinSystem.swift
2024-11-05 16:58:25,850 - INFO - Successfully read StartScreenView.swift
2024-11-05 16:58:25,850 - INFO - Successfully read OrnamentView.swift
2024-11-05 16:58:25,850 - INFO - Successfully read SelectorViews.swift
2024-11-05 16:58:25,850 - INFO - Successfully read RobotView.swift
2024-11-05 16:58:25,850 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 16:58:25,850 - INFO - Successfully read ExplorationView.swift
2024-11-05 16:58:25,850 - INFO - Successfully read ContentView.swift
2024-11-05 16:58:25,853 - INFO - Successfully read EntryPoint.swift
2024-11-05 16:58:25,853 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 16:58:25,853 - INFO - Successfully read DecibelSlider.swift
2024-11-05 16:58:25,854 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 17:06:04,500 - INFO - Saved HTML to debug/visionos.html
2024-11-05 17:06:04,528 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-main
2024-11-05 17:06:04,530 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 17:06:04,540 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:06:04,541 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:06:04,546 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 17:06:04,547 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 17:06:04,549 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos
2024-11-05 17:06:04,550 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:06:04,551 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:06:04,552 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:06:04,553 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:06:04,554 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:06:04,555 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 17:06:04,557 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:06:04,558 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:06:04,559 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 17:06:04,561 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:06:04,562 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:06:04,563 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 17:06:04,564 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 17:06:04,565 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 17:06:04,566 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:06:04,567 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:06:04,568 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:06:04,569 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 17:06:04,570 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:06:04,572 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 17:06:04,572 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit
2024-11-05 17:06:04,573 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit/RealityView
2024-11-05 17:06:04,575 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 17:06:04,576 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:06:04,577 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 17:06:04,578 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 17:06:04,580 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:06:04,581 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 17:06:04,582 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 17:06:04,584 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 17:06:04,585 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 17:06:04,586 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 17:06:04,588 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 17:06:04,589 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 17:06:04,591 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#App-construction
2024-11-05 17:06:04,592 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:06:04,594 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:06:04,595 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:06:04,596 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:06:04,597 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 17:06:04,599 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Design
2024-11-05 17:06:04,601 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:06:04,603 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:06:04,604 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#SwiftUI
2024-11-05 17:06:04,606 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 17:06:04,607 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:06:04,608 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:06:04,610 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 17:06:04,611 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 17:06:04,612 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 17:06:04,613 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 17:06:04,615 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:06:04,616 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:06:04,621 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:06:04,623 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 17:06:04,625 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 17:06:04,626 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 17:06:04,627 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#ARKit
2024-11-05 17:06:04,632 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 17:06:04,634 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 17:06:04,635 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:06:04,641 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/placing-content-on-detected-planes
2024-11-05 17:06:04,642 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-points-in-world-space
2024-11-05 17:06:04,644 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-images-in-3d-space
2024-11-05 17:06:04,645 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 17:06:04,646 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 17:06:04,647 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Video-playback
2024-11-05 17:06:04,648 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 17:06:04,649 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 17:06:04,650 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 17:06:04,651 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 17:06:04,652 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 17:06:04,653 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 17:06:04,654 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Xcode-and-Simulator
2024-11-05 17:06:04,655 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/configuring-your-app-icon
2024-11-05 17:06:04,656 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 17:06:04,657 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 17:06:04,658 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 17:06:04,659 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 17:06:04,660 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Performance
2024-11-05 17:06:04,661 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 17:06:04,662 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 17:06:04,664 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 17:06:04,665 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 17:06:04,666 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 17:06:04,667 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 17:06:04,668 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-app-to-visionos
2024-11-05 17:06:04,669 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 17:06:04,670 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 17:06:04,671 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 17:06:04,672 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 17:06:04,673 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 17:06:04,674 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/accessing-the-main-camera
2024-11-05 17:06:04,675 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 17:06:04,676 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-top
2024-11-05 17:06:04,677 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 17:06:04,681 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:06:04,683 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:06:04,684 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:06:04,685 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 17:06:04,689 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:06:04,719 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:06:04,723 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:06:04,741 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 17:06:04,766 - INFO - Found 74 documentation links
2024-11-05 17:06:04,766 - INFO - Found 67 other links
2024-11-05 17:06:04,766 - INFO - Found 2 videos links
2024-11-05 17:06:06,177 - INFO - Found 3 sections, 1 topics, and 0 samples
2024-11-05 17:06:08,224 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 17:06:08,246 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:06:08,247 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:06:08,265 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 17:06:08,266 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/automatic
2024-11-05 17:06:08,267 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/mixed
2024-11-05 17:06:08,267 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 17:06:08,268 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 17:06:08,269 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/full
2024-11-05 17:06:08,274 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 17:06:08,279 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit/scenereconstructionprovider
2024-11-05 17:06:08,281 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 17:06:08,291 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-fully-immersive-experiences
2024-11-05 17:06:08,292 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:06:08,293 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle
2024-11-05 17:06:08,293 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/Immersive-spaces
2024-11-05 17:06:08,295 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10087
2024-11-05 17:06:08,296 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 17:06:08,297 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10075
2024-11-05 17:06:08,320 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:06:08,355 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:06:08,359 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:06:08,376 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 17:06:08,411 - INFO - Found 98 other links
2024-11-05 17:06:08,411 - INFO - Found 12 documentation links
2024-11-05 17:06:08,411 - INFO - Found 5 videos links
2024-11-05 17:06:09,945 - INFO - Found 10 sections, 1 topics, and 0 samples
2024-11-05 17:06:11,914 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 17:06:11,942 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:06:11,943 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:06:11,983 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-your-first-visionos-app
2024-11-05 17:06:11,985 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10096
2024-11-05 17:06:11,986 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10086
2024-11-05 17:06:11,987 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 17:06:11,996 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:06:12,036 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:06:12,040 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:06:12,060 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 17:06:12,086 - INFO - Found 99 other links
2024-11-05 17:06:12,086 - INFO - Found 2 documentation links
2024-11-05 17:06:12,086 - INFO - Found 5 videos links
2024-11-05 17:06:13,342 - INFO - Found 4 sections, 1 topics, and 0 samples
2024-11-05 17:06:15,423 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 17:06:19,284 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 17:06:21,913 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 17:06:28,989 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 17:06:31,591 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 17:06:31,790 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 17:06:31,791 - INFO - Successfully read WorldApp.swift
2024-11-05 17:06:31,791 - INFO - Successfully read SliderGridRow.swift
2024-11-05 17:06:31,791 - INFO - Successfully read EarthSettings.swift
2024-11-05 17:06:31,791 - INFO - Successfully read GlobeSettings.swift
2024-11-05 17:06:31,792 - INFO - Successfully read OrbitSettings.swift
2024-11-05 17:06:31,792 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 17:06:31,792 - INFO - Successfully read SettingsButton.swift
2024-11-05 17:06:31,792 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 17:06:31,792 - INFO - Successfully read OrbitModule.swift
2024-11-05 17:06:31,792 - INFO - Successfully read OrbitToggle.swift
2024-11-05 17:06:31,792 - INFO - Successfully read Orbit.swift
2024-11-05 17:06:31,793 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 17:06:31,793 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 17:06:31,793 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 17:06:31,793 - INFO - Successfully read GlobeToggle.swift
2024-11-05 17:06:31,793 - INFO - Successfully read GlobeControls.swift
2024-11-05 17:06:31,793 - INFO - Successfully read GlobeModule.swift
2024-11-05 17:06:31,794 - INFO - Successfully read Globe.swift
2024-11-05 17:06:31,794 - INFO - Successfully read Earth.swift
2024-11-05 17:06:31,794 - INFO - Successfully read Starfield.swift
2024-11-05 17:06:31,795 - INFO - Successfully read Sun.swift
2024-11-05 17:06:31,795 - INFO - Successfully read ViewModel.swift
2024-11-05 17:06:31,795 - INFO - Successfully read Module.swift
2024-11-05 17:06:31,796 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 17:06:31,796 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 17:06:31,796 - INFO - Successfully read SolarSystem.swift
2024-11-05 17:06:31,796 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 17:06:31,796 - INFO - Successfully read TraceSystem.swift
2024-11-05 17:06:31,796 - INFO - Successfully read RotationSystem.swift
2024-11-05 17:06:31,796 - INFO - Successfully read ModuleDetail.swift
2024-11-05 17:06:31,797 - INFO - Successfully read Modules.swift
2024-11-05 17:06:31,797 - INFO - Successfully read TableOfContents.swift
2024-11-05 17:06:31,797 - INFO - Successfully read ModuleCard.swift
2024-11-05 17:06:31,798 - INFO - Successfully read Entity+Trace.swift
2024-11-05 17:06:31,798 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 17:06:31,799 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 17:06:31,799 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 17:06:31,799 - INFO - Successfully read EarthEntity.swift
2024-11-05 17:06:31,799 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 17:06:31,799 - INFO - Successfully read Package.swift
2024-11-05 17:06:31,800 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 17:06:31,800 - INFO - Successfully read WorldAssets.swift
2024-11-05 17:06:31,808 - INFO - Successfully read Package.swift
2024-11-05 17:06:31,808 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 17:06:31,808 - INFO - Successfully read EntityExtensions.swift
2024-11-05 17:06:31,808 - INFO - Successfully read PlantComponent.swift
2024-11-05 17:06:31,810 - INFO - Successfully read AppState.swift
2024-11-05 17:06:31,811 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 17:06:31,811 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 17:06:31,811 - INFO - Successfully read BOTanistApp.swift
2024-11-05 17:06:31,811 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 17:06:31,811 - INFO - Successfully read RobotProvider.swift
2024-11-05 17:06:31,811 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 17:06:31,811 - INFO - Successfully read RobotCharacter.swift
2024-11-05 17:06:31,811 - INFO - Successfully read RobotData.swift
2024-11-05 17:06:31,812 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 17:06:31,812 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 17:06:31,812 - INFO - Successfully read EntityExtensions.swift
2024-11-05 17:06:31,812 - INFO - Successfully read StringExtensions.swift
2024-11-05 17:06:31,812 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 17:06:31,812 - INFO - Successfully read ColorExtensions.swift
2024-11-05 17:06:31,812 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 17:06:31,812 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 17:06:31,813 - INFO - Successfully read JointPinComponent.swift
2024-11-05 17:06:31,816 - INFO - Successfully read JointPinSystem.swift
2024-11-05 17:06:31,816 - INFO - Successfully read StartScreenView.swift
2024-11-05 17:06:31,816 - INFO - Successfully read OrnamentView.swift
2024-11-05 17:06:31,816 - INFO - Successfully read SelectorViews.swift
2024-11-05 17:06:31,816 - INFO - Successfully read RobotView.swift
2024-11-05 17:06:31,817 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 17:06:31,817 - INFO - Successfully read ExplorationView.swift
2024-11-05 17:06:31,817 - INFO - Successfully read ContentView.swift
2024-11-05 17:06:31,820 - INFO - Successfully read EntryPoint.swift
2024-11-05 17:06:31,820 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 17:06:31,820 - INFO - Successfully read DecibelSlider.swift
2024-11-05 17:06:31,820 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 17:08:01,908 - INFO - Saved HTML to debug/visionos.html
2024-11-05 17:08:01,935 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-main
2024-11-05 17:08:01,936 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 17:08:01,947 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:08:01,948 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:08:01,951 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 17:08:01,952 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 17:08:01,953 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos
2024-11-05 17:08:01,955 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:08:01,956 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:08:01,958 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:08:01,959 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:08:01,960 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:08:01,961 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 17:08:01,962 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:08:01,963 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:08:01,964 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 17:08:01,965 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:08:01,966 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:08:01,967 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 17:08:01,968 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 17:08:01,969 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 17:08:01,970 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:08:01,971 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:08:01,971 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:08:01,972 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 17:08:01,973 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:08:01,974 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 17:08:01,975 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit
2024-11-05 17:08:01,976 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit/RealityView
2024-11-05 17:08:01,977 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 17:08:01,978 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:08:01,979 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 17:08:01,980 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 17:08:01,981 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:08:01,983 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 17:08:01,984 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 17:08:01,985 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 17:08:01,987 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 17:08:01,989 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 17:08:01,990 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 17:08:01,995 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 17:08:02,000 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#App-construction
2024-11-05 17:08:02,002 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:08:02,003 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:08:02,004 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:08:02,005 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:08:02,006 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 17:08:02,008 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Design
2024-11-05 17:08:02,010 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:08:02,011 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:08:02,013 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#SwiftUI
2024-11-05 17:08:02,014 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 17:08:02,015 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:08:02,016 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:08:02,017 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 17:08:02,019 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 17:08:02,020 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 17:08:02,021 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 17:08:02,022 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:08:02,023 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:08:02,025 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:08:02,026 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 17:08:02,027 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 17:08:02,028 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 17:08:02,029 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#ARKit
2024-11-05 17:08:02,030 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 17:08:02,031 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 17:08:02,033 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:08:02,034 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/placing-content-on-detected-planes
2024-11-05 17:08:02,035 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-points-in-world-space
2024-11-05 17:08:02,036 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-images-in-3d-space
2024-11-05 17:08:02,037 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 17:08:02,038 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 17:08:02,039 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Video-playback
2024-11-05 17:08:02,041 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 17:08:02,042 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 17:08:02,043 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 17:08:02,044 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 17:08:02,045 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 17:08:02,046 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 17:08:02,047 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Xcode-and-Simulator
2024-11-05 17:08:02,048 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/configuring-your-app-icon
2024-11-05 17:08:02,049 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 17:08:02,050 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 17:08:02,052 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 17:08:02,053 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 17:08:02,054 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Performance
2024-11-05 17:08:02,055 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 17:08:02,056 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 17:08:02,057 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 17:08:02,058 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 17:08:02,059 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 17:08:02,060 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 17:08:02,061 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-app-to-visionos
2024-11-05 17:08:02,062 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 17:08:02,063 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 17:08:02,064 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 17:08:02,065 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 17:08:02,066 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 17:08:02,067 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/accessing-the-main-camera
2024-11-05 17:08:02,068 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 17:08:02,068 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-top
2024-11-05 17:08:02,069 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 17:08:02,070 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:08:02,072 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:08:02,073 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:08:02,074 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 17:08:02,077 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:08:02,110 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:08:02,115 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:08:02,137 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 17:08:02,172 - INFO - Found 74 documentation links
2024-11-05 17:08:02,172 - INFO - Found 67 other links
2024-11-05 17:08:02,172 - INFO - Found 2 videos links
2024-11-05 17:08:03,374 - INFO - Found 3 sections, 1 topics, and 0 samples
2024-11-05 17:08:05,181 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 17:08:05,202 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:08:05,203 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:08:05,221 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 17:08:05,222 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/automatic
2024-11-05 17:08:05,223 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/mixed
2024-11-05 17:08:05,224 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 17:08:05,225 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 17:08:05,226 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/full
2024-11-05 17:08:05,232 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 17:08:05,237 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit/scenereconstructionprovider
2024-11-05 17:08:05,239 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 17:08:05,248 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-fully-immersive-experiences
2024-11-05 17:08:05,249 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:08:05,250 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle
2024-11-05 17:08:05,250 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/Immersive-spaces
2024-11-05 17:08:05,252 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10087
2024-11-05 17:08:05,253 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 17:08:05,254 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10075
2024-11-05 17:08:05,267 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:08:05,299 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:08:05,307 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:08:05,325 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 17:08:05,353 - INFO - Found 98 other links
2024-11-05 17:08:05,353 - INFO - Found 12 documentation links
2024-11-05 17:08:05,353 - INFO - Found 5 videos links
2024-11-05 17:08:06,621 - INFO - Found 10 sections, 1 topics, and 0 samples
2024-11-05 17:08:08,895 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 17:08:08,913 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:08:08,914 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:08:08,954 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-your-first-visionos-app
2024-11-05 17:08:08,956 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10096
2024-11-05 17:08:08,957 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10086
2024-11-05 17:08:08,958 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 17:08:08,966 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:08:09,001 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:08:09,005 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:08:09,022 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 17:08:09,051 - INFO - Found 99 other links
2024-11-05 17:08:09,052 - INFO - Found 2 documentation links
2024-11-05 17:08:09,052 - INFO - Found 5 videos links
2024-11-05 17:08:10,177 - INFO - Found 4 sections, 1 topics, and 0 samples
2024-11-05 17:08:12,051 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 17:08:15,607 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 17:08:17,774 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 17:08:23,344 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 17:08:25,349 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 17:08:25,533 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 17:08:25,534 - INFO - Successfully read WorldApp.swift
2024-11-05 17:08:25,534 - INFO - Successfully read SliderGridRow.swift
2024-11-05 17:08:25,534 - INFO - Successfully read EarthSettings.swift
2024-11-05 17:08:25,534 - INFO - Successfully read GlobeSettings.swift
2024-11-05 17:08:25,534 - INFO - Successfully read OrbitSettings.swift
2024-11-05 17:08:25,534 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 17:08:25,534 - INFO - Successfully read SettingsButton.swift
2024-11-05 17:08:25,534 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 17:08:25,534 - INFO - Successfully read OrbitModule.swift
2024-11-05 17:08:25,534 - INFO - Successfully read OrbitToggle.swift
2024-11-05 17:08:25,534 - INFO - Successfully read Orbit.swift
2024-11-05 17:08:25,534 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 17:08:25,535 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 17:08:25,535 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 17:08:25,535 - INFO - Successfully read GlobeToggle.swift
2024-11-05 17:08:25,535 - INFO - Successfully read GlobeControls.swift
2024-11-05 17:08:25,535 - INFO - Successfully read GlobeModule.swift
2024-11-05 17:08:25,535 - INFO - Successfully read Globe.swift
2024-11-05 17:08:25,535 - INFO - Successfully read Earth.swift
2024-11-05 17:08:25,535 - INFO - Successfully read Starfield.swift
2024-11-05 17:08:25,535 - INFO - Successfully read Sun.swift
2024-11-05 17:08:25,536 - INFO - Successfully read ViewModel.swift
2024-11-05 17:08:25,536 - INFO - Successfully read Module.swift
2024-11-05 17:08:25,536 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 17:08:25,536 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 17:08:25,536 - INFO - Successfully read SolarSystem.swift
2024-11-05 17:08:25,536 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 17:08:25,536 - INFO - Successfully read TraceSystem.swift
2024-11-05 17:08:25,536 - INFO - Successfully read RotationSystem.swift
2024-11-05 17:08:25,536 - INFO - Successfully read ModuleDetail.swift
2024-11-05 17:08:25,536 - INFO - Successfully read Modules.swift
2024-11-05 17:08:25,536 - INFO - Successfully read TableOfContents.swift
2024-11-05 17:08:25,536 - INFO - Successfully read ModuleCard.swift
2024-11-05 17:08:25,536 - INFO - Successfully read Entity+Trace.swift
2024-11-05 17:08:25,537 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 17:08:25,537 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 17:08:25,537 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 17:08:25,537 - INFO - Successfully read EarthEntity.swift
2024-11-05 17:08:25,537 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 17:08:25,537 - INFO - Successfully read Package.swift
2024-11-05 17:08:25,537 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 17:08:25,537 - INFO - Successfully read WorldAssets.swift
2024-11-05 17:08:25,542 - INFO - Successfully read Package.swift
2024-11-05 17:08:25,543 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 17:08:25,543 - INFO - Successfully read EntityExtensions.swift
2024-11-05 17:08:25,543 - INFO - Successfully read PlantComponent.swift
2024-11-05 17:08:25,546 - INFO - Successfully read AppState.swift
2024-11-05 17:08:25,546 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 17:08:25,546 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 17:08:25,546 - INFO - Successfully read BOTanistApp.swift
2024-11-05 17:08:25,547 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 17:08:25,547 - INFO - Successfully read RobotProvider.swift
2024-11-05 17:08:25,547 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 17:08:25,547 - INFO - Successfully read RobotCharacter.swift
2024-11-05 17:08:25,547 - INFO - Successfully read RobotData.swift
2024-11-05 17:08:25,547 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 17:08:25,547 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 17:08:25,547 - INFO - Successfully read EntityExtensions.swift
2024-11-05 17:08:25,548 - INFO - Successfully read StringExtensions.swift
2024-11-05 17:08:25,548 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 17:08:25,548 - INFO - Successfully read ColorExtensions.swift
2024-11-05 17:08:25,548 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 17:08:25,548 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 17:08:25,548 - INFO - Successfully read JointPinComponent.swift
2024-11-05 17:08:25,548 - INFO - Successfully read JointPinSystem.swift
2024-11-05 17:08:25,548 - INFO - Successfully read StartScreenView.swift
2024-11-05 17:08:25,548 - INFO - Successfully read OrnamentView.swift
2024-11-05 17:08:25,548 - INFO - Successfully read SelectorViews.swift
2024-11-05 17:08:25,548 - INFO - Successfully read RobotView.swift
2024-11-05 17:08:25,548 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 17:08:25,548 - INFO - Successfully read ExplorationView.swift
2024-11-05 17:08:25,548 - INFO - Successfully read ContentView.swift
2024-11-05 17:08:25,552 - INFO - Successfully read EntryPoint.swift
2024-11-05 17:08:25,552 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 17:08:25,552 - INFO - Successfully read DecibelSlider.swift
2024-11-05 17:08:25,552 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 17:11:18,268 - INFO - Saved HTML to debug/visionos.html
2024-11-05 17:11:18,297 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-main
2024-11-05 17:11:18,298 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 17:11:18,308 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:11:18,309 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:11:18,313 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 17:11:18,314 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/
2024-11-05 17:11:18,315 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos
2024-11-05 17:11:18,316 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:11:18,317 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:11:18,318 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:11:18,319 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:11:18,320 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:11:18,321 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 17:11:18,323 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:11:18,324 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:11:18,324 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 17:11:18,325 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:11:18,326 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:11:18,327 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 17:11:18,328 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 17:11:18,329 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 17:11:18,330 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:11:18,331 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:11:18,331 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:11:18,333 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 17:11:18,333 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:11:18,334 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 17:11:18,335 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit
2024-11-05 17:11:18,337 - INFO - Found documentation link: https://developer.apple.com/documentation/RealityKit/RealityView
2024-11-05 17:11:18,338 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 17:11:18,339 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:11:18,340 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI
2024-11-05 17:11:18,341 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 17:11:18,342 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:11:18,344 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 17:11:18,345 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 17:11:18,347 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 17:11:18,348 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 17:11:18,349 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 17:11:18,351 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 17:11:18,352 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 17:11:18,353 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#App-construction
2024-11-05 17:11:18,354 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:11:18,355 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:11:18,356 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:11:18,357 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:11:18,359 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/introductory-visionos-samples
2024-11-05 17:11:18,360 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Design
2024-11-05 17:11:18,362 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:11:18,364 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:11:18,365 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#SwiftUI
2024-11-05 17:11:18,366 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/world
2024-11-05 17:11:18,368 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:11:18,369 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:11:18,370 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 17:11:18,371 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bot-anist
2024-11-05 17:11:18,372 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/swift-splash
2024-11-05 17:11:18,374 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/diorama
2024-11-05 17:11:18,375 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:11:18,376 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:11:18,379 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:11:18,380 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 17:11:18,381 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 17:11:18,382 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 17:11:18,383 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#ARKit
2024-11-05 17:11:18,384 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/happybeam
2024-11-05 17:11:18,386 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 17:11:18,390 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:11:18,391 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/placing-content-on-detected-planes
2024-11-05 17:11:18,392 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-points-in-world-space
2024-11-05 17:11:18,393 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/tracking-images-in-3d-space
2024-11-05 17:11:18,394 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 17:11:18,395 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 17:11:18,396 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Video-playback
2024-11-05 17:11:18,397 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/destination-video
2024-11-05 17:11:18,398 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 17:11:18,399 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 17:11:18,401 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 17:11:18,402 - INFO - Found documentation link: https://developer.apple.com/documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 17:11:18,403 - INFO - Found documentation link: https://developer.apple.com/documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 17:11:18,404 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Xcode-and-Simulator
2024-11-05 17:11:18,406 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/configuring-your-app-icon
2024-11-05 17:11:18,407 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 17:11:18,408 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 17:11:18,409 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 17:11:18,410 - INFO - Found documentation link: https://developer.apple.com/documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 17:11:18,411 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Performance
2024-11-05 17:11:18,412 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 17:11:18,413 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 17:11:18,414 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 17:11:18,415 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 17:11:18,416 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 17:11:18,417 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 17:11:18,418 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-app-to-visionos
2024-11-05 17:11:18,419 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 17:11:18,420 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 17:11:18,421 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 17:11:18,422 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 17:11:18,423 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 17:11:18,424 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/accessing-the-main-camera
2024-11-05 17:11:18,425 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 17:11:18,425 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#app-top
2024-11-05 17:11:18,427 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Overview
2024-11-05 17:11:18,428 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:11:18,429 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:11:18,430 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:11:18,431 - INFO - Found documentation link: https://developer.apple.com/documentation/visionos/#topics
2024-11-05 17:11:18,434 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:11:18,469 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:11:18,472 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:11:18,489 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 17:11:18,525 - INFO - Found 74 documentation links
2024-11-05 17:11:18,525 - INFO - Found 67 other links
2024-11-05 17:11:18,525 - INFO - Found 2 videos links
2024-11-05 17:11:19,929 - INFO - Found 3 sections, 1 topics, and 0 samples
2024-11-05 17:11:21,964 - INFO - Saved HTML to debug/immersive-experiences.html
2024-11-05 17:11:21,984 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:11:21,985 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:11:22,003 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 17:11:22,004 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/automatic
2024-11-05 17:11:22,004 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/mixed
2024-11-05 17:11:22,005 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit
2024-11-05 17:11:22,006 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 17:11:22,007 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/full
2024-11-05 17:11:22,012 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/SurroundingsEffect
2024-11-05 17:11:22,017 - INFO - Found documentation link: https://developer.apple.com/documentation/arkit/scenereconstructionprovider
2024-11-05 17:11:22,019 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 17:11:22,028 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-fully-immersive-experiences
2024-11-05 17:11:22,029 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:11:22,029 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/ImmersionStyle
2024-11-05 17:11:22,030 - INFO - Found documentation link: https://developer.apple.com/documentation/SwiftUI/Immersive-spaces
2024-11-05 17:11:22,032 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10087
2024-11-05 17:11:22,033 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 17:11:22,034 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10075
2024-11-05 17:11:22,047 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:11:22,084 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:11:22,088 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:11:22,106 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 17:11:22,133 - INFO - Found 98 other links
2024-11-05 17:11:22,133 - INFO - Found 12 documentation links
2024-11-05 17:11:22,133 - INFO - Found 5 videos links
2024-11-05 17:11:23,608 - INFO - Found 10 sections, 1 topics, and 0 samples
2024-11-05 17:11:25,693 - INFO - Saved HTML to debug/designing-for-visionos.html
2024-11-05 17:11:25,712 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:11:25,712 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:11:25,749 - INFO - Found documentation link: https://developer.apple.com/documentation/visionOS/creating-your-first-visionos-app
2024-11-05 17:11:25,751 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10096
2024-11-05 17:11:25,753 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10086
2024-11-05 17:11:25,754 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 17:11:25,762 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:11:25,802 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:11:25,806 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:11:25,835 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 17:11:25,862 - INFO - Found 99 other links
2024-11-05 17:11:25,862 - INFO - Found 2 documentation links
2024-11-05 17:11:25,862 - INFO - Found 5 videos links
2024-11-05 17:11:26,875 - INFO - Found 0 sections, 0 topics, and 0 samples
2024-11-05 17:11:28,937 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 17:11:32,667 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 17:11:36,261 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/0bc6997cb1f0/BOTAnist.zip
2024-11-05 17:11:43,096 - INFO - Downloaded project to data/projects/bot-anist
2024-11-05 17:11:45,296 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/d80280abbf97/PlayingSpatialAudioInVisionOS.zip
2024-11-05 17:11:45,487 - INFO - Downloaded project to data/projects/playing-spatial-audio
2024-11-05 17:11:45,488 - INFO - Successfully read WorldApp.swift
2024-11-05 17:11:45,489 - INFO - Successfully read SliderGridRow.swift
2024-11-05 17:11:45,489 - INFO - Successfully read EarthSettings.swift
2024-11-05 17:11:45,489 - INFO - Successfully read GlobeSettings.swift
2024-11-05 17:11:45,489 - INFO - Successfully read OrbitSettings.swift
2024-11-05 17:11:45,490 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 17:11:45,490 - INFO - Successfully read SettingsButton.swift
2024-11-05 17:11:45,490 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 17:11:45,490 - INFO - Successfully read OrbitModule.swift
2024-11-05 17:11:45,490 - INFO - Successfully read OrbitToggle.swift
2024-11-05 17:11:45,490 - INFO - Successfully read Orbit.swift
2024-11-05 17:11:45,490 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 17:11:45,490 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 17:11:45,490 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 17:11:45,490 - INFO - Successfully read GlobeToggle.swift
2024-11-05 17:11:45,490 - INFO - Successfully read GlobeControls.swift
2024-11-05 17:11:45,491 - INFO - Successfully read GlobeModule.swift
2024-11-05 17:11:45,491 - INFO - Successfully read Globe.swift
2024-11-05 17:11:45,491 - INFO - Successfully read Earth.swift
2024-11-05 17:11:45,491 - INFO - Successfully read Starfield.swift
2024-11-05 17:11:45,491 - INFO - Successfully read Sun.swift
2024-11-05 17:11:45,491 - INFO - Successfully read ViewModel.swift
2024-11-05 17:11:45,492 - INFO - Successfully read Module.swift
2024-11-05 17:11:45,492 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 17:11:45,492 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 17:11:45,492 - INFO - Successfully read SolarSystem.swift
2024-11-05 17:11:45,493 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 17:11:45,493 - INFO - Successfully read TraceSystem.swift
2024-11-05 17:11:45,493 - INFO - Successfully read RotationSystem.swift
2024-11-05 17:11:45,494 - INFO - Successfully read ModuleDetail.swift
2024-11-05 17:11:45,494 - INFO - Successfully read Modules.swift
2024-11-05 17:11:45,494 - INFO - Successfully read TableOfContents.swift
2024-11-05 17:11:45,494 - INFO - Successfully read ModuleCard.swift
2024-11-05 17:11:45,494 - INFO - Successfully read Entity+Trace.swift
2024-11-05 17:11:45,494 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 17:11:45,494 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 17:11:45,494 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 17:11:45,498 - INFO - Successfully read EarthEntity.swift
2024-11-05 17:11:45,498 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 17:11:45,498 - INFO - Successfully read Package.swift
2024-11-05 17:11:45,498 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 17:11:45,498 - INFO - Successfully read WorldAssets.swift
2024-11-05 17:11:45,502 - INFO - Successfully read Package.swift
2024-11-05 17:11:45,503 - INFO - Successfully read BOTanistAssets.swift
2024-11-05 17:11:45,503 - INFO - Successfully read EntityExtensions.swift
2024-11-05 17:11:45,503 - INFO - Successfully read PlantComponent.swift
2024-11-05 17:11:45,505 - INFO - Successfully read AppState.swift
2024-11-05 17:11:45,505 - INFO - Successfully read PlantAnimationProvider.swift
2024-11-05 17:11:45,505 - INFO - Successfully read AppState+Exploration.swift
2024-11-05 17:11:45,505 - INFO - Successfully read BOTanistApp.swift
2024-11-05 17:11:45,506 - INFO - Successfully read RobotCharacter+Movement.swift
2024-11-05 17:11:45,506 - INFO - Successfully read RobotProvider.swift
2024-11-05 17:11:45,506 - INFO - Successfully read RobotProvider+Loading.swift
2024-11-05 17:11:45,510 - INFO - Successfully read RobotCharacter.swift
2024-11-05 17:11:45,510 - INFO - Successfully read RobotData.swift
2024-11-05 17:11:45,510 - INFO - Successfully read AnimationStateMachine.swift
2024-11-05 17:11:45,510 - INFO - Successfully read RealityView+TouchControls.swift
2024-11-05 17:11:45,510 - INFO - Successfully read EntityExtensions.swift
2024-11-05 17:11:45,510 - INFO - Successfully read StringExtensions.swift
2024-11-05 17:11:45,510 - INFO - Successfully read Preview+AppStateEnvironment.swift
2024-11-05 17:11:45,510 - INFO - Successfully read ColorExtensions.swift
2024-11-05 17:11:45,510 - INFO - Successfully read RealityView+KeyboardControls.swift
2024-11-05 17:11:45,510 - INFO - Successfully read CaseIterableExtensions.swift
2024-11-05 17:11:45,510 - INFO - Successfully read JointPinComponent.swift
2024-11-05 17:11:45,510 - INFO - Successfully read JointPinSystem.swift
2024-11-05 17:11:45,510 - INFO - Successfully read StartScreenView.swift
2024-11-05 17:11:45,510 - INFO - Successfully read OrnamentView.swift
2024-11-05 17:11:45,510 - INFO - Successfully read SelectorViews.swift
2024-11-05 17:11:45,510 - INFO - Successfully read RobotView.swift
2024-11-05 17:11:45,511 - INFO - Successfully read RobotCustomizationView.swift
2024-11-05 17:11:45,511 - INFO - Successfully read ExplorationView.swift
2024-11-05 17:11:45,511 - INFO - Successfully read ContentView.swift
2024-11-05 17:11:45,513 - INFO - Successfully read EntryPoint.swift
2024-11-05 17:11:45,514 - INFO - Successfully read SpatialAudioView.swift
2024-11-05 17:11:45,514 - INFO - Successfully read DecibelSlider.swift
2024-11-05 17:11:45,514 - INFO - Successfully read AxisVisualizer.swift
2024-11-05 17:23:52,695 - INFO - Saved HTML to data/debug/.html
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/
2024-11-05 17:23:52,721 - INFO - Found videos link: /videos/
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/diorama
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/swift-splash
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/bot-anist
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/world
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/introductory-visionos-samples
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/#Overview
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:23:52,721 - INFO - Found documentation link: /documentation/SwiftUI
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/RealityKit
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/RealityKit/RealityView
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/arkit
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/SwiftUI
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/arkit
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/world
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/bot-anist
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/destination-video
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/happybeam
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/diorama
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/swift-splash
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/#topics
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/#App-construction
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/introductory-visionos-samples
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/#Design
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/#SwiftUI
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/world
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/bot-anist
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/swift-splash
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/diorama
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 17:23:52,722 - INFO - Found documentation link: /documentation/visionos/#ARKit
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/happybeam
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/placing-content-on-detected-planes
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/tracking-points-in-world-space
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/tracking-images-in-3d-space
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/#Video-playback
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/destination-video
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/#Xcode-and-Simulator
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/Xcode/configuring-your-app-icon
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/#Performance
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/bringing-your-app-to-visionos
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/accessing-the-main-camera
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/#app-top
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/#Overview
2024-11-05 17:23:52,723 - INFO - Found documentation link: /documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:23:52,724 - INFO - Found documentation link: /documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:23:52,724 - INFO - Found documentation link: /documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:23:52,724 - INFO - Found documentation link: /documentation/visionos/#topics
2024-11-05 17:23:52,724 - INFO - Found documentation link: /documentation/
2024-11-05 17:23:52,724 - INFO - Found documentation link: /documentation/
2024-11-05 17:23:52,724 - INFO - Found videos link: /videos/
2024-11-05 17:23:52,724 - INFO - Found videos link: /wwdc/
2024-11-05 17:23:52,752 - INFO - Found 74 other links
2024-11-05 17:23:52,752 - INFO - Found 72 documentation links
2024-11-05 17:23:52,752 - INFO - Found 2 videos links
2024-11-05 17:23:54,020 - INFO - Found 32 sections, 51 topics, and 0 samples
2024-11-05 17:23:55,065 - INFO - Saved HTML to data/debug/immersive-experiences.html
2024-11-05 17:23:55,068 - INFO - Found documentation link: /documentation/
2024-11-05 17:23:55,068 - INFO - Found documentation link: /documentation/
2024-11-05 17:23:55,068 - INFO - Found videos link: /videos/
2024-11-05 17:23:55,068 - INFO - Found videos link: /wwdc/
2024-11-05 17:23:55,087 - INFO - Found 71 other links
2024-11-05 17:23:55,087 - INFO - Found 1 documentation links
2024-11-05 17:23:55,087 - INFO - Found 2 videos links
2024-11-05 17:23:56,586 - INFO - Found 21 sections, 0 topics, and 0 samples
2024-11-05 17:23:57,495 - INFO - Saved HTML to data/debug/designing-for-visionos.html
2024-11-05 17:23:57,499 - INFO - Found documentation link: /documentation/
2024-11-05 17:23:57,499 - INFO - Found documentation link: /documentation/
2024-11-05 17:23:57,499 - INFO - Found videos link: /videos/
2024-11-05 17:23:57,499 - INFO - Found videos link: /wwdc/
2024-11-05 17:23:57,520 - INFO - Found 71 other links
2024-11-05 17:23:57,520 - INFO - Found 1 documentation links
2024-11-05 17:23:57,520 - INFO - Found 2 videos links
2024-11-05 17:23:58,744 - INFO - Found 15 sections, 0 topics, and 0 samples
2024-11-05 17:24:01,466 - ERROR - Error fetching content from /documentation/visionos/#Xcode-and-Simulator: /documentation/visionos/#Xcode-and-Simulator
2024-11-05 17:24:01,466 - ERROR - Error fetching content from /documentation/visionos/setting-up-access-to-arkit-data: /documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 17:24:01,466 - ERROR - Error fetching content from /documentation/visionos/understanding-the-visionos-render-pipeline: /documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 17:24:01,466 - ERROR - Error fetching content from /documentation/visionos/bringing-your-arkit-app-to-visionos: /documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 17:24:01,466 - ERROR - Error fetching content from /documentation/visionos: /documentation/visionos
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/improving-accessibility-support-in-your-app: /documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/positioning-and-sizing-windows: /documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/happybeam: /documentation/visionos/happybeam
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/placing-content-on-detected-planes: /documentation/visionos/placing-content-on-detected-planes
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/swift-splash: /documentation/visionos/swift-splash
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/avfoundation/media_playback/configuring_your_app_for_media_playback: /documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/checking-whether-your-app-is-compatible-with-visionos: /documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/#Enterprise-APIs-for-visionOS: /documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/destination-video: /documentation/visionos/destination-video
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/drawing-sharp-layer-based-content: /documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/diorama: /documentation/visionos/diorama
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos: /documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/#Overview: /documentation/visionos/#Overview
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/#app-top: /documentation/visionos/#app-top
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/#Expand-your-app-into-immersive-spaces: /documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:24:01,467 - ERROR - Error fetching content from /documentation/visionos/accessing-the-main-camera: /documentation/visionos/accessing-the-main-camera
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing: /documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/building-an-immersive-media-viewing-experience: /documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/world: /documentation/visionos/world
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/#SwiftUI: /documentation/visionos/#SwiftUI
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/presenting-windows-and-spaces: /documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/#Design: /documentation/visionos/#Design
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/Xcode/configuring-your-app-icon: /documentation/Xcode/configuring-your-app-icon
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/#iOS-migration-and-compatibility: /documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/tracking-images-in-3d-space: /documentation/visionos/tracking-images-in-3d-space
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/analyzing-the-performance-of-your-visionos-app: /documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/exploring_object_tracking_with_arkit: /documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/bot-anist: /documentation/visionos/bot-anist
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/understanding-the-realitykit-modular-architecture: /documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/visionos/designing-realitykit-content-with-reality-composer-pro: /documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/RealityKit: /documentation/RealityKit
2024-11-05 17:24:01,468 - ERROR - Error fetching content from /documentation/RealityKit/RealityView: /documentation/RealityKit/RealityView
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/#Video-playback: /documentation/visionos/#Video-playback
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator: /documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/#ARKit: /documentation/visionos/#ARKit
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/creating-your-first-visionos-app: /documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos: /documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/implementing-object-tracking-in-your-visionos-app: /documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/AVKit/trimming-and-exporting-media-in-visionos: /documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app: /documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app: /documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/#Dive-into-featured-sample-apps: /documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/#topics: /documentation/visionos/#topics
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/#Explore-new-kinds-of-interaction: /documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/adding-3d-content-to-your-app: /documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/bringing-your-app-to-visionos: /documentation/visionos/bringing-your-app-to-visionos
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/creating-a-performance-plan-for-visionos-app: /documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/tracking-points-in-world-space: /documentation/visionos/tracking-points-in-world-space
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/adopting-best-practices-for-privacy: /documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:24:01,469 - ERROR - Error fetching content from /documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis: /documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/visionos/making-your-app-compatible-with-visionos: /documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/visionos/building_local_experiences_with_room_tracking: /documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/AVKit/adopting-the-system-player-interface-in-visionos: /documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience: /documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/Xcode/running-your-app-in-simulator-or-on-a-device: /documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/visionos/introductory-visionos-samples: /documentation/visionos/introductory-visionos-samples
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/visionos/locating-and-decoding-barcodes-in-3d-space: /documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/visionos/creating-fully-immersive-experiences: /documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/: /documentation/
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/arkit: /documentation/arkit
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/visionos/enabling-video-reflections-in-an-immersive-environment: /documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player: /documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/visionos/#RealityKit-and-Reality-Composer-Pro: /documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/SwiftUI: /documentation/SwiftUI
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/visionos/#App-construction: /documentation/visionos/#App-construction
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/visionos/#Performance: /documentation/visionos/#Performance
2024-11-05 17:24:01,470 - ERROR - Error fetching content from /documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app: /documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 17:25:24,289 - INFO - Saved HTML to data/debug/.html
2024-11-05 17:25:24,313 - INFO - Found documentation link: /documentation/
2024-11-05 17:25:24,314 - INFO - Found videos link: /videos/
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/diorama
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/swift-splash
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/bot-anist
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/world
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/introductory-visionos-samples
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/#Overview
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/SwiftUI
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/RealityKit
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/RealityKit/RealityView
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/arkit
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/SwiftUI
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/arkit
2024-11-05 17:25:24,314 - INFO - Found documentation link: /documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/world
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/bot-anist
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/destination-video
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/happybeam
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/diorama
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/swift-splash
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/#topics
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/#App-construction
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/introductory-visionos-samples
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/#Design
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/#SwiftUI
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/world
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/bot-anist
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/swift-splash
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/diorama
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/#ARKit
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/happybeam
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/placing-content-on-detected-planes
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/tracking-points-in-world-space
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/tracking-images-in-3d-space
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/#Video-playback
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/destination-video
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/#Xcode-and-Simulator
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/Xcode/configuring-your-app-icon
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/#Performance
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/bringing-your-app-to-visionos
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 17:25:24,315 - INFO - Found documentation link: /documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 17:25:24,316 - INFO - Found documentation link: /documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 17:25:24,316 - INFO - Found documentation link: /documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 17:25:24,316 - INFO - Found documentation link: /documentation/visionos/accessing-the-main-camera
2024-11-05 17:25:24,316 - INFO - Found documentation link: /documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 17:25:24,316 - INFO - Found documentation link: /documentation/visionos/#app-top
2024-11-05 17:25:24,316 - INFO - Found documentation link: /documentation/visionos/#Overview
2024-11-05 17:25:24,316 - INFO - Found documentation link: /documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:25:24,316 - INFO - Found documentation link: /documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:25:24,316 - INFO - Found documentation link: /documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:25:24,316 - INFO - Found documentation link: /documentation/visionos/#topics
2024-11-05 17:25:24,316 - INFO - Found documentation link: /documentation/
2024-11-05 17:25:24,316 - INFO - Found documentation link: /documentation/
2024-11-05 17:25:24,316 - INFO - Found videos link: /videos/
2024-11-05 17:25:24,316 - INFO - Found videos link: /wwdc/
2024-11-05 17:25:24,346 - INFO - Found 74 other links
2024-11-05 17:25:24,346 - INFO - Found 72 documentation links
2024-11-05 17:25:24,346 - INFO - Found 2 videos links
2024-11-05 17:25:25,766 - INFO - Found 32 sections, 51 topics, and 0 samples
2024-11-05 17:25:27,124 - INFO - Saved HTML to data/debug/immersive-experiences.html
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/
2024-11-05 17:25:27,135 - INFO - Found videos link: /videos/
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/SwiftUI/SurroundingsEffect
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/SwiftUI/ImmersionStyle/automatic
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/SwiftUI/ImmersionStyle/mixed
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/arkit
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/SwiftUI/ImmersionStyle/full
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/SwiftUI/SurroundingsEffect
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/arkit/scenereconstructionprovider
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/visionOS/creating-fully-immersive-experiences
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/visionOS/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/SwiftUI/ImmersionStyle
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/SwiftUI/Immersive-spaces
2024-11-05 17:25:27,135 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10087
2024-11-05 17:25:27,135 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 17:25:27,135 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10075
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/
2024-11-05 17:25:27,135 - INFO - Found documentation link: /documentation/
2024-11-05 17:25:27,135 - INFO - Found videos link: /videos/
2024-11-05 17:25:27,135 - INFO - Found videos link: /wwdc/
2024-11-05 17:25:27,154 - INFO - Found 104 other links
2024-11-05 17:25:27,154 - INFO - Found 12 documentation links
2024-11-05 17:25:27,154 - INFO - Found 5 videos links
2024-11-05 17:25:28,616 - INFO - Found 21 sections, 0 topics, and 0 samples
2024-11-05 17:25:29,819 - INFO - Saved HTML to data/debug/designing-for-visionos.html
2024-11-05 17:25:29,826 - INFO - Found documentation link: /documentation/
2024-11-05 17:25:29,826 - INFO - Found videos link: /videos/
2024-11-05 17:25:29,826 - INFO - Found documentation link: /documentation/visionOS/creating-your-first-visionos-app
2024-11-05 17:25:29,826 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10096
2024-11-05 17:25:29,826 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10086
2024-11-05 17:25:29,826 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 17:25:29,826 - INFO - Found documentation link: /documentation/
2024-11-05 17:25:29,826 - INFO - Found documentation link: /documentation/
2024-11-05 17:25:29,826 - INFO - Found videos link: /videos/
2024-11-05 17:25:29,826 - INFO - Found videos link: /wwdc/
2024-11-05 17:25:29,846 - INFO - Found 105 other links
2024-11-05 17:25:29,846 - INFO - Found 2 documentation links
2024-11-05 17:25:29,846 - INFO - Found 5 videos links
2024-11-05 17:25:31,092 - INFO - Found 15 sections, 0 topics, and 0 samples
2024-11-05 17:25:33,916 - ERROR - Error fetching content from /documentation/visionos/drawing-sharp-layer-based-content: /documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:25:33,916 - ERROR - Error fetching content from /documentation/visionos/#Enterprise-APIs-for-visionOS: /documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 17:25:33,916 - ERROR - Error fetching content from /documentation/visionos/#Overview: /documentation/visionos/#Overview
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/arkit: /documentation/arkit
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/visionos/building-an-immersive-media-viewing-experience: /documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/visionos/destination-video: /documentation/visionos/destination-video
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/Xcode/running-your-app-in-simulator-or-on-a-device: /documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator: /documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/visionos/creating-fully-immersive-experiences: /documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/SwiftUI/ImmersionStyle/automatic: /documentation/SwiftUI/ImmersionStyle/automatic
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/visionos/#RealityKit-and-Reality-Composer-Pro: /documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/SwiftUI/Immersive-spaces: /documentation/SwiftUI/Immersive-spaces
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app: /documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/visionos/#iOS-migration-and-compatibility: /documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/visionos/#App-construction: /documentation/visionos/#App-construction
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/visionos/#app-top: /documentation/visionos/#app-top
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/visionos/presenting-windows-and-spaces: /documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:25:33,917 - ERROR - Error fetching content from /documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos: /documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/visionos/#Explore-new-kinds-of-interaction: /documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/avfoundation/media_playback/configuring_your_app_for_media_playback: /documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player: /documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/visionOS/creating-fully-immersive-experiences: /documentation/visionOS/creating-fully-immersive-experiences
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/RealityKit/RealityView: /documentation/RealityKit/RealityView
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos: /documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/AVKit/adopting-the-system-player-interface-in-visionos: /documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/visionos/building_local_experiences_with_room_tracking: /documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/visionos/#Performance: /documentation/visionos/#Performance
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/visionos/#ARKit: /documentation/visionos/#ARKit
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/visionos/enabling-video-reflections-in-an-immersive-environment: /documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/AVKit/trimming-and-exporting-media-in-visionos: /documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/visionos/analyzing-the-performance-of-your-visionos-app: /documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/RealityKit: /documentation/RealityKit
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/visionos/exploring_object_tracking_with_arkit: /documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/visionos/checking-whether-your-app-is-compatible-with-visionos: /documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/visionos/#Xcode-and-Simulator: /documentation/visionos/#Xcode-and-Simulator
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/SwiftUI/SurroundingsEffect: /documentation/SwiftUI/SurroundingsEffect
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/: /documentation/
2024-11-05 17:25:33,918 - ERROR - Error fetching content from /documentation/visionos/creating-your-first-visionos-app: /documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/locating-and-decoding-barcodes-in-3d-space: /documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/creating-a-performance-plan-for-visionos-app: /documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/SwiftUI/ImmersionStyle/progressive: /documentation/SwiftUI/ImmersionStyle/progressive
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/accessing-the-main-camera: /documentation/visionos/accessing-the-main-camera
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis: /documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/positioning-and-sizing-windows: /documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/adopting-best-practices-for-privacy: /documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/placing-content-on-detected-planes: /documentation/visionos/placing-content-on-detected-planes
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/understanding-the-visionos-render-pipeline: /documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/#Dive-into-featured-sample-apps: /documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/bringing-your-arkit-app-to-visionos: /documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/bot-anist: /documentation/visionos/bot-anist
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/#Expand-your-app-into-immersive-spaces: /documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/diorama: /documentation/visionos/diorama
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience: /documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing: /documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionOS/incorporating-real-world-surroundings-in-an-immersive-experience: /documentation/visionOS/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/SwiftUI/ImmersionStyle/mixed: /documentation/SwiftUI/ImmersionStyle/mixed
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/swift-splash: /documentation/visionos/swift-splash
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app: /documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/implementing-object-tracking-in-your-visionos-app: /documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 17:25:33,919 - ERROR - Error fetching content from /documentation/visionos/improving-accessibility-support-in-your-app: /documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/tracking-points-in-world-space: /documentation/visionos/tracking-points-in-world-space
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/#Design: /documentation/visionos/#Design
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/world: /documentation/visionos/world
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/SwiftUI/ImmersionStyle: /documentation/SwiftUI/ImmersionStyle
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionOS/creating-your-first-visionos-app: /documentation/visionOS/creating-your-first-visionos-app
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos: /documentation/visionos
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/introductory-visionos-samples: /documentation/visionos/introductory-visionos-samples
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/adding-3d-content-to-your-app: /documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/arkit/scenereconstructionprovider: /documentation/arkit/scenereconstructionprovider
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/bringing-your-app-to-visionos: /documentation/visionos/bringing-your-app-to-visionos
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/SwiftUI: /documentation/SwiftUI
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app: /documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/understanding-the-realitykit-modular-architecture: /documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/happybeam: /documentation/visionos/happybeam
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/designing-realitykit-content-with-reality-composer-pro: /documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/#Video-playback: /documentation/visionos/#Video-playback
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/#topics: /documentation/visionos/#topics
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/#SwiftUI: /documentation/visionos/#SwiftUI
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/tracking-images-in-3d-space: /documentation/visionos/tracking-images-in-3d-space
2024-11-05 17:25:33,920 - ERROR - Error fetching content from /documentation/visionos/setting-up-access-to-arkit-data: /documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 17:25:33,921 - ERROR - Error fetching content from /documentation/SwiftUI/ImmersionStyle/full: /documentation/SwiftUI/ImmersionStyle/full
2024-11-05 17:25:33,921 - ERROR - Error fetching content from /documentation/Xcode/configuring-your-app-icon: /documentation/Xcode/configuring-your-app-icon
2024-11-05 17:25:33,921 - ERROR - Error fetching content from /documentation/visionos/making-your-app-compatible-with-visionos: /documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 17:26:22,534 - INFO - Saved HTML to data/debug/.html
2024-11-05 17:26:22,538 - INFO - Found documentation link: /documentation/
2024-11-05 17:26:22,538 - INFO - Found videos link: /videos/
2024-11-05 17:26:22,538 - INFO - Found documentation link: /documentation/
2024-11-05 17:26:22,538 - INFO - Found documentation link: /documentation/
2024-11-05 17:26:22,538 - INFO - Found videos link: /videos/
2024-11-05 17:26:22,538 - INFO - Found videos link: /wwdc/
2024-11-05 17:26:22,560 - INFO - Found 71 other links
2024-11-05 17:26:22,560 - INFO - Found 1 documentation links
2024-11-05 17:26:22,561 - INFO - Found 2 videos links
2024-11-05 17:26:23,623 - INFO - Found 10 sections, 0 topics, and 0 samples
2024-11-05 17:26:25,281 - INFO - Saved HTML to data/debug/immersive-experiences.html
2024-11-05 17:26:25,285 - INFO - Found documentation link: /documentation/
2024-11-05 17:26:25,285 - INFO - Found videos link: /videos/
2024-11-05 17:26:25,285 - INFO - Found documentation link: /documentation/
2024-11-05 17:26:25,285 - INFO - Found documentation link: /documentation/
2024-11-05 17:26:25,285 - INFO - Found videos link: /videos/
2024-11-05 17:26:25,285 - INFO - Found videos link: /wwdc/
2024-11-05 17:26:25,304 - INFO - Found 71 other links
2024-11-05 17:26:25,304 - INFO - Found 1 documentation links
2024-11-05 17:26:25,304 - INFO - Found 2 videos links
2024-11-05 17:26:26,177 - INFO - Found 10 sections, 0 topics, and 0 samples
2024-11-05 17:26:27,092 - INFO - Saved HTML to data/debug/designing-for-visionos.html
2024-11-05 17:26:27,097 - INFO - Found documentation link: /documentation/
2024-11-05 17:26:27,097 - INFO - Found documentation link: /documentation/
2024-11-05 17:26:27,097 - INFO - Found videos link: /videos/
2024-11-05 17:26:27,097 - INFO - Found videos link: /wwdc/
2024-11-05 17:26:27,116 - INFO - Found 71 other links
2024-11-05 17:26:27,116 - INFO - Found 1 documentation links
2024-11-05 17:26:27,116 - INFO - Found 2 videos links
2024-11-05 17:26:27,993 - INFO - Found 10 sections, 0 topics, and 0 samples
2024-11-05 17:29:24,363 - INFO - Saved HTML to data/debug/visionos.html
2024-11-05 17:29:24,366 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:29:24,366 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:29:24,366 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:29:24,366 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 17:29:24,385 - INFO - Found 71 other links
2024-11-05 17:29:24,386 - INFO - Found 1 documentation links
2024-11-05 17:29:24,386 - INFO - Found 2 videos links
2024-11-05 17:29:25,303 - INFO - Found 10 sections, 0 topics, and 0 samples
2024-11-05 17:29:26,328 - INFO - Saved HTML to data/debug/immersive-experiences.html
2024-11-05 17:29:26,332 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:29:26,332 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:29:26,332 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:29:26,332 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 17:29:26,350 - INFO - Found 71 other links
2024-11-05 17:29:26,350 - INFO - Found 1 documentation links
2024-11-05 17:29:26,350 - INFO - Found 2 videos links
2024-11-05 17:29:27,245 - INFO - Found 10 sections, 0 topics, and 0 samples
2024-11-05 17:29:28,116 - INFO - Saved HTML to data/debug/designing-for-visionos.html
2024-11-05 17:29:28,120 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:29:28,121 - INFO - Found documentation link: https://developer.apple.com/documentation/
2024-11-05 17:29:28,121 - INFO - Found videos link: https://developer.apple.com/videos/
2024-11-05 17:29:28,121 - INFO - Found videos link: https://developer.apple.com/wwdc/
2024-11-05 17:29:28,141 - INFO - Found 71 other links
2024-11-05 17:29:28,141 - INFO - Found 1 documentation links
2024-11-05 17:29:28,141 - INFO - Found 2 videos links
2024-11-05 17:29:29,017 - INFO - Found 10 sections, 0 topics, and 0 samples
2024-11-05 17:30:59,511 - INFO - Saved HTML to data/debug/visionos.html
2024-11-05 17:30:59,537 - INFO - Found documentation link: /documentation/
2024-11-05 17:30:59,538 - INFO - Found videos link: /videos/
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/diorama
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/swift-splash
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/bot-anist
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/world
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/introductory-visionos-samples
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/#Overview
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/SwiftUI
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/RealityKit
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/RealityKit/RealityView
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/arkit
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/SwiftUI
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/arkit
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/world
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/bot-anist
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/destination-video
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/happybeam
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/diorama
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/swift-splash
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/#topics
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/#App-construction
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/creating-your-first-visionos-app
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/adding-3d-content-to-your-app
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/creating-fully-immersive-experiences
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/drawing-sharp-layer-based-content
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/introductory-visionos-samples
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/#Design
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/adopting-best-practices-for-privacy
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/improving-accessibility-support-in-your-app
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/#SwiftUI
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/world
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/presenting-windows-and-spaces
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/positioning-and-sizing-windows
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/#RealityKit-and-Reality-Composer-Pro
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/bot-anist
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/swift-splash
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/diorama
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/building-an-immersive-media-viewing-experience
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/enabling-video-reflections-in-an-immersive-environment
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/understanding-the-realitykit-modular-architecture
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/designing-realitykit-content-with-reality-composer-pro
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/capturing-screenshots-and-video-from-your-apple-vision-pro-for-2d-viewing
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/implementing-object-tracking-in-your-visionos-app
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/#ARKit
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/happybeam
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/setting-up-access-to-arkit-data
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/incorporating-real-world-surroundings-in-an-immersive-experience
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/placing-content-on-detected-planes
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/tracking-points-in-world-space
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/tracking-images-in-3d-space
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/exploring_object_tracking_with_arkit
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/building_local_experiences_with_room_tracking
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/#Video-playback
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/visionos/destination-video
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/avfoundation/media_playback/configuring_your_app_for_media_playback
2024-11-05 17:30:59,538 - INFO - Found documentation link: /documentation/AVKit/adopting-the-system-player-interface-in-visionos
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/avfoundation/media_playback/controlling_the_transport_behavior_of_a_player
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/avfoundation/media_playback/monitoring_playback_progress_in_your_app
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/AVKit/trimming-and-exporting-media-in-visionos
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/#Xcode-and-Simulator
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/Xcode/configuring-your-app-icon
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/Xcode/diagnosing-and-resolving-bugs-in-your-running-app
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/Xcode/diagnosing-issues-in-the-appearance-of-your-running-app
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/Xcode/running-your-app-in-simulator-or-on-a-device
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/Xcode/interacting-with-your-app-in-the-visionos-simulator
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/#Performance
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/creating-a-performance-plan-for-visionos-app
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/analyzing-the-performance-of-your-visionos-app
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/reducing-the-rendering-cost-of-your-ui-on-visionos
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/reducing-the-rendering-cost-of-realitykit-content-on-visionos
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/understanding-the-visionos-render-pipeline
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/#iOS-migration-and-compatibility
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/bringing-your-app-to-visionos
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/bringing-your-arkit-app-to-visionos
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/checking-whether-your-app-is-compatible-with-visionos
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/making-your-app-compatible-with-visionos
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/#Enterprise-APIs-for-visionOS
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/building-spatial-experiences-for-business-apps-with-enterprise-apis
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/accessing-the-main-camera
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/locating-and-decoding-barcodes-in-3d-space
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/#app-top
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/#Overview
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/#Expand-your-app-into-immersive-spaces
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/#Explore-new-kinds-of-interaction
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/#Dive-into-featured-sample-apps
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/visionos/#topics
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/
2024-11-05 17:30:59,539 - INFO - Found documentation link: /documentation/
2024-11-05 17:30:59,539 - INFO - Found videos link: /videos/
2024-11-05 17:30:59,539 - INFO - Found videos link: /wwdc/
2024-11-05 17:30:59,567 - INFO - Found 74 other links
2024-11-05 17:30:59,567 - INFO - Found 72 documentation links
2024-11-05 17:30:59,567 - INFO - Found 2 videos links
2024-11-05 17:31:00,964 - INFO - Found 32 sections, 51 topics, and 0 samples
2024-11-05 17:31:01,888 - INFO - Saved HTML to data/debug/immersive-experiences.html
2024-11-05 17:31:01,892 - INFO - Found documentation link: /documentation/
2024-11-05 17:31:01,892 - INFO - Found documentation link: /documentation/
2024-11-05 17:31:01,892 - INFO - Found videos link: /videos/
2024-11-05 17:31:01,892 - INFO - Found videos link: /wwdc/
2024-11-05 17:31:01,915 - INFO - Found 71 other links
2024-11-05 17:31:01,915 - INFO - Found 1 documentation links
2024-11-05 17:31:01,915 - INFO - Found 2 videos links
2024-11-05 17:31:02,907 - INFO - Found 10 sections, 0 topics, and 0 samples
2024-11-05 17:31:04,677 - INFO - Saved HTML to data/debug/designing-for-visionos.html
2024-11-05 17:31:04,685 - INFO - Found documentation link: /documentation/
2024-11-05 17:31:04,685 - INFO - Found videos link: /videos/
2024-11-05 17:31:04,685 - INFO - Found documentation link: /documentation/visionOS/creating-your-first-visionos-app
2024-11-05 17:31:04,685 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10096
2024-11-05 17:31:04,685 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2024/10086
2024-11-05 17:31:04,685 - INFO - Found videos link: https://developer.apple.com/videos/play/wwdc2023/10072
2024-11-05 17:31:04,685 - INFO - Found documentation link: /documentation/
2024-11-05 17:31:04,685 - INFO - Found documentation link: /documentation/
2024-11-05 17:31:04,685 - INFO - Found videos link: /videos/
2024-11-05 17:31:04,685 - INFO - Found videos link: /wwdc/
2024-11-05 17:31:04,707 - INFO - Found 104 other links
2024-11-05 17:31:04,707 - INFO - Found 2 documentation links
2024-11-05 17:31:04,707 - INFO - Found 5 videos links
2024-11-05 17:31:05,716 - INFO - Found 10 sections, 0 topics, and 0 samples
2024-11-05 17:31:07,214 - INFO - Found download URL: https://docs-assets.developer.apple.com/published/afe8dfd556ef/HelloWorld.zip
2024-11-05 17:31:11,035 - INFO - Downloaded project to data/projects/hello-world
2024-11-05 17:31:12,922 - INFO - Successfully read WorldApp.swift
2024-11-05 17:31:12,922 - INFO - Successfully read SliderGridRow.swift
2024-11-05 17:31:12,922 - INFO - Successfully read EarthSettings.swift
2024-11-05 17:31:12,922 - INFO - Successfully read GlobeSettings.swift
2024-11-05 17:31:12,922 - INFO - Successfully read OrbitSettings.swift
2024-11-05 17:31:12,922 - INFO - Successfully read SatelliteSettings.swift
2024-11-05 17:31:12,922 - INFO - Successfully read SettingsButton.swift
2024-11-05 17:31:12,923 - INFO - Successfully read SolarSystemSettings.swift
2024-11-05 17:31:12,923 - INFO - Successfully read OrbitModule.swift
2024-11-05 17:31:12,923 - INFO - Successfully read OrbitToggle.swift
2024-11-05 17:31:12,923 - INFO - Successfully read Orbit.swift
2024-11-05 17:31:12,923 - INFO - Successfully read TypeTextModifier.swift
2024-11-05 17:31:12,923 - INFO - Successfully read PlacementGesturesModifier.swift
2024-11-05 17:31:12,923 - INFO - Successfully read DragRotationModifier.swift
2024-11-05 17:31:12,923 - INFO - Successfully read GlobeToggle.swift
2024-11-05 17:31:12,923 - INFO - Successfully read GlobeControls.swift
2024-11-05 17:31:12,923 - INFO - Successfully read GlobeModule.swift
2024-11-05 17:31:12,923 - INFO - Successfully read Globe.swift
2024-11-05 17:31:12,924 - INFO - Successfully read Earth.swift
2024-11-05 17:31:12,924 - INFO - Successfully read Starfield.swift
2024-11-05 17:31:12,924 - INFO - Successfully read Sun.swift
2024-11-05 17:31:12,924 - INFO - Successfully read ViewModel.swift
2024-11-05 17:31:12,924 - INFO - Successfully read Module.swift
2024-11-05 17:31:12,924 - INFO - Successfully read SolarSystemToggle.swift
2024-11-05 17:31:12,924 - INFO - Successfully read SolarSystemModule.swift
2024-11-05 17:31:12,924 - INFO - Successfully read SolarSystem.swift
2024-11-05 17:31:12,924 - INFO - Successfully read SolarSystemControls.swift
2024-11-05 17:31:12,924 - INFO - Successfully read TraceSystem.swift
2024-11-05 17:31:12,924 - INFO - Successfully read RotationSystem.swift
2024-11-05 17:31:12,924 - INFO - Successfully read ModuleDetail.swift
2024-11-05 17:31:12,924 - INFO - Successfully read Modules.swift
2024-11-05 17:31:12,924 - INFO - Successfully read TableOfContents.swift
2024-11-05 17:31:12,924 - INFO - Successfully read ModuleCard.swift
2024-11-05 17:31:12,924 - INFO - Successfully read Entity+Trace.swift
2024-11-05 17:31:12,924 - INFO - Successfully read EarthEntity+Configuration.swift
2024-11-05 17:31:12,925 - INFO - Successfully read SatelliteEntity.swift
2024-11-05 17:31:12,925 - INFO - Successfully read Entity+Sunlight.swift
2024-11-05 17:31:12,925 - INFO - Successfully read EarthEntity.swift
2024-11-05 17:31:12,925 - INFO - Successfully read SatelliteEntity+Configuration.swift
2024-11-05 17:31:12,925 - INFO - Successfully read Package.swift
2024-11-05 17:31:12,925 - INFO - Successfully read SunPositionSystem.swift
2024-11-05 17:31:12,925 - INFO - Successfully read WorldAssets.swift
